{"id":"fa9912cc3326d964b45f7240217ed2c6","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Context} from \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * The initial owner is set to the address provided by the deployer. This can\r\n * later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    constructor(address initialOwner) {\r\n        if (initialOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC-20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\ninterface IERC5267 {\r\n    /**\r\n     * @dev MAY be emitted to signal that the domain could have changed.\r\n     */\r\n    event EIP712DomainChanged();\r\n\r\n    /**\r\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\r\n     * signature.\r\n     */\r\n    function eip712Domain()\r\n        external\r\n        view\r\n        returns (\r\n            bytes1 fields,\r\n            string memory name,\r\n            string memory version,\r\n            uint256 chainId,\r\n            address verifyingContract,\r\n            bytes32 salt,\r\n            uint256[] memory extensions\r\n        );\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"./IERC20.sol\";\r\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\r\nimport {Context} from \"../../utils/Context.sol\";\r\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC-20\r\n * applications.\r\n */\r\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\r\n    mapping(address account => uint256) private _balances;\r\n\r\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\r\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\r\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\r\n     * this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\r\n     * true using the following override:\r\n     *\r\n     * ```solidity\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Does not emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance < type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\r\nimport {ERC20} from \"../ERC20.sol\";\r\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\r\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\r\nimport {Nonces} from \"../../../utils/Nonces.sol\";\r\n\r\n/**\r\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\r\n    bytes32 private constant PERMIT_TYPEHASH =\r\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\r\n\r\n    /**\r\n     * @dev Permit deadline has expired.\r\n     */\r\n    error ERC2612ExpiredSignature(uint256 deadline);\r\n\r\n    /**\r\n     * @dev Mismatched signature.\r\n     */\r\n    error ERC2612InvalidSigner(address signer, address owner);\r\n\r\n    /**\r\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\r\n     *\r\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\r\n     */\r\n    constructor(string memory name) EIP712(name, \"1\") {}\r\n\r\n    /**\r\n     * @inheritdoc IERC20Permit\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) public virtual {\r\n        if (block.timestamp > deadline) {\r\n            revert ERC2612ExpiredSignature(deadline);\r\n        }\r\n\r\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\r\n\r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n\r\n        address signer = ECDSA.recover(hash, v, r, s);\r\n        if (signer != owner) {\r\n            revert ERC2612InvalidSigner(signer, owner);\r\n        }\r\n\r\n        _approve(owner, spender, value);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc IERC20Permit\r\n     */\r\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\r\n        return super.nonces(owner);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc IERC20Permit\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\r\n        return _domainSeparatorV4();\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"../IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n *\r\n * ==== Security Considerations\r\n *\r\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\r\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\r\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\r\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\r\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\r\n * generally recommended is:\r\n *\r\n * ```solidity\r\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\r\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\r\n *     doThing(..., value);\r\n * }\r\n *\r\n * function doThing(..., uint256 value) public {\r\n *     token.safeTransferFrom(msg.sender, address(this), value);\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\r\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\r\n * {SafeERC20-safeTransferFrom}).\r\n *\r\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\r\n * contracts should have entry points that don't rely on permit.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     *\r\n     * CAUTION: See Security Considerations above.\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC-20 standard as defined in the ERC.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\r\n *\r\n * These functions can be used to verify that a message was signed by the holder\r\n * of the private keys of a given address.\r\n */\r\nlibrary ECDSA {\r\n    enum RecoverError {\r\n        NoError,\r\n        InvalidSignature,\r\n        InvalidSignatureLength,\r\n        InvalidSignatureS\r\n    }\r\n\r\n    /**\r\n     * @dev The signature derives the `address(0)`.\r\n     */\r\n    error ECDSAInvalidSignature();\r\n\r\n    /**\r\n     * @dev The signature has an invalid length.\r\n     */\r\n    error ECDSAInvalidSignatureLength(uint256 length);\r\n\r\n    /**\r\n     * @dev The signature has an S value that is in the upper half order.\r\n     */\r\n    error ECDSAInvalidSignatureS(bytes32 s);\r\n\r\n    /**\r\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\r\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\r\n     * and a bytes32 providing additional information about the error.\r\n     *\r\n     * If no error is returned, then the address can be used for verification purposes.\r\n     *\r\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\r\n     * this function rejects them by requiring the `s` value to be in the lower\r\n     * half order, and the `v` value to be either 27 or 28.\r\n     *\r\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\r\n     * verification to be secure: it is possible to craft signatures that\r\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\r\n     * this is by receiving a hash of the original message (which may otherwise\r\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\r\n     *\r\n     * Documentation for signature generation:\r\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\r\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        bytes memory signature\r\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\r\n        if (signature.length == 65) {\r\n            bytes32 r;\r\n            bytes32 s;\r\n            uint8 v;\r\n            // ecrecover takes the signature parameters, and the only way to get them\r\n            // currently is to use assembly.\r\n            assembly (\"memory-safe\") {\r\n                r := mload(add(signature, 0x20))\r\n                s := mload(add(signature, 0x40))\r\n                v := byte(0, mload(add(signature, 0x60)))\r\n            }\r\n            return tryRecover(hash, v, r, s);\r\n        } else {\r\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address that signed a hashed message (`hash`) with\r\n     * `signature`. This address can then be used for verification purposes.\r\n     *\r\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\r\n     * this function rejects them by requiring the `s` value to be in the lower\r\n     * half order, and the `v` value to be either 27 or 28.\r\n     *\r\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\r\n     * verification to be secure: it is possible to craft signatures that\r\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\r\n     * this is by receiving a hash of the original message (which may otherwise\r\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\r\n     */\r\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\r\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\r\n        _throwError(error, errorArg);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\r\n     *\r\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        bytes32 r,\r\n        bytes32 vs\r\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\r\n        unchecked {\r\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\r\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\r\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\r\n            return tryRecover(hash, v, r, s);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\r\n     */\r\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\r\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\r\n        _throwError(error, errorArg);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\r\n     * `r` and `s` signature fields separately.\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\r\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\r\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\r\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\r\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\r\n        //\r\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\r\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\r\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\r\n        // these malleable signatures as well.\r\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\r\n            return (address(0), RecoverError.InvalidSignatureS, s);\r\n        }\r\n\r\n        // If the signature is valid (and not malleable), return the signer address\r\n        address signer = ecrecover(hash, v, r, s);\r\n        if (signer == address(0)) {\r\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\r\n        }\r\n\r\n        return (signer, RecoverError.NoError, bytes32(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\r\n     * `r` and `s` signature fields separately.\r\n     */\r\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\r\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\r\n        _throwError(error, errorArg);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\r\n     */\r\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\r\n        if (error == RecoverError.NoError) {\r\n            return; // no error: do nothing\r\n        } else if (error == RecoverError.InvalidSignature) {\r\n            revert ECDSAInvalidSignature();\r\n        } else if (error == RecoverError.InvalidSignatureLength) {\r\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\r\n        } else if (error == RecoverError.InvalidSignatureS) {\r\n            revert ECDSAInvalidSignatureS(errorArg);\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\r\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\r\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\r\n\r\n/**\r\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\r\n *\r\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\r\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\r\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\r\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\r\n *\r\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\r\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\r\n * ({_hashTypedDataV4}).\r\n *\r\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\r\n * the chain id to protect against replay attacks on an eventual fork of the chain.\r\n *\r\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\r\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\r\n *\r\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\r\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\r\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\r\n *\r\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\r\n */\r\nabstract contract EIP712 is IERC5267 {\r\n    using ShortStrings for *;\r\n\r\n    bytes32 private constant TYPE_HASH =\r\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\r\n\r\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\r\n    // invalidate the cached domain separator if the chain id changes.\r\n    bytes32 private immutable _cachedDomainSeparator;\r\n    uint256 private immutable _cachedChainId;\r\n    address private immutable _cachedThis;\r\n\r\n    bytes32 private immutable _hashedName;\r\n    bytes32 private immutable _hashedVersion;\r\n\r\n    ShortString private immutable _name;\r\n    ShortString private immutable _version;\r\n    string private _nameFallback;\r\n    string private _versionFallback;\r\n\r\n    /**\r\n     * @dev Initializes the domain separator and parameter caches.\r\n     *\r\n     * The meaning of `name` and `version` is specified in\r\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\r\n     *\r\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\r\n     * - `version`: the current major version of the signing domain.\r\n     *\r\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\r\n     * contract upgrade].\r\n     */\r\n    constructor(string memory name, string memory version) {\r\n        _name = name.toShortStringWithFallback(_nameFallback);\r\n        _version = version.toShortStringWithFallback(_versionFallback);\r\n        _hashedName = keccak256(bytes(name));\r\n        _hashedVersion = keccak256(bytes(version));\r\n\r\n        _cachedChainId = block.chainid;\r\n        _cachedDomainSeparator = _buildDomainSeparator();\r\n        _cachedThis = address(this);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the domain separator for the current chain.\r\n     */\r\n    function _domainSeparatorV4() internal view returns (bytes32) {\r\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\r\n            return _cachedDomainSeparator;\r\n        } else {\r\n            return _buildDomainSeparator();\r\n        }\r\n    }\r\n\r\n    function _buildDomainSeparator() private view returns (bytes32) {\r\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\r\n    }\r\n\r\n    /**\r\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\r\n     * function returns the hash of the fully encoded EIP712 message for this domain.\r\n     *\r\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\r\n     *\r\n     * ```solidity\r\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\r\n     *     keccak256(\"Mail(address to,string contents)\"),\r\n     *     mailTo,\r\n     *     keccak256(bytes(mailContents))\r\n     * )));\r\n     * address signer = ECDSA.recover(digest, signature);\r\n     * ```\r\n     */\r\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\r\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC-5267}.\r\n     */\r\n    function eip712Domain()\r\n        public\r\n        view\r\n        virtual\r\n        returns (\r\n            bytes1 fields,\r\n            string memory name,\r\n            string memory version,\r\n            uint256 chainId,\r\n            address verifyingContract,\r\n            bytes32 salt,\r\n            uint256[] memory extensions\r\n        )\r\n    {\r\n        return (\r\n            hex\"0f\", // 01111\r\n            _EIP712Name(),\r\n            _EIP712Version(),\r\n            block.chainid,\r\n            address(this),\r\n            bytes32(0),\r\n            new uint256[](0)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev The name parameter for the EIP712 domain.\r\n     *\r\n     * NOTE: By default this function reads _name which is an immutable value.\r\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function _EIP712Name() internal view returns (string memory) {\r\n        return _name.toStringWithFallback(_nameFallback);\r\n    }\r\n\r\n    /**\r\n     * @dev The version parameter for the EIP712 domain.\r\n     *\r\n     * NOTE: By default this function reads _version which is an immutable value.\r\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function _EIP712Version() internal view returns (string memory) {\r\n        return _version.toStringWithFallback(_versionFallback);\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Strings} from \"../Strings.sol\";\r\n\r\n/**\r\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\r\n *\r\n * The library provides methods for generating a hash of a message that conforms to the\r\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\r\n * specifications.\r\n */\r\nlibrary MessageHashUtils {\r\n    /**\r\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\r\n     * `0x45` (`personal_sign` messages).\r\n     *\r\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\r\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\r\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\r\n     *\r\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\r\n     * keccak256, although any bytes32 value can be safely used because the final digest will\r\n     * be re-hashed.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\r\n        assembly (\"memory-safe\") {\r\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\r\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\r\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\r\n     * `0x45` (`personal_sign` messages).\r\n     *\r\n     * The digest is calculated by prefixing an arbitrary `message` with\r\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\r\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\r\n        return\r\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\r\n     * `0x00` (data with intended validator).\r\n     *\r\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\r\n     * `validator` address. Then hashing the result.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\r\n     *\r\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\r\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\r\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\r\n        assembly (\"memory-safe\") {\r\n            let ptr := mload(0x40)\r\n            mstore(ptr, hex\"19_01\")\r\n            mstore(add(ptr, 0x02), domainSeparator)\r\n            mstore(add(ptr, 0x22), structHash)\r\n            digest := keccak256(ptr, 0x42)\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Panic} from \"../Panic.sol\";\r\nimport {SafeCast} from \"./SafeCast.sol\";\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\r\n     *\r\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\r\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\r\n     * one branch when needed, making this function more expensive.\r\n     */\r\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\r\n        unchecked {\r\n            // branchless ternary works because:\r\n            // b ^ (a ^ b) == a\r\n            // b ^ 0 == b\r\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return ternary(a > b, a, b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return ternary(a < b, a, b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds towards infinity instead\r\n     * of rounding towards zero.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (b == 0) {\r\n            // Guarantee the same behavior as in a regular Solidity division.\r\n            Panic.panic(Panic.DIVISION_BY_ZERO);\r\n        }\r\n\r\n        // The following calculation ensures accurate ceiling division without overflow.\r\n        // Since a is non-zero, (a - 1) / b will not overflow.\r\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\r\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\r\n        // when a = type(uint256).max and b = 1.\r\n        unchecked {\r\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\r\n     * denominator == 0.\r\n     *\r\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\r\n     * Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\r\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\r\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\r\n            if (denominator <= prod1) {\r\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\r\n            }\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\r\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            uint256 twos = denominator & (0 - denominator);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\r\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\r\n            // works in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\r\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\r\n     *\r\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\r\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\r\n     *\r\n     * If the input value is not inversible, 0 is returned.\r\n     *\r\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\r\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\r\n     */\r\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            if (n == 0) return 0;\r\n\r\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\r\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\r\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\r\n            // ax + ny = 1\r\n            // ax = 1 + (-y)n\r\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\r\n\r\n            // If the remainder is 0 the gcd is n right away.\r\n            uint256 remainder = a % n;\r\n            uint256 gcd = n;\r\n\r\n            // Therefore the initial coefficients are:\r\n            // ax + ny = gcd(a, n) = n\r\n            // 0a + 1n = n\r\n            int256 x = 0;\r\n            int256 y = 1;\r\n\r\n            while (remainder != 0) {\r\n                uint256 quotient = gcd / remainder;\r\n\r\n                (gcd, remainder) = (\r\n                    // The old remainder is the next gcd to try.\r\n                    remainder,\r\n                    // Compute the next remainder.\r\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\r\n                    // where gcd is at most n (capped to type(uint256).max)\r\n                    gcd - remainder * quotient\r\n                );\r\n\r\n                (x, y) = (\r\n                    // Increment the coefficient of a.\r\n                    y,\r\n                    // Decrement the coefficient of n.\r\n                    // Can overflow, but the result is casted to uint256 so that the\r\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\r\n                    x - y * int256(quotient)\r\n                );\r\n            }\r\n\r\n            if (gcd != 1) return 0; // No inverse exists.\r\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\r\n     *\r\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\r\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\r\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\r\n     *\r\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\r\n     */\r\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\r\n        unchecked {\r\n            return Math.modExp(a, p - 2, p);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\r\n     *\r\n     * Requirements:\r\n     * - modulus can't be zero\r\n     * - underlying staticcall to precompile must succeed\r\n     *\r\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\r\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\r\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\r\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\r\n     * interpreted as 0.\r\n     */\r\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\r\n        (bool success, uint256 result) = tryModExp(b, e, m);\r\n        if (!success) {\r\n            Panic.panic(Panic.DIVISION_BY_ZERO);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\r\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\r\n     * to operate modulo 0 or if the underlying precompile reverted.\r\n     *\r\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\r\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\r\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\r\n     * of a revert, but the result may be incorrectly interpreted as 0.\r\n     */\r\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\r\n        if (m == 0) return (false, 0);\r\n        assembly (\"memory-safe\") {\r\n            let ptr := mload(0x40)\r\n            // | Offset    | Content    | Content (Hex)                                                      |\r\n            // |-----------|------------|--------------------------------------------------------------------|\r\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\r\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\r\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\r\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\r\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\r\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\r\n            mstore(ptr, 0x20)\r\n            mstore(add(ptr, 0x20), 0x20)\r\n            mstore(add(ptr, 0x40), 0x20)\r\n            mstore(add(ptr, 0x60), b)\r\n            mstore(add(ptr, 0x80), e)\r\n            mstore(add(ptr, 0xa0), m)\r\n\r\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\r\n            // so we can use the memory scratch space located at offset 0.\r\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\r\n            result := mload(0x00)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\r\n     */\r\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\r\n        (bool success, bytes memory result) = tryModExp(b, e, m);\r\n        if (!success) {\r\n            Panic.panic(Panic.DIVISION_BY_ZERO);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\r\n     */\r\n    function tryModExp(\r\n        bytes memory b,\r\n        bytes memory e,\r\n        bytes memory m\r\n    ) internal view returns (bool success, bytes memory result) {\r\n        if (_zeroBytes(m)) return (false, new bytes(0));\r\n\r\n        uint256 mLen = m.length;\r\n\r\n        // Encode call args in result and move the free memory pointer\r\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\r\n\r\n        assembly (\"memory-safe\") {\r\n            let dataPtr := add(result, 0x20)\r\n            // Write result on top of args to avoid allocating extra memory.\r\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\r\n            // Overwrite the length.\r\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\r\n            mstore(result, mLen)\r\n            // Set the memory pointer after the returned data.\r\n            mstore(0x40, add(dataPtr, mLen))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether the provided byte array is zero.\r\n     */\r\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\r\n        for (uint256 i = 0; i < byteArray.length; ++i) {\r\n            if (byteArray[i] != 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\r\n     * towards zero.\r\n     *\r\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\r\n     * using integer operations.\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        unchecked {\r\n            // Take care of easy edge cases when a == 0 or a == 1\r\n            if (a <= 1) {\r\n                return a;\r\n            }\r\n\r\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\r\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\r\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\r\n            //\r\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\r\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\r\n            // bigger than any uint256.\r\n            //\r\n            // By noticing that\r\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\r\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\r\n            // to the msb function.\r\n            uint256 aa = a;\r\n            uint256 xn = 1;\r\n\r\n            if (aa >= (1 << 128)) {\r\n                aa >>= 128;\r\n                xn <<= 64;\r\n            }\r\n            if (aa >= (1 << 64)) {\r\n                aa >>= 64;\r\n                xn <<= 32;\r\n            }\r\n            if (aa >= (1 << 32)) {\r\n                aa >>= 32;\r\n                xn <<= 16;\r\n            }\r\n            if (aa >= (1 << 16)) {\r\n                aa >>= 16;\r\n                xn <<= 8;\r\n            }\r\n            if (aa >= (1 << 8)) {\r\n                aa >>= 8;\r\n                xn <<= 4;\r\n            }\r\n            if (aa >= (1 << 4)) {\r\n                aa >>= 4;\r\n                xn <<= 2;\r\n            }\r\n            if (aa >= (1 << 2)) {\r\n                xn <<= 1;\r\n            }\r\n\r\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\r\n            //\r\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\r\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\r\n            // This is going to be our x_0 (and ε_0)\r\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\r\n\r\n            // From here, Newton's method give us:\r\n            // x_{n+1} = (x_n + a / x_n) / 2\r\n            //\r\n            // One should note that:\r\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\r\n            //              = ((x_n² + a) / (2 * x_n))² - a\r\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\r\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\r\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\r\n            //              = (x_n² - a)² / (2 * x_n)²\r\n            //              = ((x_n² - a) / (2 * x_n))²\r\n            //              ≥ 0\r\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\r\n            //\r\n            // This gives us the proof of quadratic convergence of the sequence:\r\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\r\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\r\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\r\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\r\n            //         = | ε_n² / (2 * x_n) |\r\n            //         = ε_n² / | (2 * x_n) |\r\n            //\r\n            // For the first iteration, we have a special case where x_0 is known:\r\n            // ε_1 = ε_0² / | (2 * x_0) |\r\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\r\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\r\n            //     ≤ 2**(e-3) / 3\r\n            //     ≤ 2**(e-3-log2(3))\r\n            //     ≤ 2**(e-4.5)\r\n            //\r\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\r\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\r\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\r\n            //         ≤ 2**(2*e-2*k) / 2**e\r\n            //         ≤ 2**(e-2*k)\r\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\r\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\r\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\r\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\r\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\r\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\r\n\r\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\r\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\r\n            // sqrt(a) or sqrt(a) + 1.\r\n            return xn - SafeCast.toUint(xn > a / xn);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        uint256 exp;\r\n        unchecked {\r\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\r\n            value >>= exp;\r\n            result += exp;\r\n\r\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\r\n            value >>= exp;\r\n            result += exp;\r\n\r\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\r\n            value >>= exp;\r\n            result += exp;\r\n\r\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\r\n            value >>= exp;\r\n            result += exp;\r\n\r\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\r\n            value >>= exp;\r\n            result += exp;\r\n\r\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\r\n            value >>= exp;\r\n            result += exp;\r\n\r\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\r\n            value >>= exp;\r\n            result += exp;\r\n\r\n            result += SafeCast.toUint(value > 1);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        uint256 isGt;\r\n        unchecked {\r\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\r\n            value >>= isGt * 128;\r\n            result += isGt * 16;\r\n\r\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\r\n            value >>= isGt * 64;\r\n            result += isGt * 8;\r\n\r\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\r\n            value >>= isGt * 32;\r\n            result += isGt * 4;\r\n\r\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\r\n            value >>= isGt * 16;\r\n            result += isGt * 2;\r\n\r\n            result += SafeCast.toUint(value > (1 << 8) - 1);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\r\n     */\r\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\r\n        return uint8(rounding) % 2 == 1;\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\r\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\r\n * checks.\r\n *\r\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\r\n * easily result in undesired exploitation or bugs, since developers usually\r\n * assume that overflows raise errors. `SafeCast` restores this intuition by\r\n * reverting the transaction when such an operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeCast {\r\n    /**\r\n     * @dev Value doesn't fit in an uint of `bits` size.\r\n     */\r\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\r\n\r\n    /**\r\n     * @dev An int value doesn't fit in an uint of `bits` size.\r\n     */\r\n    error SafeCastOverflowedIntToUint(int256 value);\r\n\r\n    /**\r\n     * @dev Value doesn't fit in an int of `bits` size.\r\n     */\r\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\r\n\r\n    /**\r\n     * @dev An uint value doesn't fit in an int of `bits` size.\r\n     */\r\n    error SafeCastOverflowedUintToInt(uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint248 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint248).\r\n     *\r\n     * Counterpart to Solidity's `uint248` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 248 bits\r\n     */\r\n    function toUint248(uint256 value) internal pure returns (uint248) {\r\n        if (value > type(uint248).max) {\r\n            revert SafeCastOverflowedUintDowncast(248, value);\r\n        }\r\n        return uint248(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint240 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint240).\r\n     *\r\n     * Counterpart to Solidity's `uint240` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 240 bits\r\n     */\r\n    function toUint240(uint256 value) internal pure returns (uint240) {\r\n        if (value > type(uint240).max) {\r\n            revert SafeCastOverflowedUintDowncast(240, value);\r\n        }\r\n        return uint240(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint232 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint232).\r\n     *\r\n     * Counterpart to Solidity's `uint232` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 232 bits\r\n     */\r\n    function toUint232(uint256 value) internal pure returns (uint232) {\r\n        if (value > type(uint232).max) {\r\n            revert SafeCastOverflowedUintDowncast(232, value);\r\n        }\r\n        return uint232(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint224 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint224).\r\n     *\r\n     * Counterpart to Solidity's `uint224` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 224 bits\r\n     */\r\n    function toUint224(uint256 value) internal pure returns (uint224) {\r\n        if (value > type(uint224).max) {\r\n            revert SafeCastOverflowedUintDowncast(224, value);\r\n        }\r\n        return uint224(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint216 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint216).\r\n     *\r\n     * Counterpart to Solidity's `uint216` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 216 bits\r\n     */\r\n    function toUint216(uint256 value) internal pure returns (uint216) {\r\n        if (value > type(uint216).max) {\r\n            revert SafeCastOverflowedUintDowncast(216, value);\r\n        }\r\n        return uint216(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint208 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint208).\r\n     *\r\n     * Counterpart to Solidity's `uint208` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 208 bits\r\n     */\r\n    function toUint208(uint256 value) internal pure returns (uint208) {\r\n        if (value > type(uint208).max) {\r\n            revert SafeCastOverflowedUintDowncast(208, value);\r\n        }\r\n        return uint208(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint200 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint200).\r\n     *\r\n     * Counterpart to Solidity's `uint200` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 200 bits\r\n     */\r\n    function toUint200(uint256 value) internal pure returns (uint200) {\r\n        if (value > type(uint200).max) {\r\n            revert SafeCastOverflowedUintDowncast(200, value);\r\n        }\r\n        return uint200(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint192 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint192).\r\n     *\r\n     * Counterpart to Solidity's `uint192` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 192 bits\r\n     */\r\n    function toUint192(uint256 value) internal pure returns (uint192) {\r\n        if (value > type(uint192).max) {\r\n            revert SafeCastOverflowedUintDowncast(192, value);\r\n        }\r\n        return uint192(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint184 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint184).\r\n     *\r\n     * Counterpart to Solidity's `uint184` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 184 bits\r\n     */\r\n    function toUint184(uint256 value) internal pure returns (uint184) {\r\n        if (value > type(uint184).max) {\r\n            revert SafeCastOverflowedUintDowncast(184, value);\r\n        }\r\n        return uint184(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint176 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint176).\r\n     *\r\n     * Counterpart to Solidity's `uint176` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 176 bits\r\n     */\r\n    function toUint176(uint256 value) internal pure returns (uint176) {\r\n        if (value > type(uint176).max) {\r\n            revert SafeCastOverflowedUintDowncast(176, value);\r\n        }\r\n        return uint176(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint168 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint168).\r\n     *\r\n     * Counterpart to Solidity's `uint168` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 168 bits\r\n     */\r\n    function toUint168(uint256 value) internal pure returns (uint168) {\r\n        if (value > type(uint168).max) {\r\n            revert SafeCastOverflowedUintDowncast(168, value);\r\n        }\r\n        return uint168(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint160 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint160).\r\n     *\r\n     * Counterpart to Solidity's `uint160` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 160 bits\r\n     */\r\n    function toUint160(uint256 value) internal pure returns (uint160) {\r\n        if (value > type(uint160).max) {\r\n            revert SafeCastOverflowedUintDowncast(160, value);\r\n        }\r\n        return uint160(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint152 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint152).\r\n     *\r\n     * Counterpart to Solidity's `uint152` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 152 bits\r\n     */\r\n    function toUint152(uint256 value) internal pure returns (uint152) {\r\n        if (value > type(uint152).max) {\r\n            revert SafeCastOverflowedUintDowncast(152, value);\r\n        }\r\n        return uint152(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint144 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint144).\r\n     *\r\n     * Counterpart to Solidity's `uint144` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 144 bits\r\n     */\r\n    function toUint144(uint256 value) internal pure returns (uint144) {\r\n        if (value > type(uint144).max) {\r\n            revert SafeCastOverflowedUintDowncast(144, value);\r\n        }\r\n        return uint144(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint136 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint136).\r\n     *\r\n     * Counterpart to Solidity's `uint136` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 136 bits\r\n     */\r\n    function toUint136(uint256 value) internal pure returns (uint136) {\r\n        if (value > type(uint136).max) {\r\n            revert SafeCastOverflowedUintDowncast(136, value);\r\n        }\r\n        return uint136(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint128 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint128).\r\n     *\r\n     * Counterpart to Solidity's `uint128` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 128 bits\r\n     */\r\n    function toUint128(uint256 value) internal pure returns (uint128) {\r\n        if (value > type(uint128).max) {\r\n            revert SafeCastOverflowedUintDowncast(128, value);\r\n        }\r\n        return uint128(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint120 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint120).\r\n     *\r\n     * Counterpart to Solidity's `uint120` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 120 bits\r\n     */\r\n    function toUint120(uint256 value) internal pure returns (uint120) {\r\n        if (value > type(uint120).max) {\r\n            revert SafeCastOverflowedUintDowncast(120, value);\r\n        }\r\n        return uint120(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint112 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint112).\r\n     *\r\n     * Counterpart to Solidity's `uint112` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 112 bits\r\n     */\r\n    function toUint112(uint256 value) internal pure returns (uint112) {\r\n        if (value > type(uint112).max) {\r\n            revert SafeCastOverflowedUintDowncast(112, value);\r\n        }\r\n        return uint112(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint104 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint104).\r\n     *\r\n     * Counterpart to Solidity's `uint104` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 104 bits\r\n     */\r\n    function toUint104(uint256 value) internal pure returns (uint104) {\r\n        if (value > type(uint104).max) {\r\n            revert SafeCastOverflowedUintDowncast(104, value);\r\n        }\r\n        return uint104(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint96 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint96).\r\n     *\r\n     * Counterpart to Solidity's `uint96` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 96 bits\r\n     */\r\n    function toUint96(uint256 value) internal pure returns (uint96) {\r\n        if (value > type(uint96).max) {\r\n            revert SafeCastOverflowedUintDowncast(96, value);\r\n        }\r\n        return uint96(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint88 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint88).\r\n     *\r\n     * Counterpart to Solidity's `uint88` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 88 bits\r\n     */\r\n    function toUint88(uint256 value) internal pure returns (uint88) {\r\n        if (value > type(uint88).max) {\r\n            revert SafeCastOverflowedUintDowncast(88, value);\r\n        }\r\n        return uint88(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint80 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint80).\r\n     *\r\n     * Counterpart to Solidity's `uint80` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 80 bits\r\n     */\r\n    function toUint80(uint256 value) internal pure returns (uint80) {\r\n        if (value > type(uint80).max) {\r\n            revert SafeCastOverflowedUintDowncast(80, value);\r\n        }\r\n        return uint80(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint72 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint72).\r\n     *\r\n     * Counterpart to Solidity's `uint72` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 72 bits\r\n     */\r\n    function toUint72(uint256 value) internal pure returns (uint72) {\r\n        if (value > type(uint72).max) {\r\n            revert SafeCastOverflowedUintDowncast(72, value);\r\n        }\r\n        return uint72(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint64 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint64).\r\n     *\r\n     * Counterpart to Solidity's `uint64` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 64 bits\r\n     */\r\n    function toUint64(uint256 value) internal pure returns (uint64) {\r\n        if (value > type(uint64).max) {\r\n            revert SafeCastOverflowedUintDowncast(64, value);\r\n        }\r\n        return uint64(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint56 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint56).\r\n     *\r\n     * Counterpart to Solidity's `uint56` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 56 bits\r\n     */\r\n    function toUint56(uint256 value) internal pure returns (uint56) {\r\n        if (value > type(uint56).max) {\r\n            revert SafeCastOverflowedUintDowncast(56, value);\r\n        }\r\n        return uint56(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint48 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint48).\r\n     *\r\n     * Counterpart to Solidity's `uint48` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 48 bits\r\n     */\r\n    function toUint48(uint256 value) internal pure returns (uint48) {\r\n        if (value > type(uint48).max) {\r\n            revert SafeCastOverflowedUintDowncast(48, value);\r\n        }\r\n        return uint48(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint40 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint40).\r\n     *\r\n     * Counterpart to Solidity's `uint40` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 40 bits\r\n     */\r\n    function toUint40(uint256 value) internal pure returns (uint40) {\r\n        if (value > type(uint40).max) {\r\n            revert SafeCastOverflowedUintDowncast(40, value);\r\n        }\r\n        return uint40(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint32 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint32).\r\n     *\r\n     * Counterpart to Solidity's `uint32` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 32 bits\r\n     */\r\n    function toUint32(uint256 value) internal pure returns (uint32) {\r\n        if (value > type(uint32).max) {\r\n            revert SafeCastOverflowedUintDowncast(32, value);\r\n        }\r\n        return uint32(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint24 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint24).\r\n     *\r\n     * Counterpart to Solidity's `uint24` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 24 bits\r\n     */\r\n    function toUint24(uint256 value) internal pure returns (uint24) {\r\n        if (value > type(uint24).max) {\r\n            revert SafeCastOverflowedUintDowncast(24, value);\r\n        }\r\n        return uint24(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint16 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint16).\r\n     *\r\n     * Counterpart to Solidity's `uint16` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 16 bits\r\n     */\r\n    function toUint16(uint256 value) internal pure returns (uint16) {\r\n        if (value > type(uint16).max) {\r\n            revert SafeCastOverflowedUintDowncast(16, value);\r\n        }\r\n        return uint16(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint8 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint8).\r\n     *\r\n     * Counterpart to Solidity's `uint8` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 8 bits\r\n     */\r\n    function toUint8(uint256 value) internal pure returns (uint8) {\r\n        if (value > type(uint8).max) {\r\n            revert SafeCastOverflowedUintDowncast(8, value);\r\n        }\r\n        return uint8(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a signed int256 into an unsigned uint256.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must be greater than or equal to 0.\r\n     */\r\n    function toUint256(int256 value) internal pure returns (uint256) {\r\n        if (value < 0) {\r\n            revert SafeCastOverflowedIntToUint(value);\r\n        }\r\n        return uint256(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int248 from int256, reverting on\r\n     * overflow (when the input is less than smallest int248 or\r\n     * greater than largest int248).\r\n     *\r\n     * Counterpart to Solidity's `int248` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 248 bits\r\n     */\r\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\r\n        downcasted = int248(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(248, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int240 from int256, reverting on\r\n     * overflow (when the input is less than smallest int240 or\r\n     * greater than largest int240).\r\n     *\r\n     * Counterpart to Solidity's `int240` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 240 bits\r\n     */\r\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\r\n        downcasted = int240(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(240, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int232 from int256, reverting on\r\n     * overflow (when the input is less than smallest int232 or\r\n     * greater than largest int232).\r\n     *\r\n     * Counterpart to Solidity's `int232` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 232 bits\r\n     */\r\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\r\n        downcasted = int232(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(232, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int224 from int256, reverting on\r\n     * overflow (when the input is less than smallest int224 or\r\n     * greater than largest int224).\r\n     *\r\n     * Counterpart to Solidity's `int224` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 224 bits\r\n     */\r\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\r\n        downcasted = int224(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(224, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int216 from int256, reverting on\r\n     * overflow (when the input is less than smallest int216 or\r\n     * greater than largest int216).\r\n     *\r\n     * Counterpart to Solidity's `int216` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 216 bits\r\n     */\r\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\r\n        downcasted = int216(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(216, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int208 from int256, reverting on\r\n     * overflow (when the input is less than smallest int208 or\r\n     * greater than largest int208).\r\n     *\r\n     * Counterpart to Solidity's `int208` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 208 bits\r\n     */\r\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\r\n        downcasted = int208(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(208, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int200 from int256, reverting on\r\n     * overflow (when the input is less than smallest int200 or\r\n     * greater than largest int200).\r\n     *\r\n     * Counterpart to Solidity's `int200` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 200 bits\r\n     */\r\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\r\n        downcasted = int200(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(200, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int192 from int256, reverting on\r\n     * overflow (when the input is less than smallest int192 or\r\n     * greater than largest int192).\r\n     *\r\n     * Counterpart to Solidity's `int192` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 192 bits\r\n     */\r\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\r\n        downcasted = int192(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(192, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int184 from int256, reverting on\r\n     * overflow (when the input is less than smallest int184 or\r\n     * greater than largest int184).\r\n     *\r\n     * Counterpart to Solidity's `int184` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 184 bits\r\n     */\r\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\r\n        downcasted = int184(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(184, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int176 from int256, reverting on\r\n     * overflow (when the input is less than smallest int176 or\r\n     * greater than largest int176).\r\n     *\r\n     * Counterpart to Solidity's `int176` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 176 bits\r\n     */\r\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\r\n        downcasted = int176(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(176, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int168 from int256, reverting on\r\n     * overflow (when the input is less than smallest int168 or\r\n     * greater than largest int168).\r\n     *\r\n     * Counterpart to Solidity's `int168` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 168 bits\r\n     */\r\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\r\n        downcasted = int168(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(168, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int160 from int256, reverting on\r\n     * overflow (when the input is less than smallest int160 or\r\n     * greater than largest int160).\r\n     *\r\n     * Counterpart to Solidity's `int160` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 160 bits\r\n     */\r\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\r\n        downcasted = int160(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(160, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int152 from int256, reverting on\r\n     * overflow (when the input is less than smallest int152 or\r\n     * greater than largest int152).\r\n     *\r\n     * Counterpart to Solidity's `int152` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 152 bits\r\n     */\r\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\r\n        downcasted = int152(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(152, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int144 from int256, reverting on\r\n     * overflow (when the input is less than smallest int144 or\r\n     * greater than largest int144).\r\n     *\r\n     * Counterpart to Solidity's `int144` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 144 bits\r\n     */\r\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\r\n        downcasted = int144(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(144, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int136 from int256, reverting on\r\n     * overflow (when the input is less than smallest int136 or\r\n     * greater than largest int136).\r\n     *\r\n     * Counterpart to Solidity's `int136` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 136 bits\r\n     */\r\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\r\n        downcasted = int136(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(136, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int128 from int256, reverting on\r\n     * overflow (when the input is less than smallest int128 or\r\n     * greater than largest int128).\r\n     *\r\n     * Counterpart to Solidity's `int128` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 128 bits\r\n     */\r\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\r\n        downcasted = int128(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(128, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int120 from int256, reverting on\r\n     * overflow (when the input is less than smallest int120 or\r\n     * greater than largest int120).\r\n     *\r\n     * Counterpart to Solidity's `int120` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 120 bits\r\n     */\r\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\r\n        downcasted = int120(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(120, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int112 from int256, reverting on\r\n     * overflow (when the input is less than smallest int112 or\r\n     * greater than largest int112).\r\n     *\r\n     * Counterpart to Solidity's `int112` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 112 bits\r\n     */\r\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\r\n        downcasted = int112(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(112, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int104 from int256, reverting on\r\n     * overflow (when the input is less than smallest int104 or\r\n     * greater than largest int104).\r\n     *\r\n     * Counterpart to Solidity's `int104` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 104 bits\r\n     */\r\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\r\n        downcasted = int104(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(104, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int96 from int256, reverting on\r\n     * overflow (when the input is less than smallest int96 or\r\n     * greater than largest int96).\r\n     *\r\n     * Counterpart to Solidity's `int96` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 96 bits\r\n     */\r\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\r\n        downcasted = int96(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(96, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int88 from int256, reverting on\r\n     * overflow (when the input is less than smallest int88 or\r\n     * greater than largest int88).\r\n     *\r\n     * Counterpart to Solidity's `int88` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 88 bits\r\n     */\r\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\r\n        downcasted = int88(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(88, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int80 from int256, reverting on\r\n     * overflow (when the input is less than smallest int80 or\r\n     * greater than largest int80).\r\n     *\r\n     * Counterpart to Solidity's `int80` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 80 bits\r\n     */\r\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\r\n        downcasted = int80(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(80, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int72 from int256, reverting on\r\n     * overflow (when the input is less than smallest int72 or\r\n     * greater than largest int72).\r\n     *\r\n     * Counterpart to Solidity's `int72` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 72 bits\r\n     */\r\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\r\n        downcasted = int72(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(72, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int64 from int256, reverting on\r\n     * overflow (when the input is less than smallest int64 or\r\n     * greater than largest int64).\r\n     *\r\n     * Counterpart to Solidity's `int64` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 64 bits\r\n     */\r\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\r\n        downcasted = int64(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(64, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int56 from int256, reverting on\r\n     * overflow (when the input is less than smallest int56 or\r\n     * greater than largest int56).\r\n     *\r\n     * Counterpart to Solidity's `int56` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 56 bits\r\n     */\r\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\r\n        downcasted = int56(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(56, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int48 from int256, reverting on\r\n     * overflow (when the input is less than smallest int48 or\r\n     * greater than largest int48).\r\n     *\r\n     * Counterpart to Solidity's `int48` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 48 bits\r\n     */\r\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\r\n        downcasted = int48(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(48, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int40 from int256, reverting on\r\n     * overflow (when the input is less than smallest int40 or\r\n     * greater than largest int40).\r\n     *\r\n     * Counterpart to Solidity's `int40` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 40 bits\r\n     */\r\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\r\n        downcasted = int40(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(40, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int32 from int256, reverting on\r\n     * overflow (when the input is less than smallest int32 or\r\n     * greater than largest int32).\r\n     *\r\n     * Counterpart to Solidity's `int32` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 32 bits\r\n     */\r\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\r\n        downcasted = int32(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(32, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int24 from int256, reverting on\r\n     * overflow (when the input is less than smallest int24 or\r\n     * greater than largest int24).\r\n     *\r\n     * Counterpart to Solidity's `int24` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 24 bits\r\n     */\r\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\r\n        downcasted = int24(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(24, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int16 from int256, reverting on\r\n     * overflow (when the input is less than smallest int16 or\r\n     * greater than largest int16).\r\n     *\r\n     * Counterpart to Solidity's `int16` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 16 bits\r\n     */\r\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\r\n        downcasted = int16(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(16, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int8 from int256, reverting on\r\n     * overflow (when the input is less than smallest int8 or\r\n     * greater than largest int8).\r\n     *\r\n     * Counterpart to Solidity's `int8` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 8 bits\r\n     */\r\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\r\n        downcasted = int8(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(8, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an unsigned uint256 into a signed int256.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must be less than or equal to maxInt256.\r\n     */\r\n    function toInt256(uint256 value) internal pure returns (int256) {\r\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\r\n        if (value > uint256(type(int256).max)) {\r\n            revert SafeCastOverflowedUintToInt(value);\r\n        }\r\n        return int256(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\r\n     */\r\n    function toUint(bool b) internal pure returns (uint256 u) {\r\n        assembly (\"memory-safe\") {\r\n            u := iszero(iszero(b))\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {SafeCast} from \"./SafeCast.sol\";\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\r\n     *\r\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\r\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\r\n     * one branch when needed, making this function more expensive.\r\n     */\r\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\r\n        unchecked {\r\n            // branchless ternary works because:\r\n            // b ^ (a ^ b) == a\r\n            // b ^ 0 == b\r\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return ternary(a > b, a, b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return ternary(a < b, a, b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\r\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\r\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\r\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\r\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\r\n            int256 mask = n >> 255;\r\n\r\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\r\n            return uint256((n + mask) ^ mask);\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\r\n */\r\nabstract contract Nonces {\r\n    /**\r\n     * @dev The nonce used for an `account` is not the expected current nonce.\r\n     */\r\n    error InvalidAccountNonce(address account, uint256 currentNonce);\r\n\r\n    mapping(address account => uint256) private _nonces;\r\n\r\n    /**\r\n     * @dev Returns the next unused nonce for an address.\r\n     */\r\n    function nonces(address owner) public view virtual returns (uint256) {\r\n        return _nonces[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev Consumes a nonce.\r\n     *\r\n     * Returns the current value and increments nonce.\r\n     */\r\n    function _useNonce(address owner) internal virtual returns (uint256) {\r\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\r\n        // decremented or reset. This guarantees that the nonce never overflows.\r\n        unchecked {\r\n            // It is important to do x++ and not ++x here.\r\n            return _nonces[owner]++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\r\n     */\r\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\r\n        uint256 current = _useNonce(owner);\r\n        if (nonce != current) {\r\n            revert InvalidAccountNonce(owner, current);\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Helper library for emitting standardized panic codes.\r\n *\r\n * ```solidity\r\n * contract Example {\r\n *      using Panic for uint256;\r\n *\r\n *      // Use any of the declared internal constants\r\n *      function foo() { Panic.GENERIC.panic(); }\r\n *\r\n *      // Alternatively\r\n *      function foo() { Panic.panic(Panic.GENERIC); }\r\n * }\r\n * ```\r\n *\r\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\r\n *\r\n * _Available since v5.1._\r\n */\r\n// slither-disable-next-line unused-state\r\nlibrary Panic {\r\n    /// @dev generic / unspecified error\r\n    uint256 internal constant GENERIC = 0x00;\r\n    /// @dev used by the assert() builtin\r\n    uint256 internal constant ASSERT = 0x01;\r\n    /// @dev arithmetic underflow or overflow\r\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\r\n    /// @dev division or modulo by zero\r\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\r\n    /// @dev enum conversion error\r\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\r\n    /// @dev invalid encoding in storage\r\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\r\n    /// @dev empty array pop\r\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\r\n    /// @dev array out of bounds access\r\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\r\n    /// @dev resource error (too large allocation or too large array)\r\n    uint256 internal constant RESOURCE_ERROR = 0x41;\r\n    /// @dev calling invalid internal function\r\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\r\n\r\n    /// @dev Reverts with a panic code. Recommended to use with\r\n    /// the internal constants with predefined codes.\r\n    function panic(uint256 code) internal pure {\r\n        assembly (\"memory-safe\") {\r\n            mstore(0x00, 0x4e487b71)\r\n            mstore(0x20, code)\r\n            revert(0x1c, 0x24)\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {StorageSlot} from \"./StorageSlot.sol\";\r\n\r\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\r\n// | length  | 0x                                                              BB |\r\ntype ShortString is bytes32;\r\n\r\n/**\r\n * @dev This library provides functions to convert short memory strings\r\n * into a `ShortString` type that can be used as an immutable variable.\r\n *\r\n * Strings of arbitrary length can be optimized using this library if\r\n * they are short enough (up to 31 bytes) by packing them with their\r\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\r\n * fallback mechanism can be used for every other case.\r\n *\r\n * Usage example:\r\n *\r\n * ```solidity\r\n * contract Named {\r\n *     using ShortStrings for *;\r\n *\r\n *     ShortString private immutable _name;\r\n *     string private _nameFallback;\r\n *\r\n *     constructor(string memory contractName) {\r\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\r\n *     }\r\n *\r\n *     function name() external view returns (string memory) {\r\n *         return _name.toStringWithFallback(_nameFallback);\r\n *     }\r\n * }\r\n * ```\r\n */\r\nlibrary ShortStrings {\r\n    // Used as an identifier for strings longer than 31 bytes.\r\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\r\n\r\n    error StringTooLong(string str);\r\n    error InvalidShortString();\r\n\r\n    /**\r\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\r\n     *\r\n     * This will trigger a `StringTooLong` error is the input string is too long.\r\n     */\r\n    function toShortString(string memory str) internal pure returns (ShortString) {\r\n        bytes memory bstr = bytes(str);\r\n        if (bstr.length > 31) {\r\n            revert StringTooLong(str);\r\n        }\r\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\r\n    }\r\n\r\n    /**\r\n     * @dev Decode a `ShortString` back to a \"normal\" string.\r\n     */\r\n    function toString(ShortString sstr) internal pure returns (string memory) {\r\n        uint256 len = byteLength(sstr);\r\n        // using `new string(len)` would work locally but is not memory safe.\r\n        string memory str = new string(32);\r\n        assembly (\"memory-safe\") {\r\n            mstore(str, len)\r\n            mstore(add(str, 0x20), sstr)\r\n        }\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the length of a `ShortString`.\r\n     */\r\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\r\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\r\n        if (result > 31) {\r\n            revert InvalidShortString();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\r\n     */\r\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\r\n        if (bytes(value).length < 32) {\r\n            return toShortString(value);\r\n        } else {\r\n            StorageSlot.getStringSlot(store).value = value;\r\n            return ShortString.wrap(FALLBACK_SENTINEL);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\r\n     */\r\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\r\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\r\n            return toString(value);\r\n        } else {\r\n            return store;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\r\n     * {setWithFallback}.\r\n     *\r\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\r\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\r\n     */\r\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\r\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\r\n            return byteLength(value);\r\n        } else {\r\n            return bytes(store).length;\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\r\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Library for reading and writing primitive types to specific storage slots.\r\n *\r\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\r\n * This library helps with reading and writing to such slots without the need for inline assembly.\r\n *\r\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\r\n *\r\n * Example usage to set ERC-1967 implementation slot:\r\n * ```solidity\r\n * contract ERC1967 {\r\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\r\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n *\r\n *     function _getImplementation() internal view returns (address) {\r\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n *     }\r\n *\r\n *     function _setImplementation(address newImplementation) internal {\r\n *         require(newImplementation.code.length > 0);\r\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * TIP: Consider using this library along with {SlotDerivation}.\r\n */\r\nlibrary StorageSlot {\r\n    struct AddressSlot {\r\n        address value;\r\n    }\r\n\r\n    struct BooleanSlot {\r\n        bool value;\r\n    }\r\n\r\n    struct Bytes32Slot {\r\n        bytes32 value;\r\n    }\r\n\r\n    struct Uint256Slot {\r\n        uint256 value;\r\n    }\r\n\r\n    struct Int256Slot {\r\n        int256 value;\r\n    }\r\n\r\n    struct StringSlot {\r\n        string value;\r\n    }\r\n\r\n    struct BytesSlot {\r\n        bytes value;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\r\n     */\r\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\r\n     */\r\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\r\n     */\r\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\r\n     */\r\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\r\n     */\r\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\r\n     */\r\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\r\n     */\r\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Math} from \"./math/Math.sol\";\r\nimport {SafeCast} from \"./math/SafeCast.sol\";\r\nimport {SignedMath} from \"./math/SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    using SafeCast for *;\r\n\r\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\r\n    uint8 private constant ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev The `value` string doesn't fit in the specified `length`.\r\n     */\r\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\r\n\r\n    /**\r\n     * @dev The string being parsed contains characters that are not in scope of the given base.\r\n     */\r\n    error StringsInvalidChar();\r\n\r\n    /**\r\n     * @dev The string being parsed is not a properly formatted address.\r\n     */\r\n    error StringsInvalidAddressFormat();\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            assembly (\"memory-safe\") {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                assembly (\"memory-safe\") {\r\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toStringSigned(int256 value) internal pure returns (string memory) {\r\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        uint256 localValue = value;\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\r\n            localValue >>= 4;\r\n        }\r\n        if (localValue != 0) {\r\n            revert StringsInsufficientHexLength(value, length);\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\r\n     * representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\r\n     * representation, according to EIP-55.\r\n     */\r\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\r\n        bytes memory buffer = bytes(toHexString(addr));\r\n\r\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\r\n        uint256 hashValue;\r\n        assembly (\"memory-safe\") {\r\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\r\n        }\r\n\r\n        for (uint256 i = 41; i > 1; --i) {\r\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\r\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\r\n                // case shift by xoring with 0x20\r\n                buffer[i] ^= 0x20;\r\n            }\r\n            hashValue >>= 4;\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n\r\n    /**\r\n     * @dev Parse a decimal string and returns the value as a `uint256`.\r\n     *\r\n     * Requirements:\r\n     * - The string must be formatted as `[0-9]*`\r\n     * - The result must fit into an `uint256` type\r\n     */\r\n    function parseUint(string memory input) internal pure returns (uint256) {\r\n        return parseUint(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\r\n     * `end` (excluded).\r\n     *\r\n     * Requirements:\r\n     * - The substring must be formatted as `[0-9]*`\r\n     * - The result must fit into an `uint256` type\r\n     */\r\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\r\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\r\n        if (!success) revert StringsInvalidChar();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\r\n     *\r\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\r\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\r\n     * character.\r\n     *\r\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseUint(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) internal pure returns (bool success, uint256 value) {\r\n        if (end > bytes(input).length || begin > end) return (false, 0);\r\n        return _tryParseUintUncheckedBounds(input, begin, end);\r\n    }\r\n\r\n    /**\r\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\r\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\r\n     */\r\n    function _tryParseUintUncheckedBounds(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) private pure returns (bool success, uint256 value) {\r\n        bytes memory buffer = bytes(input);\r\n\r\n        uint256 result = 0;\r\n        for (uint256 i = begin; i < end; ++i) {\r\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\r\n            if (chr > 9) return (false, 0);\r\n            result *= 10;\r\n            result += chr;\r\n        }\r\n        return (true, result);\r\n    }\r\n\r\n    /**\r\n     * @dev Parse a decimal string and returns the value as a `int256`.\r\n     *\r\n     * Requirements:\r\n     * - The string must be formatted as `[-+]?[0-9]*`\r\n     * - The result must fit in an `int256` type.\r\n     */\r\n    function parseInt(string memory input) internal pure returns (int256) {\r\n        return parseInt(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\r\n     * `end` (excluded).\r\n     *\r\n     * Requirements:\r\n     * - The substring must be formatted as `[-+]?[0-9]*`\r\n     * - The result must fit in an `int256` type.\r\n     */\r\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\r\n        (bool success, int256 value) = tryParseInt(input, begin, end);\r\n        if (!success) revert StringsInvalidChar();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\r\n     * the result does not fit in a `int256`.\r\n     *\r\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\r\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\r\n    }\r\n\r\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\r\n\r\n    /**\r\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\r\n     * character or if the result does not fit in a `int256`.\r\n     *\r\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseInt(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) internal pure returns (bool success, int256 value) {\r\n        if (end > bytes(input).length || begin > end) return (false, 0);\r\n        return _tryParseIntUncheckedBounds(input, begin, end);\r\n    }\r\n\r\n    /**\r\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\r\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\r\n     */\r\n    function _tryParseIntUncheckedBounds(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) private pure returns (bool success, int256 value) {\r\n        bytes memory buffer = bytes(input);\r\n\r\n        // Check presence of a negative sign.\r\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\r\n        bool positiveSign = sign == bytes1(\"+\");\r\n        bool negativeSign = sign == bytes1(\"-\");\r\n        uint256 offset = (positiveSign || negativeSign).toUint();\r\n\r\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\r\n\r\n        if (absSuccess && absValue < ABS_MIN_INT256) {\r\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\r\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\r\n            return (true, type(int256).min);\r\n        } else return (false, 0);\r\n    }\r\n\r\n    /**\r\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\r\n     *\r\n     * Requirements:\r\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\r\n     * - The result must fit in an `uint256` type.\r\n     */\r\n    function parseHexUint(string memory input) internal pure returns (uint256) {\r\n        return parseHexUint(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\r\n     * `end` (excluded).\r\n     *\r\n     * Requirements:\r\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\r\n     * - The result must fit in an `uint256` type.\r\n     */\r\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\r\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\r\n        if (!success) revert StringsInvalidChar();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\r\n     *\r\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\r\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\r\n     * invalid character.\r\n     *\r\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseHexUint(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) internal pure returns (bool success, uint256 value) {\r\n        if (end > bytes(input).length || begin > end) return (false, 0);\r\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\r\n    }\r\n\r\n    /**\r\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\r\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\r\n     */\r\n    function _tryParseHexUintUncheckedBounds(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) private pure returns (bool success, uint256 value) {\r\n        bytes memory buffer = bytes(input);\r\n\r\n        // skip 0x prefix if present\r\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\r\n        uint256 offset = hasPrefix.toUint() * 2;\r\n\r\n        uint256 result = 0;\r\n        for (uint256 i = begin + offset; i < end; ++i) {\r\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\r\n            if (chr > 15) return (false, 0);\r\n            result *= 16;\r\n            unchecked {\r\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\r\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\r\n                result += chr;\r\n            }\r\n        }\r\n        return (true, result);\r\n    }\r\n\r\n    /**\r\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\r\n     *\r\n     * Requirements:\r\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\r\n     */\r\n    function parseAddress(string memory input) internal pure returns (address) {\r\n        return parseAddress(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\r\n     * `end` (excluded).\r\n     *\r\n     * Requirements:\r\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\r\n     */\r\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\r\n        (bool success, address value) = tryParseAddress(input, begin, end);\r\n        if (!success) revert StringsInvalidAddressFormat();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\r\n     * formatted address. See {parseAddress} requirements.\r\n     */\r\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\r\n        return tryParseAddress(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\r\n     * formatted address. See {parseAddress} requirements.\r\n     */\r\n    function tryParseAddress(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) internal pure returns (bool success, address value) {\r\n        if (end > bytes(input).length || begin > end) return (false, address(0));\r\n\r\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\r\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\r\n\r\n        // check that input is the correct length\r\n        if (end - begin == expectedLength) {\r\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\r\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\r\n            return (s, address(uint160(v)));\r\n        } else {\r\n            return (false, address(0));\r\n        }\r\n    }\r\n\r\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\r\n        uint8 value = uint8(chr);\r\n\r\n        // Try to parse `chr`:\r\n        // - Case 1: [0-9]\r\n        // - Case 2: [a-f]\r\n        // - Case 3: [A-F]\r\n        // - otherwise not supported\r\n        unchecked {\r\n            if (value > 47 && value < 58) value -= 48;\r\n            else if (value > 96 && value < 103) value -= 87;\r\n            else if (value > 64 && value < 71) value -= 55;\r\n            else return type(uint8).max;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\r\n     *\r\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\r\n     * assembly block as such would prevent some optimizations.\r\n     */\r\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\r\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\r\n        assembly (\"memory-safe\") {\r\n            value := mload(add(buffer, add(0x20, offset)))\r\n        }\r\n    }\r\n}\r\n"},"contracts/CampusToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.22;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {ERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract CampusToken is ERC20, Ownable, ERC20Permit {\r\n    constructor(address recipient , address initialOwner)\r\n        ERC20(\"CampusToken\", \"BITSG\")\r\n        Ownable(initialOwner)\r\n        ERC20Permit(\"CampusToken\")\r\n    {\r\n        _mint(initialOwner, 1000000 * 10 ** decimals());\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n\r\n    // understand the purpose of this function\r\n    //   function stakeTokens(uint256 amount) external {   \r\n    //     require(balanceOf(msg.sender) >= amount, \"Insufficient balance\"); \r\n    //     stakedTokens[msg.sender] += amount;\r\n    //     _transfer(msg.sender, address(this), amount);\r\n\r\n    // }\r\n    \r\n    function burnTokens(address user, uint256 amount) external {\r\n        require(balanceOf(user) >= amount, \"Insufficient balance\");\r\n        _burn(user, amount);\r\n    }\r\n\r\n    function rewardTokens(address user, uint256 amount) external  {\r\n        _mint(user, amount);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n"},"contracts/participate.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.22;\r\n\r\nimport \"./CampusToken.sol\";\r\n\r\ncontract participate {\r\n    CampusToken public token; // contract instance that makes an instance of CampusToken called token\r\n\r\n    uint256 public constant REPORT_STAKE = 100 * 10 ** 18; // 100 ETH IN WEI (IN OUR CASE CAMPUSTOKEN)\r\n    uint256 public constant VALIDATE_STAKE = 50 * 10 ** 18;\r\n    uint256 public constant REPORT_REWARD = 5 * 10 ** 18;\r\n    uint256 public constant VALIDATE_REWARD = 10 * 10 ** 18;\r\n\r\n    struct Report {\r\n        uint256 id;\r\n        address uploader;\r\n        int256 net_votes; // Net vote count\r\n        bool validated;\r\n        address[] validators; // Store all voters\r\n        mapping(address => int8) votes; // (address --> vote(1 or -1 hence int8)) - ensures one vote per user per report\r\n    }\r\n\r\n    uint256 public reportCount = 0;\r\n    mapping(uint256 => Report) public reports; // reports map stores report serial number --> report struct \r\n    mapping(address => uint256) public stakedTokens; // address -- no of tokens staked. Essential for unstaking tokens before time limit.\r\n\r\n    constructor(address tokenAddress) {\r\n        token = CampusToken(tokenAddress);\r\n    }\r\n\r\n    // makes a new report\r\n    function submitReport(uint256 reportId) external {  // Renamed from `report()` to `submitReport()`\r\n        require(token.balanceOf(msg.sender) >= REPORT_STAKE, \"Insufficient stake\"); // checks if he has enough tokens\r\n\r\n        token.burnTokens(msg.sender, REPORT_STAKE); // staking tokens for reporting (implicit penalization)\r\n        stakedTokens[msg.sender] += REPORT_STAKE; // adding to staked tokens\r\n        reportCount++; // for mapping purposes\r\n        \r\n        Report storage newReport = reports[reportId];\r\n        newReport.id = reportId;\r\n        newReport.uploader = msg.sender;\r\n        newReport.net_votes = 0;\r\n        newReport.validated = false;\r\n    }\r\n\r\n    function validate(uint256 reportId, int8 vote) external { // we'll get reportId and vote from the database through backend \r\n        Report storage reportData = reports[reportId]; // Renamed variable to `reportData`\r\n\r\n        require(token.balanceOf(msg.sender) >= VALIDATE_STAKE, \"Insufficient stake\"); // checks if he has enough tokens\r\n        require(vote == 1 || vote == -1, \"Invalid vote\"); // 1 for YES, -1 for NO\r\n        require(reportData.votes[msg.sender] == 0, \"Already voted\"); // Fixed incorrect access\r\n\r\n        // stake tokens \r\n        stakedTokens[msg.sender] += VALIDATE_STAKE;\r\n        token.burnTokens(msg.sender, VALIDATE_STAKE); // this should get reflected in the database \r\n\r\n        uint256 weight = getVoteWeight(msg.sender);\r\n        reportData.net_votes += int256(vote * int256(weight)); // Signed int because of negative votes\r\n\r\n        reportData.votes[msg.sender] = vote; // to manage rewarding and penalizing\r\n        reportData.validators.push(msg.sender);\r\n    }\r\n\r\n    function getVoteWeight(address user) public view returns (uint256) {\r\n        uint256 balance = token.balanceOf(user);\r\n\r\n        if (balance > 1000 * 10 ** 18) {\r\n            return 3; // 3x vote weight for top holders\r\n        } else if (balance > 500 * 10 ** 18) {\r\n            return 1; // 1.5x vote weight\r\n        } else {\r\n            return 1; // Normal weight\r\n        }\r\n    }\r\n\r\n    function _posoutcome(uint256 reportId) internal {\r\n        Report storage reportData = reports[reportId]; // Renamed variable to `reportData`\r\n\r\n        token.rewardTokens(reportData.uploader, REPORT_REWARD + REPORT_STAKE); // reward for uploader\r\n\r\n        // reward people with yes votes\r\n        for (uint256 i = 0; i < reportData.validators.length; i++) {\r\n            address validator = reportData.validators[i];\r\n            if (reportData.votes[validator] == 1) {\r\n                token.rewardTokens(validator, VALIDATE_REWARD + VALIDATE_STAKE);\r\n            }\r\n            stakedTokens[validator] -= VALIDATE_STAKE;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    function _negoutcome(uint256 reportId) internal {\r\n        Report storage reportData = reports[reportId]; // Renamed variable to `reportData`\r\n\r\n        // reward people with no votes\r\n        for (uint256 i = 0; i < reportData.validators.length; i++) {\r\n            address validator = reportData.validators[i];\r\n            if (reportData.votes[validator] == -1) {\r\n                token.rewardTokens(validator, VALIDATE_REWARD + VALIDATE_STAKE);\r\n            }\r\n            stakedTokens[validator] -= VALIDATE_STAKE;\r\n        }\r\n\r\n\r\n    }\r\n\r\n \r\n\r\n    function finalizeReport(uint256 reportId)  external   {   // add returns bool\r\n        Report storage reportData = reports[reportId]; // report gets stored in the blockchain\r\n\r\n        require(!reportData.validated, \"Already validated\");\r\n        reportData.validated = true;\r\n\r\n        stakedTokens[reportData.uploader] -= REPORT_STAKE;\r\n        if (reportData.net_votes > 0) { // implement net_votes == 0\r\n            _posoutcome(reportId);\r\n        // return a bool for report scheme verified\r\n        \r\n        } else {\r\n            _negoutcome(reportId);\r\n           // return a bool for report scheme rejected\r\n        }\r\n\r\n    }\r\n\r\n    function revoke_vote(uint256 reportId) external {\r\n        Report storage reportData = reports[reportId];\r\n\r\n        require(reportData.votes[msg.sender] != 0, \"You have not voted or already revoked\");\r\n\r\n        int8 userVote = reportData.votes[msg.sender];\r\n\r\n        // give back their staked tokens\r\n        stakedTokens[msg.sender] -= VALIDATE_STAKE;\r\n        token.rewardTokens(msg.sender, VALIDATE_STAKE);\r\n\r\n        // remove them from consensus\r\n        uint256 weight = getVoteWeight(msg.sender);\r\n        reportData.net_votes -= int256(userVote * int256(weight));\r\n        reportData.votes[msg.sender] = 0;\r\n\r\n        emit VoteRevoked(reportId, msg.sender);\r\n    }\r\n\r\n    function revoke_report(uint256 reportId) external {\r\n        Report storage reportData = reports[reportId];\r\n\r\n        require(msg.sender == reportData.uploader, \"Only uploader can revoke\");\r\n        require(!reportData.validated, \"Report already finalized\");\r\n\r\n        // Refund the uploader's stake\r\n        token.rewardTokens(reportData.uploader, REPORT_STAKE);\r\n        stakedTokens[msg.sender] -= REPORT_STAKE;\r\n\r\n        // Delete the report\r\n        delete reports[reportId];\r\n\r\n        emit ReportRevoked(reportId, msg.sender);\r\n    }\r\n\r\n    event VoteRevoked(uint256 reportId, address voter);\r\n    event ReportRevoked(uint256 reportId, address uploader);\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/CampusToken.sol:10:17:\n   |\n10 |     constructor(address recipient , address initialOwner)\n   |                 ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":433,"file":"contracts/CampusToken.sol","start":416},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1148],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1149,"src":"133:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"141:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["711:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1148,"src":"711:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"711:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"182:498:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1148],"name":"Ownable","nameLocation":"700:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"742:6:0","nodeType":"VariableDeclaration","scope":147,"src":"726:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"726:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"757:87:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"856:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"891:7:0","nodeType":"VariableDeclaration","scope":13,"src":"883:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"883:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"882:17:0"},"src":"850:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"908:84:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"1004:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1032:5:0","nodeType":"VariableDeclaration","scope":18,"src":"1024:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1023:15:0"},"src":"998:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1053:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1090:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1074:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1121:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1105:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1073:57:0"},"src":"1047:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1296:158:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1311:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1335:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1327:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1327:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1327:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1311:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1307:97:0","trueBody":{"id":43,"nodeType":"Block","src":"1339:65:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1389:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1381:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1381:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1361:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1361:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1354:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1433:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1414:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1414:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1139:117:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1282:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1274:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1274:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1273:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1296:0:0"},"scope":147,"src":"1262:192:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1568:44:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1579:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1579:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1579:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1603:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1462:79:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1556:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1565:2:0"},"src":"1547:65:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1748:32:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1766:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1759:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1620:67:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1702:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1707:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1739:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1739:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1738:9:0"},"scope":147,"src":"1693:87:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1903:121:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1918:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1918:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1929:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1918:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1914:103:0","trueBody":{"id":81,"nodeType":"Block","src":"1943:74:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1992:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1992:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1965:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1958:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1788:64:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1867:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1878:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1903:0:0"},"scope":147,"src":"1858:166:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2422:49:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2460:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2452:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2452:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2452:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2433:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2433:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2433:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"2032:330:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2412:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2412:9:0"},"nodeType":"ModifierInvocation","src":"2412:9:0"}],"name":"renounceOwnership","nameLocation":"2377:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2394:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2422:0:0"},"scope":147,"src":"2368:103:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2696:150:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2711:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2731:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2723:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2723:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2711:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2707:93:0","trueBody":{"id":119,"nodeType":"Block","src":"2735:65:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2785:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2777:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2777:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2757:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2757:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2750:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2829:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2810:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2810:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2479:141:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2686:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2686:9:0"},"nodeType":"ModifierInvocation","src":"2686:9:0"}],"name":"transferOwnership","nameLocation":"2635:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2661:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2653:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2652:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2696:0:0"},"scope":147,"src":"2626:220:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"3069:128:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"3088:8:0","nodeType":"VariableDeclaration","scope":145,"src":"3080:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"3080:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3099:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3080:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3116:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3125:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3116:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3116:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3170:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3180:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3149:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3149:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3144:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2854:146:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3015:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"3042:8:0","nodeType":"VariableDeclaration","scope":146,"src":"3034:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"3034:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3033:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"3069:0:0"},"scope":147,"src":"3006:191:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"682:2518:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"105:3097:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"148:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"164:86:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"262:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"281:2:1"},"src":"256:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"292:143:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"450:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"462:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"536:6:1","nodeType":"VariableDeclaration","scope":171,"src":"529:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"529:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"571:4:1","nodeType":"VariableDeclaration","scope":171,"src":"557:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"557:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"604:7:1","nodeType":"VariableDeclaration","scope":171,"src":"590:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"590:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"634:7:1","nodeType":"VariableDeclaration","scope":171,"src":"626:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"626:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"664:17:1","nodeType":"VariableDeclaration","scope":171,"src":"656:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"656:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"704:4:1","nodeType":"VariableDeclaration","scope":171,"src":"696:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"696:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"740:10:1","nodeType":"VariableDeclaration","scope":171,"src":"723:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"723:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"514:247:1"},"scope":172,"src":"441:321:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"138:627:1","usedErrors":[],"usedEvents":[152]}],"src":"110:657:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[309],"IERC20Errors":[214],"IERC721Errors":[262]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"142:144:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":214,"linearizedBaseContracts":[214],"name":"IERC20Errors","nameLocation":"298:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"318:314:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":184,"name":"ERC20InsufficientBalance","nameLocation":"644:24:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"sender","nameLocation":"677:6:2","nodeType":"VariableDeclaration","scope":184,"src":"669:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"balance","nameLocation":"693:7:2","nodeType":"VariableDeclaration","scope":184,"src":"685:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"needed","nameLocation":"710:6:2","nodeType":"VariableDeclaration","scope":184,"src":"702:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"702:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"668:49:2"},"src":"638:80:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"726:155:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":189,"name":"ERC20InvalidSender","nameLocation":"893:18:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"sender","nameLocation":"920:6:2","nodeType":"VariableDeclaration","scope":189,"src":"912:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"911:16:2"},"src":"887:41:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"936:162:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":194,"name":"ERC20InvalidReceiver","nameLocation":"1110:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"receiver","nameLocation":"1139:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1131:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1131:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1130:18:2"},"src":"1104:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1157:350:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":203,"name":"ERC20InsufficientAllowance","nameLocation":"1519:26:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1554:7:2","nodeType":"VariableDeclaration","scope":203,"src":"1546:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1546:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"allowance","nameLocation":"1571:9:2","nodeType":"VariableDeclaration","scope":203,"src":"1563:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"needed","nameLocation":"1590:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1582:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1582:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1545:52:2"},"src":"1513:85:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1606:177:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":208,"name":"ERC20InvalidApprover","nameLocation":"1795:20:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"approver","nameLocation":"1824:8:2","nodeType":"VariableDeclaration","scope":208,"src":"1816:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1816:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1815:18:2"},"src":"1789:45:2"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1842:198:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":213,"name":"ERC20InvalidSpender","nameLocation":"2052:19:2","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"2080:7:2","nodeType":"VariableDeclaration","scope":213,"src":"2072:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2072:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2071:17:2"},"src":"2046:43:2"}],"scope":310,"src":"288:1804:2","usedErrors":[184,189,194,203,208,213],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"2096:146:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262],"name":"IERC721Errors","nameLocation":"2254:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2275:223:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":220,"name":"ERC721InvalidOwner","nameLocation":"2510:18:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"2537:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2529:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2529:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2528:15:2"},"src":"2504:40:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2552:135:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":225,"name":"ERC721NonexistentToken","nameLocation":"2699:22:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"tokenId","nameLocation":"2730:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2722:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2722:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2721:17:2"},"src":"2693:46:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2747:294:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":234,"name":"ERC721IncorrectOwner","nameLocation":"3053:20:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"sender","nameLocation":"3082:6:2","nodeType":"VariableDeclaration","scope":234,"src":"3074:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"3074:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"3098:7:2","nodeType":"VariableDeclaration","scope":234,"src":"3090:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3090:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"3115:5:2","nodeType":"VariableDeclaration","scope":234,"src":"3107:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3107:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3073:48:2"},"src":"3047:75:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3130:155:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":239,"name":"ERC721InvalidSender","nameLocation":"3297:19:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"sender","nameLocation":"3325:6:2","nodeType":"VariableDeclaration","scope":239,"src":"3317:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:16:2"},"src":"3291:42:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3341:162:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":244,"name":"ERC721InvalidReceiver","nameLocation":"3515:21:2","nodeType":"ErrorDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"receiver","nameLocation":"3545:8:2","nodeType":"VariableDeclaration","scope":244,"src":"3537:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3537:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3536:18:2"},"src":"3509:46:2"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3563:251:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":251,"name":"ERC721InsufficientApproval","nameLocation":"3826:26:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"operator","nameLocation":"3861:8:2","nodeType":"VariableDeclaration","scope":251,"src":"3853:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"3853:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"3879:7:2","nodeType":"VariableDeclaration","scope":251,"src":"3871:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3871:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3852:35:2"},"src":"3820:68:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3896:177:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":256,"name":"ERC721InvalidApprover","nameLocation":"4085:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"approver","nameLocation":"4115:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4107:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4107:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4106:18:2"},"src":"4079:46:2"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"4133:200:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":261,"name":"ERC721InvalidOperator","nameLocation":"4345:21:2","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"4375:8:2","nodeType":"VariableDeclaration","scope":261,"src":"4367:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4367:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4366:18:2"},"src":"4339:46:2"}],"scope":310,"src":"2244:2144:2","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4392:148:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309],"name":"IERC1155Errors","nameLocation":"4552:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4574:367:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":274,"name":"ERC1155InsufficientBalance","nameLocation":"4953:26:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"sender","nameLocation":"4988:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4980:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4980:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"balance","nameLocation":"5004:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4996:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4996:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"needed","nameLocation":"5021:6:2","nodeType":"VariableDeclaration","scope":274,"src":"5013:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"5013:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"5037:7:2","nodeType":"VariableDeclaration","scope":274,"src":"5029:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4979:66:2"},"src":"4947:99:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"5054:155:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":279,"name":"ERC1155InvalidSender","nameLocation":"5221:20:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"5250:6:2","nodeType":"VariableDeclaration","scope":279,"src":"5242:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5242:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5241:16:2"},"src":"5215:43:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5266:162:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":284,"name":"ERC1155InvalidReceiver","nameLocation":"5440:22:2","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"5471:8:2","nodeType":"VariableDeclaration","scope":284,"src":"5463:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5463:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5462:18:2"},"src":"5434:47:2"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5489:260:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":291,"name":"ERC1155MissingApprovalForAll","nameLocation":"5761:28:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"operator","nameLocation":"5798:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5790:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"5790:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"5816:5:2","nodeType":"VariableDeclaration","scope":291,"src":"5808:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5808:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5789:33:2"},"src":"5755:68:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5831:177:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":296,"name":"ERC1155InvalidApprover","nameLocation":"6020:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"approver","nameLocation":"6051:8:2","nodeType":"VariableDeclaration","scope":296,"src":"6043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"6043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6042:18:2"},"src":"6014:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"6069:200:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":301,"name":"ERC1155InvalidOperator","nameLocation":"6281:22:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"6312:8:2","nodeType":"VariableDeclaration","scope":301,"src":"6304:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6304:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6303:18:2"},"src":"6275:47:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6330:285:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":308,"name":"ERC1155InvalidArrayLength","nameLocation":"6627:25:2","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"idsLength","nameLocation":"6661:9:2","nodeType":"VariableDeclaration","scope":308,"src":"6653:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6653:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"valuesLength","nameLocation":"6680:12:2","nodeType":"VariableDeclaration","scope":308,"src":"6672:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6672:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6652:41:2"},"src":"6621:73:2"}],"scope":310,"src":"4542:2155:2","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[]}],"src":"114:6585:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1148],"ERC20":[824],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1082]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":903,"src":"136:36:3","symbolAliases":[{"foreign":{"id":312,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"144:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1083,"src":"174:63:3","symbolAliases":[{"foreign":{"id":314,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"182:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1149,"src":"239:48:3","symbolAliases":[{"foreign":{"id":316,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"247:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":310,"src":"289:65:3","symbolAliases":[{"foreign":{"id":318,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"297:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":321,"name":"Context","nameLocations":["1161:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1148,"src":"1161:7:3"},"id":322,"nodeType":"InheritanceSpecifier","src":"1161:7:3"},{"baseName":{"id":323,"name":"IERC20","nameLocations":["1170:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1170:6:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"1170:6:3"},{"baseName":{"id":325,"name":"IERC20Metadata","nameLocations":["1178:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"1178:14:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"1178:14:3"},{"baseName":{"id":327,"name":"IERC20Errors","nameLocations":["1194:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":214,"src":"1194:12:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"1194:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"358:774:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824,214,1082,902,1148],"name":"ERC20","nameLocation":"1152:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":332,"mutability":"mutable","name":"_balances","nameLocation":"1258:9:3","nodeType":"VariableDeclaration","scope":824,"src":"1214:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"1230:7:3","keyType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1214:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1241:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":338,"mutability":"mutable","name":"_allowances","nameLocation":"1348:11:3","nodeType":"VariableDeclaration","scope":824,"src":"1276:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":337,"keyName":"account","keyNameLocation":"1292:7:3","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1284:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1276:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":336,"keyName":"spender","keyNameLocation":"1319:7:3","keyType":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1303:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1330:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":340,"mutability":"mutable","name":"_totalSupply","nameLocation":"1384:12:3","nodeType":"VariableDeclaration","scope":824,"src":"1368:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1368:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":342,"mutability":"mutable","name":"_name","nameLocation":"1420:5:3","nodeType":"VariableDeclaration","scope":824,"src":"1405:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1405:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":344,"mutability":"mutable","name":"_symbol","nameLocation":"1447:7:3","nodeType":"VariableDeclaration","scope":824,"src":"1432:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"1432:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":360,"nodeType":"Block","src":"1701:60:3","statements":[{"expression":{"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":352,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1712:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":353,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1720:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1712:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":355,"nodeType":"ExpressionStatement","src":"1712:13:3"},{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":356,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1736:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":357,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1746:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1736:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":359,"nodeType":"ExpressionStatement","src":"1736:17:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"1463:176:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":361,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"name_","nameLocation":"1671:5:3","nodeType":"VariableDeclaration","scope":361,"src":"1657:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"1657:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"symbol_","nameLocation":"1692:7:3","nodeType":"VariableDeclaration","scope":361,"src":"1678:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"1678:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1656:44:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1701:0:3"},"scope":824,"src":"1645:116:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1069],"body":{"id":369,"nodeType":"Block","src":"1891:31:3","statements":[{"expression":{"id":367,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1909:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":366,"id":368,"nodeType":"Return","src":"1902:12:3"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"1769:56:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1840:4:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"1844:2:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"1876:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":364,"name":"string","nodeType":"ElementaryTypeName","src":"1876:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1875:15:3"},"scope":824,"src":"1831:91:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1075],"body":{"id":378,"nodeType":"Block","src":"2103:33:3","statements":[{"expression":{"id":376,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2121:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":375,"id":377,"nodeType":"Return","src":"2114:14:3"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"1930:105:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2050:6:3","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"2056:2:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"2088:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"2088:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2087:15:3"},"scope":824,"src":"2041:95:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1081],"body":{"id":387,"nodeType":"Block","src":"2840:28:3","statements":[{"expression":{"hexValue":"3138","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2858:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":384,"id":386,"nodeType":"Return","src":"2851:9:3"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2144:634:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2793:8:3","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"2801:2:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"2833:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":382,"name":"uint8","nodeType":"ElementaryTypeName","src":"2833:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2832:7:3"},"scope":824,"src":"2784:84:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[851],"body":{"id":396,"nodeType":"Block","src":"2994:38:3","statements":[{"expression":{"id":394,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"3012:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":393,"id":395,"nodeType":"Return","src":"3005:19:3"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"2876:51:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2942:11:3","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2953:2:3"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"2985:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2985:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2984:9:3"},"scope":824,"src":"2933:99:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[859],"body":{"id":409,"nodeType":"Block","src":"3169:44:3","statements":[{"expression":{"baseExpression":{"id":405,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3187:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":407,"indexExpression":{"id":406,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3197:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3187:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":404,"id":408,"nodeType":"Return","src":"3180:25:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"3040:49:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":410,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3104:9:3","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"3122:7:3","nodeType":"VariableDeclaration","scope":410,"src":"3114:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"3114:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3113:17:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"3160:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3160:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3159:9:3"},"scope":824,"src":"3095:118:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[869],"body":{"id":433,"nodeType":"Block","src":"3493:107:3","statements":[{"assignments":[421],"declarations":[{"constant":false,"id":421,"mutability":"mutable","name":"owner","nameLocation":"3512:5:3","nodeType":"VariableDeclaration","scope":433,"src":"3504:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3504:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3520:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3504:28:3"},{"expression":{"arguments":[{"id":426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3553:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3560:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3564:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":425,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3543:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"3543:27:3"},{"expression":{"hexValue":"74727565","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3588:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":419,"id":432,"nodeType":"Return","src":"3581:11:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"3221:191:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":434,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3427:8:3","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"to","nameLocation":"3444:2:3","nodeType":"VariableDeclaration","scope":434,"src":"3436:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"3436:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"value","nameLocation":"3456:5:3","nodeType":"VariableDeclaration","scope":434,"src":"3448:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3448:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3435:27:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":434,"src":"3487:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"3487:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3486:6:3"},"scope":824,"src":"3418:182:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[879],"body":{"id":450,"nodeType":"Block","src":"3752:53:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":444,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3770:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":446,"indexExpression":{"id":445,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3782:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3770:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":448,"indexExpression":{"id":447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3789:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3770:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":443,"id":449,"nodeType":"Return","src":"3763:34:3"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"3608:49:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3672:9:3","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"3690:5:3","nodeType":"VariableDeclaration","scope":451,"src":"3682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"3682:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"spender","nameLocation":"3705:7:3","nodeType":"VariableDeclaration","scope":451,"src":"3697:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3697:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3681:32:3"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"3743:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3743:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:9:3"},"scope":824,"src":"3663:142:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[889],"body":{"id":474,"nodeType":"Block","src":"4203:111:3","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"owner","nameLocation":"4222:5:3","nodeType":"VariableDeclaration","scope":474,"src":"4214:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4230:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4214:28:3"},{"expression":{"arguments":[{"id":467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4262:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4269:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4278:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"4253:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"4253:31:3"},{"expression":{"hexValue":"74727565","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4302:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":460,"id":473,"nodeType":"Return","src":"4295:11:3"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3813:305:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4133:7:3","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"spender","nameLocation":"4149:7:3","nodeType":"VariableDeclaration","scope":475,"src":"4141:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"4141:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"value","nameLocation":"4166:5:3","nodeType":"VariableDeclaration","scope":475,"src":"4158:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4158:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4140:32:3"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"4197:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":458,"name":"bool","nodeType":"ElementaryTypeName","src":"4197:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4196:6:3"},"scope":824,"src":"4124:190:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[901],"body":{"id":506,"nodeType":"Block","src":"5017:156:3","statements":[{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"spender","nameLocation":"5036:7:3","nodeType":"VariableDeclaration","scope":506,"src":"5028:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"5028:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":491,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5046:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5046:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5028:30:3"},{"expression":{"arguments":[{"id":493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5085:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"5091:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5100:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5069:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5069:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"5069:37:3"},{"expression":{"arguments":[{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5127:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5133:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5137:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5117:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5117:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"5117:26:3"},{"expression":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5161:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":486,"id":505,"nodeType":"Return","src":"5154:11:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"4322:596:3","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4933:12:3","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"from","nameLocation":"4954:4:3","nodeType":"VariableDeclaration","scope":507,"src":"4946:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"4946:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"to","nameLocation":"4968:2:3","nodeType":"VariableDeclaration","scope":507,"src":"4960:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"4960:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"value","nameLocation":"4980:5:3","nodeType":"VariableDeclaration","scope":507,"src":"4972:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4945:41:3"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"5011:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":484,"name":"bool","nodeType":"ElementaryTypeName","src":"5011:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5010:6:3"},"scope":824,"src":"4924:249:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":553,"nodeType":"Block","src":"5627:239:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5642:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5658:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5650:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5650:7:3","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5650:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5642:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"5638:88:3","trueBody":{"id":530,"nodeType":"Block","src":"5662:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5711:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5703:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5703:7:3","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5703:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5684:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5684:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":529,"nodeType":"RevertStatement","src":"5677:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5740:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5754:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5746:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5746:7:3","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5746:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5740:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"5736:88:3","trueBody":{"id":545,"nodeType":"Block","src":"5758:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5809:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5801:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"5801:7:3","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5801:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":538,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5780:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":544,"nodeType":"RevertStatement","src":"5773:39:3"}]}},{"expression":{"arguments":[{"id":548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5842:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5848:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5852:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":547,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5834:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"5834:24:3"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"5181:371:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5567:9:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"5585:4:3","nodeType":"VariableDeclaration","scope":554,"src":"5577:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"5599:2:3","nodeType":"VariableDeclaration","scope":554,"src":"5591:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"5591:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"5611:5:3","nodeType":"VariableDeclaration","scope":554,"src":"5603:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5603:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5576:41:3"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"5627:0:3"},"scope":824,"src":"5558:308:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"6265:1060:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6280:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6296:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6288:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:3","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6288:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6280:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":601,"nodeType":"Block","src":"6457:371:3","statements":[{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"fromBalance","nameLocation":"6480:11:3","nodeType":"VariableDeclaration","scope":601,"src":"6472:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"6472:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"initialValue":{"baseExpression":{"id":577,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6494:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":579,"indexExpression":{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6504:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6494:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6472:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6528:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6542:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6528:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":591,"nodeType":"IfStatement","src":"6524:117:3","trueBody":{"id":590,"nodeType":"Block","src":"6549:92:3","statements":[{"errorCall":{"arguments":[{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6600:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6606:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6619:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6575:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6575:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":589,"nodeType":"RevertStatement","src":"6568:57:3"}]}},{"id":600,"nodeType":"UncheckedBlock","src":"6655:162:3","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":592,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6764:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":594,"indexExpression":{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6774:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6764:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6782:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6796:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6782:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6764:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"6764:37:3"}]}]},"id":602,"nodeType":"IfStatement","src":"6276:552:3","trueBody":{"id":574,"nodeType":"Block","src":"6300:151:3","statements":[{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":570,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6418:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6434:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6418:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"6418:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6844:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6858:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6850:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"6850:7:3","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6850:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6844:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":622,"nodeType":"Block","src":"7064:211:3","statements":[{"id":621,"nodeType":"UncheckedBlock","src":"7079:185:3","statements":[{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":615,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"7226:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":617,"indexExpression":{"id":616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7236:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7226:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7243:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7226:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"7226:22:3"}]}]},"id":623,"nodeType":"IfStatement","src":"6840:435:3","trueBody":{"id":614,"nodeType":"Block","src":"6862:196:3","statements":[{"id":613,"nodeType":"UncheckedBlock","src":"6877:170:3","statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":609,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"7010:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7026:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7010:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":612,"nodeType":"ExpressionStatement","src":"7010:21:3"}]}]}},{"eventCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"7301:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7307:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7311:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7292:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7292:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"EmitStatement","src":"7287:30:3"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"5874:310:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6199:7:3","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"from","nameLocation":"6215:4:3","nodeType":"VariableDeclaration","scope":631,"src":"6207:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"6207:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"to","nameLocation":"6229:2:3","nodeType":"VariableDeclaration","scope":631,"src":"6221:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"6221:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"value","nameLocation":"6241:5:3","nodeType":"VariableDeclaration","scope":631,"src":"6233:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6233:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6206:41:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"6265:0:3"},"scope":824,"src":"6190:1135:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"7734:157:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7749:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7768:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7760:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"7760:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7760:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7749:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"7745:93:3","trueBody":{"id":652,"nodeType":"Block","src":"7772:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7823:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7815:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"7815:7:3","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7815:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"7794:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7794:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":651,"nodeType":"RevertStatement","src":"7787:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:3","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7868:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"7877:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7848:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7848:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"7848:35:3"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"7333:339:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7687:5:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"account","nameLocation":"7701:7:3","nodeType":"VariableDeclaration","scope":664,"src":"7693:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"7693:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"value","nameLocation":"7718:5:3","nodeType":"VariableDeclaration","scope":664,"src":"7710:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"7710:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7692:32:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"7734:0:3"},"scope":824,"src":"7678:213:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"8275:155:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8290:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8309:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8301:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"8301:7:3","typeDescriptions":{}}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8301:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8290:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"8286:91:3","trueBody":{"id":685,"nodeType":"Block","src":"8313:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8362:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8354:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"8354:7:3","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8354:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"8335:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8335:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":684,"nodeType":"RevertStatement","src":"8328:37:3"}]}},{"expression":{"arguments":[{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8395:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8412:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8404:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"8404:7:3","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8404:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8416:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":687,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8387:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8387:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"8387:35:3"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"7899:314:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8228:5:3","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"account","nameLocation":"8242:7:3","nodeType":"VariableDeclaration","scope":697,"src":"8234:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"8234:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"value","nameLocation":"8259:5:3","nodeType":"VariableDeclaration","scope":697,"src":"8251:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"8251:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8233:32:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"8275:0:3"},"scope":824,"src":"8219:211:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"9057:56:3","statements":[{"expression":{"arguments":[{"id":708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"9077:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"9084:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"9093:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9100:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":707,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"9068:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9068:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"9068:37:3"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"8438:539:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8992:8:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"owner","nameLocation":"9009:5:3","nodeType":"VariableDeclaration","scope":715,"src":"9001:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"9001:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"9024:7:3","nodeType":"VariableDeclaration","scope":715,"src":"9016:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"9016:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"value","nameLocation":"9041:5:3","nodeType":"VariableDeclaration","scope":715,"src":"9033:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"9033:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9000:47:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"9057:0:3"},"scope":824,"src":"8983:130:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"10078:345:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10093:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10102:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"10102:7:3","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10102:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10093:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"nodeType":"IfStatement","src":"10089:91:3","trueBody":{"id":740,"nodeType":"Block","src":"10114:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10165:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10157:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"10157:7:3","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10157:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"10136:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10136:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":739,"nodeType":"RevertStatement","src":"10129:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10194:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10213:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10205:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"10205:7:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10205:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10194:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"nodeType":"IfStatement","src":"10190:92:3","trueBody":{"id":755,"nodeType":"Block","src":"10217:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10267:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10259:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"10259:7:3","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10259:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":748,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"10239:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10239:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":754,"nodeType":"RevertStatement","src":"10232:38:3"}]}},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":757,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"10292:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":760,"indexExpression":{"id":758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10304:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10292:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":761,"indexExpression":{"id":759,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10311:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10292:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10322:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10292:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"10292:35:3"},{"condition":{"id":765,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"10342:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"10338:78:3","trueBody":{"id":772,"nodeType":"Block","src":"10353:63:3","statements":[{"eventCall":{"arguments":[{"id":767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10382:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10389:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10398:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10373:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10373:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"10368:36:3"}]}}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"9121:853:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9989:8:3","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"owner","nameLocation":"10006:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9998:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"9998:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"10021:7:3","nodeType":"VariableDeclaration","scope":775,"src":"10013:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"10013:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"value","nameLocation":"10038:5:3","nodeType":"VariableDeclaration","scope":775,"src":"10030:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"10030:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"emitEvent","nameLocation":"10050:9:3","nodeType":"VariableDeclaration","scope":775,"src":"10045:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"10045:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9997:63:3"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"10078:0:3"},"scope":824,"src":"9980:443:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"10804:397:3","statements":[{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"currentAllowance","nameLocation":"10823:16:3","nodeType":"VariableDeclaration","scope":822,"src":"10815:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10852:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10859:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":787,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"10842:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10842:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10815:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10882:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10906:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10906:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":793,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10901:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10901:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10915:3:3","memberName":"max","nodeType":"MemberAccess","src":"10901:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10882:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"10878:316:3","trueBody":{"id":820,"nodeType":"Block","src":"10920:274:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10939:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10958:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10939:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"10935:132:3","trueBody":{"id":808,"nodeType":"Block","src":"10965:102:3","statements":[{"errorCall":{"arguments":[{"id":803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"11018:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"11027:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"11045:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"10991:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10991:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":807,"nodeType":"RevertStatement","src":"10984:67:3"}]}},{"id":819,"nodeType":"UncheckedBlock","src":"11081:102:3","statements":[{"expression":{"arguments":[{"id":811,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"11119:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"11126:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"11135:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"11154:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11161:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":810,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"11110:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11110:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"11110:57:3"}]}]}}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"10431:278:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10724:15:3","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nameLocation":"10748:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10740:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"10740:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"spender","nameLocation":"10763:7:3","nodeType":"VariableDeclaration","scope":823,"src":"10755:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10755:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"value","nameLocation":"10780:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10772:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10772:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10739:47:3"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"10804:0:3"},"scope":824,"src":"10715:486:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":825,"src":"1134:10070:3","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"108:11098:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[902]},"id":903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"137:73:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":902,"linearizedBaseContracts":[902],"name":"IERC20","nameLocation":"222:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"236:163:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":836,"name":"Transfer","nameLocation":"411:8:4","nodeType":"EventDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"436:4:4","nodeType":"VariableDeclaration","scope":836,"src":"420:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"420:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"458:2:4","nodeType":"VariableDeclaration","scope":836,"src":"442:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"442:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"470:5:4","nodeType":"VariableDeclaration","scope":836,"src":"462:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"419:57:4"},"src":"405:72:4"},{"anonymous":false,"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"485:151:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":845,"name":"Approval","nameLocation":"648:8:4","nodeType":"EventDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"673:5:4","nodeType":"VariableDeclaration","scope":845,"src":"657:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"696:7:4","nodeType":"VariableDeclaration","scope":845,"src":"680:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"713:5:4","nodeType":"VariableDeclaration","scope":845,"src":"705:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"705:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:63:4"},"src":"642:78:4"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"728:67:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":851,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"810:11:4","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"821:2:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"847:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"847:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"846:9:4"},"scope":902,"src":"801:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"864:73:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"952:9:4","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"account","nameLocation":"970:7:4","nodeType":"VariableDeclaration","scope":859,"src":"962:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"962:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"961:17:4"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"1002:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:9:4"},"scope":902,"src":"943:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"1019:219:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1253:8:4","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"to","nameLocation":"1270:2:4","nodeType":"VariableDeclaration","scope":869,"src":"1262:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"1262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"value","nameLocation":"1282:5:4","nodeType":"VariableDeclaration","scope":869,"src":"1274:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1261:27:4"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"1307:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"1307:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1306:6:4"},"scope":902,"src":"1244:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1321:270:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":879,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1606:9:4","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"owner","nameLocation":"1624:5:4","nodeType":"VariableDeclaration","scope":879,"src":"1616:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"spender","nameLocation":"1639:7:4","nodeType":"VariableDeclaration","scope":879,"src":"1631:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1631:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:32:4"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"1671:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1670:9:4"},"scope":902,"src":"1597:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"1688:681:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2384:7:4","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"spender","nameLocation":"2400:7:4","nodeType":"VariableDeclaration","scope":889,"src":"2392:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"2392:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"value","nameLocation":"2417:5:4","nodeType":"VariableDeclaration","scope":889,"src":"2409:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2409:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2391:32:4"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"2442:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"2442:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2441:6:4"},"scope":902,"src":"2375:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"2456:305:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2776:12:4","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"from","nameLocation":"2797:4:4","nodeType":"VariableDeclaration","scope":901,"src":"2789:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"2789:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"2811:2:4","nodeType":"VariableDeclaration","scope":901,"src":"2803:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"2823:5:4","nodeType":"VariableDeclaration","scope":901,"src":"2815:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2815:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2788:41:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"2848:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"2848:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2847:6:4"},"scope":902,"src":"2767:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":903,"src":"212:2645:4","usedErrors":[],"usedEvents":[836,845]}],"src":"109:2750:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3157],"EIP712":[3384],"ERC20":[824],"ERC20Permit":[1056],"IERC20Permit":[1118],"Nonces":[1216]},"id":1057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1119,"src":"153:48:5","symbolAliases":[{"foreign":{"id":905,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"161:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":825,"src":"203:35:5","symbolAliases":[{"foreign":{"id":907,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"211:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":3158,"src":"240:60:5","symbolAliases":[{"foreign":{"id":909,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"248:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":3385,"src":"302:62:5","symbolAliases":[{"foreign":{"id":911,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"310:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1217,"src":"366:49:5","symbolAliases":[{"foreign":{"id":913,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"374:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":916,"name":"ERC20","nameLocations":["950:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"950:5:5"},"id":917,"nodeType":"InheritanceSpecifier","src":"950:5:5"},{"baseName":{"id":918,"name":"IERC20Permit","nameLocations":["957:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1118,"src":"957:12:5"},"id":919,"nodeType":"InheritanceSpecifier","src":"957:12:5"},{"baseName":{"id":920,"name":"EIP712","nameLocations":["971:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"971:6:5"},"id":921,"nodeType":"InheritanceSpecifier","src":"971:6:5"},{"baseName":{"id":922,"name":"Nonces","nameLocations":["979:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"979:6:5"},"id":923,"nodeType":"InheritanceSpecifier","src":"979:6:5"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"419:496:5","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1056,"linearizedBaseContracts":[1056,1216,3384,172,1118,824,214,1082,902,1148],"name":"ERC20Permit","nameLocation":"935:11:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":928,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"1018:15:5","nodeType":"VariableDeclaration","scope":1056,"src":"993:147:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"993:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1055:84:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":925,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1045:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1045:95:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"1149:54:5","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":933,"name":"ERC2612ExpiredSignature","nameLocation":"1215:23:5","nodeType":"ErrorDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"deadline","nameLocation":"1247:8:5","nodeType":"VariableDeclaration","scope":933,"src":"1239:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1239:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1238:18:5"},"src":"1209:48:5"},{"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"1265:47:5","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":940,"name":"ERC2612InvalidSigner","nameLocation":"1324:20:5","nodeType":"ErrorDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"signer","nameLocation":"1353:6:5","nodeType":"VariableDeclaration","scope":940,"src":"1345:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"owner","nameLocation":"1369:5:5","nodeType":"VariableDeclaration","scope":940,"src":"1361:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"1361:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1344:31:5"},"src":"1318:58:5"},{"body":{"id":950,"nodeType":"Block","src":"1665:2:5","statements":[]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"1384:225:5","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":951,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":946,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"1654:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1660:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":948,"kind":"baseConstructorSpecifier","modifierName":{"id":945,"name":"EIP712","nameLocations":["1647:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"1647:6:5"},"nodeType":"ModifierInvocation","src":"1647:17:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"name","nameLocation":"1641:4:5","nodeType":"VariableDeclaration","scope":951,"src":"1627:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":942,"name":"string","nodeType":"ElementaryTypeName","src":"1627:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1626:20:5"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"1665:0:5"},"scope":1056,"src":"1615:52:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1103],"body":{"id":1027,"nodeType":"Block","src":"1923:498:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":969,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1938:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1944:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"1938:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":971,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"1956:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1938:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":978,"nodeType":"IfStatement","src":"1934:99:5","trueBody":{"id":977,"nodeType":"Block","src":"1966:67:5","statements":[{"errorCall":{"arguments":[{"id":974,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"2012:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":973,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"1988:23:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1988:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":976,"nodeType":"RevertStatement","src":"1981:40:5"}]}},{"assignments":[980],"declarations":[{"constant":false,"id":980,"mutability":"mutable","name":"structHash","nameLocation":"2053:10:5","nodeType":"VariableDeclaration","scope":1027,"src":"2045:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2045:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":994,"initialValue":{"arguments":[{"arguments":[{"id":984,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"2087:15:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":985,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2104:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":986,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2111:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2120:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":989,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2137:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":988,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2127:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2127:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":991,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"2145:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":982,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2076:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2080:6:5","memberName":"encode","nodeType":"MemberAccess","src":"2076:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2076:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":981,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2066:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:89:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2045:110:5"},{"assignments":[996],"declarations":[{"constant":false,"id":996,"mutability":"mutable","name":"hash","nameLocation":"2176:4:5","nodeType":"VariableDeclaration","scope":1027,"src":"2168:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2168:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1000,"initialValue":{"arguments":[{"id":998,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"2200:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":997,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"2183:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2183:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2168:43:5"},{"assignments":[1002],"declarations":[{"constant":false,"id":1002,"mutability":"mutable","name":"signer","nameLocation":"2232:6:5","nodeType":"VariableDeclaration","scope":1027,"src":"2224:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"2224:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1010,"initialValue":{"arguments":[{"id":1005,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2255:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1006,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2261:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1007,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"2264:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1008,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2267:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1003,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"2241:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3157_$","typeString":"type(library ECDSA)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2247:7:5","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3107,"src":"2241:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2241:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2224:45:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1011,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2284:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1012,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2294:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2284:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1020,"nodeType":"IfStatement","src":"2280:90:5","trueBody":{"id":1019,"nodeType":"Block","src":"2301:69:5","statements":[{"errorCall":{"arguments":[{"id":1015,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2344:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1016,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2352:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1014,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"2323:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2323:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1018,"nodeType":"RevertStatement","src":"2316:42:5"}]}},{"expression":{"arguments":[{"id":1022,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2391:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2398:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2407:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1021,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"2382:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2382:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"ExpressionStatement","src":"2382:31:5"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"1675:45:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1028,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1735:6:5","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"owner","nameLocation":"1760:5:5","nodeType":"VariableDeclaration","scope":1028,"src":"1752:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"spender","nameLocation":"1784:7:5","nodeType":"VariableDeclaration","scope":1028,"src":"1776:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"1776:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"value","nameLocation":"1810:5:5","nodeType":"VariableDeclaration","scope":1028,"src":"1802:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1802:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"deadline","nameLocation":"1834:8:5","nodeType":"VariableDeclaration","scope":1028,"src":"1826:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1826:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"v","nameLocation":"1859:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1853:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":961,"name":"uint8","nodeType":"ElementaryTypeName","src":"1853:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"r","nameLocation":"1879:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1871:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1871:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"s","nameLocation":"1899:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1891:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1891:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1741:166:5"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"1923:0:5"},"scope":1056,"src":"1726:695:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1111,1175],"body":{"id":1044,"nodeType":"Block","src":"2580:45:5","statements":[{"expression":{"arguments":[{"id":1041,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"2611:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1039,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2598:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1056_$","typeString":"type(contract super ERC20Permit)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2604:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1175,"src":"2598:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2598:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1038,"id":1043,"nodeType":"Return","src":"2591:26:5"}]},"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"2429:45:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2489:6:5","nodeType":"FunctionDefinition","overrides":{"id":1035,"nodeType":"OverrideSpecifier","overrides":[{"id":1033,"name":"IERC20Permit","nameLocations":["2540:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1118,"src":"2540:12:5"},{"id":1034,"name":"Nonces","nameLocations":["2554:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"2554:6:5"}],"src":"2531:30:5"},"parameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"owner","nameLocation":"2504:5:5","nodeType":"VariableDeclaration","scope":1045,"src":"2496:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"2496:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2495:15:5"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1045,"src":"2571:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2570:9:5"},"scope":1056,"src":"2480:145:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1117],"body":{"id":1054,"nodeType":"Block","src":"2806:46:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1051,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"2824:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2824:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1050,"id":1053,"nodeType":"Return","src":"2817:27:5"}]},"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"2633:45:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2747:16:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[],"src":"2763:2:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1055,"src":"2797:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2797:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2796:9:5"},"scope":1056,"src":"2738:114:5","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1057,"src":"917:1938:5","usedErrors":[184,189,194,203,208,213,933,940,1158,1282,1284,2820,2825,2830],"usedEvents":[152,836,845]}],"src":"125:2732:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[902],"IERC20Metadata":[1082]},"id":1083,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1058,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1060,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1083,"sourceUnit":903,"src":"156:37:6","symbolAliases":[{"foreign":{"id":1059,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"164:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1062,"name":"IERC20","nameLocations":["316:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"316:6:6"},"id":1063,"nodeType":"InheritanceSpecifier","src":"316:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"197:89:6","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1082,"linearizedBaseContracts":[1082,902],"name":"IERC20Metadata","nameLocation":"298:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"330:56:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1069,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"401:4:6","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[],"src":"405:2:6"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"431:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1066,"name":"string","nodeType":"ElementaryTypeName","src":"431:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"430:15:6"},"scope":1082,"src":"392:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"454:58:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1075,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"527:6:6","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"533:2:6"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1075,"src":"559:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1072,"name":"string","nodeType":"ElementaryTypeName","src":"559:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"558:15:6"},"scope":1082,"src":"518:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"582:67:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1081,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"664:8:6","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[],"src":"672:2:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1081,"src":"698:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1078,"name":"uint8","nodeType":"ElementaryTypeName","src":"698:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"697:7:6"},"scope":1082,"src":"655:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1083,"src":"288:420:6","usedErrors":[],"usedEvents":[836,845]}],"src":"128:582:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1118]},"id":1119,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1084,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"154:2000:7","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1118,"linearizedBaseContracts":[1118],"name":"IERC20Permit","nameLocation":"2166:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"2186:872:7","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1103,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3073:6:7","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"owner","nameLocation":"3098:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"3090:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"spender","nameLocation":"3122:7:7","nodeType":"VariableDeclaration","scope":1103,"src":"3114:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"3114:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"value","nameLocation":"3148:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"3140:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"3140:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"deadline","nameLocation":"3172:8:7","nodeType":"VariableDeclaration","scope":1103,"src":"3164:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3164:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"v","nameLocation":"3197:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3191:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1095,"name":"uint8","nodeType":"ElementaryTypeName","src":"3191:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"r","nameLocation":"3217:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3209:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3209:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"s","nameLocation":"3237:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3229:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3229:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3079:166:7"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[],"src":"3254:0:7"},"scope":1118,"src":"3064:191:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"3263:300:7","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1111,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3578:6:7","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"owner","nameLocation":"3593:5:7","nodeType":"VariableDeclaration","scope":1111,"src":"3585:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3584:15:7"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1111,"src":"3623:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3622:9:7"},"scope":1118,"src":"3569:63:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"3640:130:7","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1117,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3839:16:7","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"3855:2:7"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"3881:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3881:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3880:9:7"},"scope":1118,"src":"3830:60:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1119,"src":"2156:1737:7","usedErrors":[],"usedEvents":[]}],"src":"126:3769:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1148]},"id":1149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1120,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"132:505:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1148,"linearizedBaseContracts":[1148],"name":"Context","nameLocation":"657:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1129,"nodeType":"Block","src":"734:36:8","statements":[{"expression":{"expression":{"id":1126,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"752:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"756:6:8","memberName":"sender","nodeType":"MemberAccess","src":"752:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1125,"id":1128,"nodeType":"Return","src":"745:17:8"}]},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"681:10:8","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"691:2:8"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1130,"src":"725:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"724:9:8"},"scope":1148,"src":"672:98:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"845:34:8","statements":[{"expression":{"expression":{"id":1135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"863:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"867:4:8","memberName":"data","nodeType":"MemberAccess","src":"863:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1134,"id":1137,"nodeType":"Return","src":"856:15:8"}]},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"787:8:8","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"795:2:8"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"829:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1132,"name":"bytes","nodeType":"ElementaryTypeName","src":"829:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"828:16:8"},"scope":1148,"src":"778:101:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1146,"nodeType":"Block","src":"959:27:8","statements":[{"expression":{"hexValue":"30","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"977:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1143,"id":1145,"nodeType":"Return","src":"970:8:8"}]},"id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"896:20:8","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"916:2:8"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"950:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"950:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"949:9:8"},"scope":1148,"src":"887:99:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1149,"src":"639:350:8","usedErrors":[],"usedEvents":[]}],"src":"104:887:8"},"id":8},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1216]},"id":1217,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1150,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"129:85:9","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1216,"linearizedBaseContracts":[1216],"name":"Nonces","nameLocation":"234:6:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"248:92:9","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1158,"name":"InvalidAccountNonce","nameLocation":"352:19:9","nodeType":"ErrorDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"account","nameLocation":"380:7:9","nodeType":"VariableDeclaration","scope":1158,"src":"372:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"372:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"currentNonce","nameLocation":"397:12:9","nodeType":"VariableDeclaration","scope":1158,"src":"389:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"389:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"371:39:9"},"src":"346:65:9"},{"constant":false,"id":1162,"mutability":"mutable","name":"_nonces","nameLocation":"463:7:9","nodeType":"VariableDeclaration","scope":1216,"src":"419:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1161,"keyName":"account","keyNameLocation":"435:7:9","keyType":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"419:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1174,"nodeType":"Block","src":"625:40:9","statements":[{"expression":{"baseExpression":{"id":1170,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"643:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1172,"indexExpression":{"id":1171,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"651:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"643:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1169,"id":1173,"nodeType":"Return","src":"636:21:9"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"479:71:9","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1175,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"565:6:9","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"owner","nameLocation":"580:5:9","nodeType":"VariableDeclaration","scope":1175,"src":"572:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"571:15:9"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1175,"src":"616:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"616:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"615:9:9"},"scope":1216,"src":"556:109:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1189,"nodeType":"Block","src":"855:333:9","statements":[{"id":1188,"nodeType":"UncheckedBlock","src":"1061:120:9","statements":[{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1153:16:9","subExpression":{"baseExpression":{"id":1183,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1153:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1185,"indexExpression":{"id":1184,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"1161:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1153:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1182,"id":1187,"nodeType":"Return","src":"1146:23:9"}]}]},"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"673:107:9","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1190,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"795:9:9","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"owner","nameLocation":"813:5:9","nodeType":"VariableDeclaration","scope":1190,"src":"805:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"805:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"804:15:9"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"846:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"846:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"845:9:9"},"scope":1216,"src":"786:402:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"1377:154:9","statements":[{"assignments":[1199],"declarations":[{"constant":false,"id":1199,"mutability":"mutable","name":"current","nameLocation":"1396:7:9","nodeType":"VariableDeclaration","scope":1214,"src":"1388:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1388:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1203,"initialValue":{"arguments":[{"id":1201,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1416:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1200,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"1406:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1406:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1388:34:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"1437:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1205,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1437:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1213,"nodeType":"IfStatement","src":"1433:91:9","trueBody":{"id":1212,"nodeType":"Block","src":"1455:69:9","statements":[{"errorCall":{"arguments":[{"id":1208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1497:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1504:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1207,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1477:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1477:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1211,"nodeType":"RevertStatement","src":"1470:42:9"}]}}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"1196:102:9","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1313:16:9","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"owner","nameLocation":"1338:5:9","nodeType":"VariableDeclaration","scope":1215,"src":"1330:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"nonce","nameLocation":"1353:5:9","nodeType":"VariableDeclaration","scope":1215,"src":"1345:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1329:30:9"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"1377:0:9"},"scope":1216,"src":"1304:227:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1217,"src":"216:1318:9","usedErrors":[1158],"usedEvents":[]}],"src":"101:1435:9"},"id":9},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1268]},"id":1269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1218,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"130:507:10","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1268,"linearizedBaseContracts":[1268],"name":"Panic","nameLocation":"690:5:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"703:36:10","text":"@dev generic / unspecified error"},"id":1223,"mutability":"constant","name":"GENERIC","nameLocation":"771:7:10","nodeType":"VariableDeclaration","scope":1268,"src":"745:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"781:4:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"792:37:10","text":"@dev used by the assert() builtin"},"id":1227,"mutability":"constant","name":"ASSERT","nameLocation":"861:6:10","nodeType":"VariableDeclaration","scope":1268,"src":"835:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"835:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"870:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"881:41:10","text":"@dev arithmetic underflow or overflow"},"id":1231,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"954:14:10","nodeType":"VariableDeclaration","scope":1268,"src":"928:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:4:10","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"982:35:10","text":"@dev division or modulo by zero"},"id":1235,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1049:16:10","nodeType":"VariableDeclaration","scope":1268,"src":"1023:49:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1068:4:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1236,"nodeType":"StructuredDocumentation","src":"1079:30:10","text":"@dev enum conversion error"},"id":1239,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1141:21:10","nodeType":"VariableDeclaration","scope":1268,"src":"1115:54:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1165:4:10","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"1176:36:10","text":"@dev invalid encoding in storage"},"id":1243,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1244:22:10","nodeType":"VariableDeclaration","scope":1268,"src":"1218:55:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1218:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"1280:24:10","text":"@dev empty array pop"},"id":1247,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1336:15:10","nodeType":"VariableDeclaration","scope":1268,"src":"1310:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:4:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"1365:35:10","text":"@dev array out of bounds access"},"id":1251,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1432:19:10","nodeType":"VariableDeclaration","scope":1268,"src":"1406:52:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1454:4:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"1465:65:10","text":"@dev resource error (too large allocation or too large array)"},"id":1255,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1562:14:10","nodeType":"VariableDeclaration","scope":1268,"src":"1536:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1536:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1579:4:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"1590:42:10","text":"@dev calling invalid internal function"},"id":1259,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1664:25:10","nodeType":"VariableDeclaration","scope":1268,"src":"1638:58:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1638:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:4:10","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"1868:157:10","statements":[{"AST":{"nativeSrc":"1904:114:10","nodeType":"YulBlock","src":"1904:114:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1926:4:10","nodeType":"YulLiteral","src":"1926:4:10","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1932:10:10","nodeType":"YulLiteral","src":"1932:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1919:6:10","nodeType":"YulIdentifier","src":"1919:6:10"},"nativeSrc":"1919:24:10","nodeType":"YulFunctionCall","src":"1919:24:10"},"nativeSrc":"1919:24:10","nodeType":"YulExpressionStatement","src":"1919:24:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1964:4:10","nodeType":"YulLiteral","src":"1964:4:10","type":"","value":"0x20"},{"name":"code","nativeSrc":"1970:4:10","nodeType":"YulIdentifier","src":"1970:4:10"}],"functionName":{"name":"mstore","nativeSrc":"1957:6:10","nodeType":"YulIdentifier","src":"1957:6:10"},"nativeSrc":"1957:18:10","nodeType":"YulFunctionCall","src":"1957:18:10"},"nativeSrc":"1957:18:10","nodeType":"YulExpressionStatement","src":"1957:18:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1996:4:10","nodeType":"YulLiteral","src":"1996:4:10","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"2002:4:10","nodeType":"YulLiteral","src":"2002:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1989:6:10","nodeType":"YulIdentifier","src":"1989:6:10"},"nativeSrc":"1989:18:10","nodeType":"YulFunctionCall","src":"1989:18:10"},"nativeSrc":"1989:18:10","nodeType":"YulExpressionStatement","src":"1989:18:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1262,"isOffset":false,"isSlot":false,"src":"1970:4:10","valueSize":1}],"flags":["memory-safe"],"id":1265,"nodeType":"InlineAssembly","src":"1879:139:10"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"1705:114:10","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1834:5:10","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"code","nameLocation":"1848:4:10","nodeType":"VariableDeclaration","scope":1267,"src":"1840:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1840:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1839:14:10"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"1868:0:10"},"scope":1268,"src":"1825:200:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1269,"src":"682:1346:10","usedErrors":[],"usedEvents":[]}],"src":"102:1928:10"},"id":10},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1274],"ShortStrings":[1485],"StorageSlot":[1609]},"id":1486,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1270,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1272,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1486,"sourceUnit":1610,"src":"137:46:11","symbolAliases":[{"foreign":{"id":1271,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"145:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1274,"name":"ShortString","nameLocation":"362:11:11","nodeType":"UserDefinedValueTypeDefinition","src":"357:28:11","underlyingType":{"id":1273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"377:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"389:903:11","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1485,"linearizedBaseContracts":[1485],"name":"ShortStrings","nameLocation":"1302:12:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1278,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1411:17:11","nodeType":"VariableDeclaration","scope":1485,"src":"1386:111:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1386:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1431:66:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1282,"name":"StringTooLong","nameLocation":"1512:13:11","nodeType":"ErrorDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"str","nameLocation":"1533:3:11","nodeType":"VariableDeclaration","scope":1282,"src":"1526:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1279,"name":"string","nodeType":"ElementaryTypeName","src":"1526:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1525:12:11"},"src":"1506:32:11"},{"errorSelector":"b3512b0c","id":1284,"name":"InvalidShortString","nameLocation":"1550:18:11","nodeType":"ErrorDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"1568:2:11"},"src":"1544:27:11"},{"body":{"id":1327,"nodeType":"Block","src":"1837:214:11","statements":[{"assignments":[1294],"declarations":[{"constant":false,"id":1294,"mutability":"mutable","name":"bstr","nameLocation":"1861:4:11","nodeType":"VariableDeclaration","scope":1327,"src":"1848:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1293,"name":"bytes","nodeType":"ElementaryTypeName","src":"1848:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1299,"initialValue":{"arguments":[{"id":1297,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"1874:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1868:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1295,"name":"bytes","nodeType":"ElementaryTypeName","src":"1868:5:11","typeDescriptions":{}}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1868:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1848:30:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1300,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1893:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1898:6:11","memberName":"length","nodeType":"MemberAccess","src":"1893:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1907:2:11","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1893:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1309,"nodeType":"IfStatement","src":"1889:74:11","trueBody":{"id":1308,"nodeType":"Block","src":"1911:52:11","statements":[{"errorCall":{"arguments":[{"id":1305,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"1947:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1304,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"1933:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1307,"nodeType":"RevertStatement","src":"1926:25:11"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1318,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"2021:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2013:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2013:7:11","typeDescriptions":{}}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2013:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2005:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:11","typeDescriptions":{}}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1321,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"2030:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2035:6:11","memberName":"length","nodeType":"MemberAccess","src":"2030:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2005:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1997:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1997:7:11","typeDescriptions":{}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1997:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1310,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"1980:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1992:4:11","memberName":"wrap","nodeType":"MemberAccess","src":"1980:16:11","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1980:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"functionReturnParameters":1292,"id":1326,"nodeType":"Return","src":"1973:70:11"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"1579:174:11","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1328,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1768:13:11","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"str","nameLocation":"1796:3:11","nodeType":"VariableDeclaration","scope":1328,"src":"1782:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1286,"name":"string","nodeType":"ElementaryTypeName","src":"1782:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1781:19:11"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1328,"src":"1824:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1290,"nodeType":"UserDefinedTypeName","pathNode":{"id":1289,"name":"ShortString","nameLocations":["1824:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"1824:11:11"},"referencedDeclaration":1274,"src":"1824:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"}],"src":"1823:13:11"},"scope":1485,"src":"1759:292:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"2214:313:11","statements":[{"assignments":[1338],"declarations":[{"constant":false,"id":1338,"mutability":"mutable","name":"len","nameLocation":"2233:3:11","nodeType":"VariableDeclaration","scope":1353,"src":"2225:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1342,"initialValue":{"arguments":[{"id":1340,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2250:4:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"id":1339,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"2239:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2239:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2225:30:11"},{"assignments":[1344],"declarations":[{"constant":false,"id":1344,"mutability":"mutable","name":"str","nameLocation":"2359:3:11","nodeType":"VariableDeclaration","scope":1353,"src":"2345:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1343,"name":"string","nodeType":"ElementaryTypeName","src":"2345:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1349,"initialValue":{"arguments":[{"hexValue":"3332","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2365:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1345,"name":"string","nodeType":"ElementaryTypeName","src":"2369:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2345:34:11"},{"AST":{"nativeSrc":"2415:84:11","nodeType":"YulBlock","src":"2415:84:11","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2437:3:11","nodeType":"YulIdentifier","src":"2437:3:11"},{"name":"len","nativeSrc":"2442:3:11","nodeType":"YulIdentifier","src":"2442:3:11"}],"functionName":{"name":"mstore","nativeSrc":"2430:6:11","nodeType":"YulIdentifier","src":"2430:6:11"},"nativeSrc":"2430:16:11","nodeType":"YulFunctionCall","src":"2430:16:11"},"nativeSrc":"2430:16:11","nodeType":"YulExpressionStatement","src":"2430:16:11"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2471:3:11","nodeType":"YulIdentifier","src":"2471:3:11"},{"kind":"number","nativeSrc":"2476:4:11","nodeType":"YulLiteral","src":"2476:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2467:3:11","nodeType":"YulIdentifier","src":"2467:3:11"},"nativeSrc":"2467:14:11","nodeType":"YulFunctionCall","src":"2467:14:11"},{"name":"sstr","nativeSrc":"2483:4:11","nodeType":"YulIdentifier","src":"2483:4:11"}],"functionName":{"name":"mstore","nativeSrc":"2460:6:11","nodeType":"YulIdentifier","src":"2460:6:11"},"nativeSrc":"2460:28:11","nodeType":"YulFunctionCall","src":"2460:28:11"},"nativeSrc":"2460:28:11","nodeType":"YulExpressionStatement","src":"2460:28:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1338,"isOffset":false,"isSlot":false,"src":"2442:3:11","valueSize":1},{"declaration":1332,"isOffset":false,"isSlot":false,"src":"2483:4:11","valueSize":1},{"declaration":1344,"isOffset":false,"isSlot":false,"src":"2437:3:11","valueSize":1},{"declaration":1344,"isOffset":false,"isSlot":false,"src":"2471:3:11","valueSize":1}],"flags":["memory-safe"],"id":1350,"nodeType":"InlineAssembly","src":"2390:109:11"},{"expression":{"id":1351,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"2516:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1336,"id":1352,"nodeType":"Return","src":"2509:10:11"}]},"documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"2059:75:11","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2149:8:11","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"sstr","nameLocation":"2170:4:11","nodeType":"VariableDeclaration","scope":1354,"src":"2158:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1331,"nodeType":"UserDefinedTypeName","pathNode":{"id":1330,"name":"ShortString","nameLocations":["2158:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2158:11:11"},"referencedDeclaration":1274,"src":"2158:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"}],"src":"2157:18:11"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"2199:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1334,"name":"string","nodeType":"ElementaryTypeName","src":"2199:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2198:15:11"},"scope":1485,"src":"2140:387:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1385,"nodeType":"Block","src":"2674:181:11","statements":[{"assignments":[1364],"declarations":[{"constant":false,"id":1364,"mutability":"mutable","name":"result","nameLocation":"2693:6:11","nodeType":"VariableDeclaration","scope":1385,"src":"2685:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1374,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1369,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"2729:4:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"expression":{"id":1367,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"2710:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2722:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"2710:18:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2710:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"2702:7:11","typeDescriptions":{}}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2738:4:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2702:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2685:57:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"2757:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2766:2:11","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2757:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1382,"nodeType":"IfStatement","src":"2753:71:11","trueBody":{"id":1381,"nodeType":"Block","src":"2770:54:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1378,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2792:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1380,"nodeType":"RevertStatement","src":"2785:27:11"}]}},{"expression":{"id":1383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"2841:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1362,"id":1384,"nodeType":"Return","src":"2834:13:11"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"2535:63:11","text":" @dev Return the length of a `ShortString`."},"id":1386,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2613:10:11","nodeType":"FunctionDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"sstr","nameLocation":"2636:4:11","nodeType":"VariableDeclaration","scope":1386,"src":"2624:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1357,"nodeType":"UserDefinedTypeName","pathNode":{"id":1356,"name":"ShortString","nameLocations":["2624:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2624:11:11"},"referencedDeclaration":1274,"src":"2624:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"}],"src":"2623:18:11"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1386,"src":"2665:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2664:9:11"},"scope":1485,"src":"2604:251:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1425,"nodeType":"Block","src":"3083:238:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3104:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3098:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1397,"name":"bytes","nodeType":"ElementaryTypeName","src":"3098:5:11","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3098:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3111:6:11","memberName":"length","nodeType":"MemberAccess","src":"3098:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3120:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3098:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1423,"nodeType":"Block","src":"3184:130:11","statements":[{"expression":{"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1412,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"3225:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1409,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3199:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1609_$","typeString":"type(library StorageSlot)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3211:13:11","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1586,"src":"3199:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1506_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3232:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1505,"src":"3199:38:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3240:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3199:46:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1417,"nodeType":"ExpressionStatement","src":"3199:46:11"},{"expression":{"arguments":[{"id":1420,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3284:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1418,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"3267:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3279:4:11","memberName":"wrap","nodeType":"MemberAccess","src":"3267:16:11","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3267:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"functionReturnParameters":1396,"id":1422,"nodeType":"Return","src":"3260:42:11"}]},"id":1424,"nodeType":"IfStatement","src":"3094:220:11","trueBody":{"id":1408,"nodeType":"Block","src":"3124:54:11","statements":[{"expression":{"arguments":[{"id":1405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3160:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1404,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"3146:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3146:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"functionReturnParameters":1396,"id":1407,"nodeType":"Return","src":"3139:27:11"}]}}]},"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"2863:105:11","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2983:25:11","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"value","nameLocation":"3023:5:11","nodeType":"VariableDeclaration","scope":1426,"src":"3009:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1388,"name":"string","nodeType":"ElementaryTypeName","src":"3009:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"store","nameLocation":"3045:5:11","nodeType":"VariableDeclaration","scope":1426,"src":"3030:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1390,"name":"string","nodeType":"ElementaryTypeName","src":"3030:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3008:43:11"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"3070:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1394,"nodeType":"UserDefinedTypeName","pathNode":{"id":1393,"name":"ShortString","nameLocations":["3070:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"3070:11:11"},"referencedDeclaration":1274,"src":"3070:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"}],"src":"3069:13:11"},"scope":1485,"src":"2974:347:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1452,"nodeType":"Block","src":"3566:164:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"3600:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"expression":{"id":1437,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"3581:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3593:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"3581:18:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1441,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3610:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3581:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1450,"nodeType":"Block","src":"3684:39:11","statements":[{"expression":{"id":1448,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"3706:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1436,"id":1449,"nodeType":"Return","src":"3699:12:11"}]},"id":1451,"nodeType":"IfStatement","src":"3577:146:11","trueBody":{"id":1447,"nodeType":"Block","src":"3629:49:11","statements":[{"expression":{"arguments":[{"id":1444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"3660:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"id":1443,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"3651:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3651:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1436,"id":1446,"nodeType":"Return","src":"3644:22:11"}]}}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"3329:122:11","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3466:20:11","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"value","nameLocation":"3499:5:11","nodeType":"VariableDeclaration","scope":1453,"src":"3487:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1429,"nodeType":"UserDefinedTypeName","pathNode":{"id":1428,"name":"ShortString","nameLocations":["3487:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"3487:11:11"},"referencedDeclaration":1274,"src":"3487:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"store","nameLocation":"3521:5:11","nodeType":"VariableDeclaration","scope":1453,"src":"3506:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1431,"name":"string","nodeType":"ElementaryTypeName","src":"3506:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3486:41:11"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"3551:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1434,"name":"string","nodeType":"ElementaryTypeName","src":"3551:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3550:15:11"},"scope":1485,"src":"3457:273:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1483,"nodeType":"Block","src":"4219:180:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4253:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"expression":{"id":1464,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"4234:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4246:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"4234:18:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4234:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1468,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4263:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4234:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1481,"nodeType":"Block","src":"4339:53:11","statements":[{"expression":{"expression":{"arguments":[{"id":1477,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"4367:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4361:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"4361:5:11","typeDescriptions":{}}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4361:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4374:6:11","memberName":"length","nodeType":"MemberAccess","src":"4361:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1463,"id":1480,"nodeType":"Return","src":"4354:26:11"}]},"id":1482,"nodeType":"IfStatement","src":"4230:162:11","trueBody":{"id":1474,"nodeType":"Block","src":"4282:51:11","statements":[{"expression":{"arguments":[{"id":1471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4315:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"id":1470,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"4304:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1463,"id":1473,"nodeType":"Return","src":"4297:24:11"}]}}]},"documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"3738:370:11","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1484,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4123:22:11","nodeType":"FunctionDefinition","parameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"value","nameLocation":"4158:5:11","nodeType":"VariableDeclaration","scope":1484,"src":"4146:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1456,"nodeType":"UserDefinedTypeName","pathNode":{"id":1455,"name":"ShortString","nameLocations":["4146:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"4146:11:11"},"referencedDeclaration":1274,"src":"4146:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"store","nameLocation":"4180:5:11","nodeType":"VariableDeclaration","scope":1484,"src":"4165:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1458,"name":"string","nodeType":"ElementaryTypeName","src":"4165:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4145:41:11"},"returnParameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1484,"src":"4210:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"4210:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4209:9:11"},"scope":1485,"src":"4114:285:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1486,"src":"1294:3108:11","usedErrors":[1282,1284],"usedEvents":[]}],"src":"109:4295:11"},"id":11},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1609]},"id":1610,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1487,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"197:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"225:1213:12","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1609,"linearizedBaseContracts":[1609],"name":"StorageSlot","nameLocation":"1448:11:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1491,"members":[{"constant":false,"id":1490,"mutability":"mutable","name":"value","nameLocation":"1505:5:12","nodeType":"VariableDeclaration","scope":1491,"src":"1497:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"1497:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1474:11:12","nodeType":"StructDefinition","scope":1609,"src":"1467:51:12","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1494,"members":[{"constant":false,"id":1493,"mutability":"mutable","name":"value","nameLocation":"1561:5:12","nodeType":"VariableDeclaration","scope":1494,"src":"1556:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1492,"name":"bool","nodeType":"ElementaryTypeName","src":"1556:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1533:11:12","nodeType":"StructDefinition","scope":1609,"src":"1526:48:12","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1497,"members":[{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"1620:5:12","nodeType":"VariableDeclaration","scope":1497,"src":"1612:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1612:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1589:11:12","nodeType":"StructDefinition","scope":1609,"src":"1582:51:12","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1500,"members":[{"constant":false,"id":1499,"mutability":"mutable","name":"value","nameLocation":"1679:5:12","nodeType":"VariableDeclaration","scope":1500,"src":"1671:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1648:11:12","nodeType":"StructDefinition","scope":1609,"src":"1641:51:12","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1503,"members":[{"constant":false,"id":1502,"mutability":"mutable","name":"value","nameLocation":"1736:5:12","nodeType":"VariableDeclaration","scope":1503,"src":"1729:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1501,"name":"int256","nodeType":"ElementaryTypeName","src":"1729:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1707:10:12","nodeType":"StructDefinition","scope":1609,"src":"1700:49:12","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1506,"members":[{"constant":false,"id":1505,"mutability":"mutable","name":"value","nameLocation":"1793:5:12","nodeType":"VariableDeclaration","scope":1506,"src":"1786:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1504,"name":"string","nodeType":"ElementaryTypeName","src":"1786:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1764:10:12","nodeType":"StructDefinition","scope":1609,"src":"1757:49:12","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1509,"members":[{"constant":false,"id":1508,"mutability":"mutable","name":"value","nameLocation":"1848:5:12","nodeType":"VariableDeclaration","scope":1509,"src":"1842:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1507,"name":"bytes","nodeType":"ElementaryTypeName","src":"1842:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1821:9:12","nodeType":"StructDefinition","scope":1609,"src":"1814:47:12","visibility":"public"},{"body":{"id":1519,"nodeType":"Block","src":"2048:83:12","statements":[{"AST":{"nativeSrc":"2084:40:12","nodeType":"YulBlock","src":"2084:40:12","statements":[{"nativeSrc":"2099:14:12","nodeType":"YulAssignment","src":"2099:14:12","value":{"name":"slot","nativeSrc":"2109:4:12","nodeType":"YulIdentifier","src":"2109:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2099:6:12","nodeType":"YulIdentifier","src":"2099:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1516,"isOffset":false,"isSlot":true,"src":"2099:6:12","suffix":"slot","valueSize":1},{"declaration":1512,"isOffset":false,"isSlot":false,"src":"2109:4:12","valueSize":1}],"flags":["memory-safe"],"id":1518,"nodeType":"InlineAssembly","src":"2059:65:12"}]},"documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"1869:89:12","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1973:14:12","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"slot","nameLocation":"1996:4:12","nodeType":"VariableDeclaration","scope":1520,"src":"1988:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1988:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1987:14:12"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"r","nameLocation":"2045:1:12","nodeType":"VariableDeclaration","scope":1520,"src":"2025:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1491_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1515,"nodeType":"UserDefinedTypeName","pathNode":{"id":1514,"name":"AddressSlot","nameLocations":["2025:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"2025:11:12"},"referencedDeclaration":1491,"src":"2025:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1491_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"2024:23:12"},"scope":1609,"src":"1964:167:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1530,"nodeType":"Block","src":"2317:83:12","statements":[{"AST":{"nativeSrc":"2353:40:12","nodeType":"YulBlock","src":"2353:40:12","statements":[{"nativeSrc":"2368:14:12","nodeType":"YulAssignment","src":"2368:14:12","value":{"name":"slot","nativeSrc":"2378:4:12","nodeType":"YulIdentifier","src":"2378:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2368:6:12","nodeType":"YulIdentifier","src":"2368:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1527,"isOffset":false,"isSlot":true,"src":"2368:6:12","suffix":"slot","valueSize":1},{"declaration":1523,"isOffset":false,"isSlot":false,"src":"2378:4:12","valueSize":1}],"flags":["memory-safe"],"id":1529,"nodeType":"InlineAssembly","src":"2328:65:12"}]},"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"2139:88:12","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2242:14:12","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"slot","nameLocation":"2265:4:12","nodeType":"VariableDeclaration","scope":1531,"src":"2257:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2257:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2256:14:12"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"r","nameLocation":"2314:1:12","nodeType":"VariableDeclaration","scope":1531,"src":"2294:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1494_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1526,"nodeType":"UserDefinedTypeName","pathNode":{"id":1525,"name":"BooleanSlot","nameLocations":["2294:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1494,"src":"2294:11:12"},"referencedDeclaration":1494,"src":"2294:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1494_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2293:23:12"},"scope":1609,"src":"2233:167:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"2586:83:12","statements":[{"AST":{"nativeSrc":"2622:40:12","nodeType":"YulBlock","src":"2622:40:12","statements":[{"nativeSrc":"2637:14:12","nodeType":"YulAssignment","src":"2637:14:12","value":{"name":"slot","nativeSrc":"2647:4:12","nodeType":"YulIdentifier","src":"2647:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2637:6:12","nodeType":"YulIdentifier","src":"2637:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1538,"isOffset":false,"isSlot":true,"src":"2637:6:12","suffix":"slot","valueSize":1},{"declaration":1534,"isOffset":false,"isSlot":false,"src":"2647:4:12","valueSize":1}],"flags":["memory-safe"],"id":1540,"nodeType":"InlineAssembly","src":"2597:65:12"}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"2408:88:12","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2511:14:12","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"slot","nameLocation":"2534:4:12","nodeType":"VariableDeclaration","scope":1542,"src":"2526:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2526:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2525:14:12"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"r","nameLocation":"2583:1:12","nodeType":"VariableDeclaration","scope":1542,"src":"2563:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1497_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1537,"nodeType":"UserDefinedTypeName","pathNode":{"id":1536,"name":"Bytes32Slot","nameLocations":["2563:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"2563:11:12"},"referencedDeclaration":1497,"src":"2563:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1497_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2562:23:12"},"scope":1609,"src":"2502:167:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1552,"nodeType":"Block","src":"2855:83:12","statements":[{"AST":{"nativeSrc":"2891:40:12","nodeType":"YulBlock","src":"2891:40:12","statements":[{"nativeSrc":"2906:14:12","nodeType":"YulAssignment","src":"2906:14:12","value":{"name":"slot","nativeSrc":"2916:4:12","nodeType":"YulIdentifier","src":"2916:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2906:6:12","nodeType":"YulIdentifier","src":"2906:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1549,"isOffset":false,"isSlot":true,"src":"2906:6:12","suffix":"slot","valueSize":1},{"declaration":1545,"isOffset":false,"isSlot":false,"src":"2916:4:12","valueSize":1}],"flags":["memory-safe"],"id":1551,"nodeType":"InlineAssembly","src":"2866:65:12"}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"2677:88:12","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1553,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2780:14:12","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"slot","nameLocation":"2803:4:12","nodeType":"VariableDeclaration","scope":1553,"src":"2795:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:14:12"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"r","nameLocation":"2852:1:12","nodeType":"VariableDeclaration","scope":1553,"src":"2832:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1500_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1548,"nodeType":"UserDefinedTypeName","pathNode":{"id":1547,"name":"Uint256Slot","nameLocations":["2832:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1500,"src":"2832:11:12"},"referencedDeclaration":1500,"src":"2832:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1500_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2831:23:12"},"scope":1609,"src":"2771:167:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1563,"nodeType":"Block","src":"3121:83:12","statements":[{"AST":{"nativeSrc":"3157:40:12","nodeType":"YulBlock","src":"3157:40:12","statements":[{"nativeSrc":"3172:14:12","nodeType":"YulAssignment","src":"3172:14:12","value":{"name":"slot","nativeSrc":"3182:4:12","nodeType":"YulIdentifier","src":"3182:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3172:6:12","nodeType":"YulIdentifier","src":"3172:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1560,"isOffset":false,"isSlot":true,"src":"3172:6:12","suffix":"slot","valueSize":1},{"declaration":1556,"isOffset":false,"isSlot":false,"src":"3182:4:12","valueSize":1}],"flags":["memory-safe"],"id":1562,"nodeType":"InlineAssembly","src":"3132:65:12"}]},"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"2946:87:12","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1564,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"3048:13:12","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"slot","nameLocation":"3070:4:12","nodeType":"VariableDeclaration","scope":1564,"src":"3062:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3062:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3061:14:12"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"r","nameLocation":"3118:1:12","nodeType":"VariableDeclaration","scope":1564,"src":"3099:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1503_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1559,"nodeType":"UserDefinedTypeName","pathNode":{"id":1558,"name":"Int256Slot","nameLocations":["3099:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1503,"src":"3099:10:12"},"referencedDeclaration":1503,"src":"3099:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1503_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"3098:22:12"},"scope":1609,"src":"3039:165:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"3387:83:12","statements":[{"AST":{"nativeSrc":"3423:40:12","nodeType":"YulBlock","src":"3423:40:12","statements":[{"nativeSrc":"3438:14:12","nodeType":"YulAssignment","src":"3438:14:12","value":{"name":"slot","nativeSrc":"3448:4:12","nodeType":"YulIdentifier","src":"3448:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3438:6:12","nodeType":"YulIdentifier","src":"3438:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1571,"isOffset":false,"isSlot":true,"src":"3438:6:12","suffix":"slot","valueSize":1},{"declaration":1567,"isOffset":false,"isSlot":false,"src":"3448:4:12","valueSize":1}],"flags":["memory-safe"],"id":1573,"nodeType":"InlineAssembly","src":"3398:65:12"}]},"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"3212:87:12","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3314:13:12","nodeType":"FunctionDefinition","parameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"slot","nameLocation":"3336:4:12","nodeType":"VariableDeclaration","scope":1575,"src":"3328:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3328:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3327:14:12"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"r","nameLocation":"3384:1:12","nodeType":"VariableDeclaration","scope":1575,"src":"3365:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1570,"nodeType":"UserDefinedTypeName","pathNode":{"id":1569,"name":"StringSlot","nameLocations":["3365:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1506,"src":"3365:10:12"},"referencedDeclaration":1506,"src":"3365:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3364:22:12"},"scope":1609,"src":"3305:165:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1585,"nodeType":"Block","src":"3677:89:12","statements":[{"AST":{"nativeSrc":"3713:46:12","nodeType":"YulBlock","src":"3713:46:12","statements":[{"nativeSrc":"3728:20:12","nodeType":"YulAssignment","src":"3728:20:12","value":{"name":"store.slot","nativeSrc":"3738:10:12","nodeType":"YulIdentifier","src":"3738:10:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3728:6:12","nodeType":"YulIdentifier","src":"3728:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1582,"isOffset":false,"isSlot":true,"src":"3728:6:12","suffix":"slot","valueSize":1},{"declaration":1578,"isOffset":false,"isSlot":true,"src":"3738:10:12","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1584,"nodeType":"InlineAssembly","src":"3688:71:12"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"3478:103:12","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3596:13:12","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"store","nameLocation":"3625:5:12","nodeType":"VariableDeclaration","scope":1586,"src":"3610:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1577,"name":"string","nodeType":"ElementaryTypeName","src":"3610:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3609:22:12"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"r","nameLocation":"3674:1:12","nodeType":"VariableDeclaration","scope":1586,"src":"3655:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1581,"nodeType":"UserDefinedTypeName","pathNode":{"id":1580,"name":"StringSlot","nameLocations":["3655:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1506,"src":"3655:10:12"},"referencedDeclaration":1506,"src":"3655:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3654:22:12"},"scope":1609,"src":"3587:179:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"3946:83:12","statements":[{"AST":{"nativeSrc":"3982:40:12","nodeType":"YulBlock","src":"3982:40:12","statements":[{"nativeSrc":"3997:14:12","nodeType":"YulAssignment","src":"3997:14:12","value":{"name":"slot","nativeSrc":"4007:4:12","nodeType":"YulIdentifier","src":"4007:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3997:6:12","nodeType":"YulIdentifier","src":"3997:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1593,"isOffset":false,"isSlot":true,"src":"3997:6:12","suffix":"slot","valueSize":1},{"declaration":1589,"isOffset":false,"isSlot":false,"src":"4007:4:12","valueSize":1}],"flags":["memory-safe"],"id":1595,"nodeType":"InlineAssembly","src":"3957:65:12"}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"3774:86:12","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3875:12:12","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"slot","nameLocation":"3896:4:12","nodeType":"VariableDeclaration","scope":1597,"src":"3888:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3888:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3887:14:12"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"r","nameLocation":"3943:1:12","nodeType":"VariableDeclaration","scope":1597,"src":"3925:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1509_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1592,"nodeType":"UserDefinedTypeName","pathNode":{"id":1591,"name":"BytesSlot","nameLocations":["3925:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"3925:9:12"},"referencedDeclaration":1509,"src":"3925:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1509_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3924:21:12"},"scope":1609,"src":"3866:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1607,"nodeType":"Block","src":"4231:89:12","statements":[{"AST":{"nativeSrc":"4267:46:12","nodeType":"YulBlock","src":"4267:46:12","statements":[{"nativeSrc":"4282:20:12","nodeType":"YulAssignment","src":"4282:20:12","value":{"name":"store.slot","nativeSrc":"4292:10:12","nodeType":"YulIdentifier","src":"4292:10:12"},"variableNames":[{"name":"r.slot","nativeSrc":"4282:6:12","nodeType":"YulIdentifier","src":"4282:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1604,"isOffset":false,"isSlot":true,"src":"4282:6:12","suffix":"slot","valueSize":1},{"declaration":1600,"isOffset":false,"isSlot":true,"src":"4292:10:12","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1606,"nodeType":"InlineAssembly","src":"4242:71:12"}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"4037:101:12","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4153:12:12","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"store","nameLocation":"4180:5:12","nodeType":"VariableDeclaration","scope":1608,"src":"4166:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1599,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4165:21:12"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"r","nameLocation":"4228:1:12","nodeType":"VariableDeclaration","scope":1608,"src":"4210:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1509_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1603,"nodeType":"UserDefinedTypeName","pathNode":{"id":1602,"name":"BytesSlot","nameLocations":["4210:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"4210:9:12"},"referencedDeclaration":1509,"src":"4210:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1509_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4209:21:12"},"scope":1609,"src":"4144:176:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1610,"src":"1440:2883:12","usedErrors":[],"usedEvents":[]}],"src":"197:4128:12"},"id":12},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5064],"SafeCast":[6829],"SignedMath":[6973],"Strings":[2809]},"id":2810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1611,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1613,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2810,"sourceUnit":5065,"src":"132:37:13","symbolAliases":[{"foreign":{"id":1612,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"140:4:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2810,"sourceUnit":6830,"src":"171:45:13","symbolAliases":[{"foreign":{"id":1614,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"179:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2810,"sourceUnit":6974,"src":"218:49:13","symbolAliases":[{"foreign":{"id":1616,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"226:10:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"271:36:13","text":" @dev String operations."},"fullyImplemented":true,"id":2809,"linearizedBaseContracts":[2809],"name":"Strings","nameLocation":"317:7:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1620,"libraryName":{"id":1619,"name":"SafeCast","nameLocations":["338:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":6829,"src":"338:8:13"},"nodeType":"UsingForDirective","src":"332:21:13"},{"constant":true,"id":1623,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"386:10:13","nodeType":"VariableDeclaration","scope":2809,"src":"361:56:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1621,"name":"bytes16","nodeType":"ElementaryTypeName","src":"361:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"399:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1626,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"447:14:13","nodeType":"VariableDeclaration","scope":2809,"src":"424:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1624,"name":"uint8","nodeType":"ElementaryTypeName","src":"424:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"464:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"475:83:13","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1633,"name":"StringsInsufficientHexLength","nameLocation":"570:28:13","nodeType":"ErrorDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"value","nameLocation":"607:5:13","nodeType":"VariableDeclaration","scope":1633,"src":"599:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"length","nameLocation":"622:6:13","nodeType":"VariableDeclaration","scope":1633,"src":"614:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"598:31:13"},"src":"564:66:13"},{"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"638:110:13","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1636,"name":"StringsInvalidChar","nameLocation":"760:18:13","nodeType":"ErrorDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"778:2:13"},"src":"754:27:13"},{"documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"789:86:13","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1639,"name":"StringsInvalidAddressFormat","nameLocation":"887:27:13","nodeType":"ErrorDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[],"src":"914:2:13"},"src":"881:36:13"},{"body":{"id":1686,"nodeType":"Block","src":"1094:579:13","statements":[{"id":1685,"nodeType":"UncheckedBlock","src":"1105:561:13","statements":[{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"length","nameLocation":"1138:6:13","nodeType":"VariableDeclaration","scope":1685,"src":"1130:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1130:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1655,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1158:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1649,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"1147:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5064_$","typeString":"type(library Math)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1152:5:13","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4836,"src":"1147:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1147:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1167:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1147:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1130:38:13"},{"assignments":[1657],"declarations":[{"constant":false,"id":1657,"mutability":"mutable","name":"buffer","nameLocation":"1197:6:13","nodeType":"VariableDeclaration","scope":1685,"src":"1183:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1656,"name":"string","nodeType":"ElementaryTypeName","src":"1183:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1662,"initialValue":{"arguments":[{"id":1660,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"1217:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1206:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1658,"name":"string","nodeType":"ElementaryTypeName","src":"1210:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1206:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1183:41:13"},{"assignments":[1664],"declarations":[{"constant":false,"id":1664,"mutability":"mutable","name":"ptr","nameLocation":"1247:3:13","nodeType":"VariableDeclaration","scope":1685,"src":"1239:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1239:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1665,"nodeType":"VariableDeclarationStatement","src":"1239:11:13"},{"AST":{"nativeSrc":"1290:69:13","nodeType":"YulBlock","src":"1290:69:13","statements":[{"nativeSrc":"1309:35:13","nodeType":"YulAssignment","src":"1309:35:13","value":{"arguments":[{"name":"buffer","nativeSrc":"1320:6:13","nodeType":"YulIdentifier","src":"1320:6:13"},{"arguments":[{"kind":"number","nativeSrc":"1332:2:13","nodeType":"YulLiteral","src":"1332:2:13","type":"","value":"32"},{"name":"length","nativeSrc":"1336:6:13","nodeType":"YulIdentifier","src":"1336:6:13"}],"functionName":{"name":"add","nativeSrc":"1328:3:13","nodeType":"YulIdentifier","src":"1328:3:13"},"nativeSrc":"1328:15:13","nodeType":"YulFunctionCall","src":"1328:15:13"}],"functionName":{"name":"add","nativeSrc":"1316:3:13","nodeType":"YulIdentifier","src":"1316:3:13"},"nativeSrc":"1316:28:13","nodeType":"YulFunctionCall","src":"1316:28:13"},"variableNames":[{"name":"ptr","nativeSrc":"1309:3:13","nodeType":"YulIdentifier","src":"1309:3:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1657,"isOffset":false,"isSlot":false,"src":"1320:6:13","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"1336:6:13","valueSize":1},{"declaration":1664,"isOffset":false,"isSlot":false,"src":"1309:3:13","valueSize":1}],"flags":["memory-safe"],"id":1666,"nodeType":"InlineAssembly","src":"1265:94:13"},{"body":{"id":1681,"nodeType":"Block","src":"1386:241:13","statements":[{"expression":{"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1405:5:13","subExpression":{"id":1668,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"1405:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1670,"nodeType":"ExpressionStatement","src":"1405:5:13"},{"AST":{"nativeSrc":"1454:88:13","nodeType":"YulBlock","src":"1454:88:13","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1485:3:13","nodeType":"YulIdentifier","src":"1485:3:13"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1499:5:13","nodeType":"YulIdentifier","src":"1499:5:13"},{"kind":"number","nativeSrc":"1506:2:13","nodeType":"YulLiteral","src":"1506:2:13","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1495:3:13","nodeType":"YulIdentifier","src":"1495:3:13"},"nativeSrc":"1495:14:13","nodeType":"YulFunctionCall","src":"1495:14:13"},{"name":"HEX_DIGITS","nativeSrc":"1511:10:13","nodeType":"YulIdentifier","src":"1511:10:13"}],"functionName":{"name":"byte","nativeSrc":"1490:4:13","nodeType":"YulIdentifier","src":"1490:4:13"},"nativeSrc":"1490:32:13","nodeType":"YulFunctionCall","src":"1490:32:13"}],"functionName":{"name":"mstore8","nativeSrc":"1477:7:13","nodeType":"YulIdentifier","src":"1477:7:13"},"nativeSrc":"1477:46:13","nodeType":"YulFunctionCall","src":"1477:46:13"},"nativeSrc":"1477:46:13","nodeType":"YulExpressionStatement","src":"1477:46:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1623,"isOffset":false,"isSlot":false,"src":"1511:10:13","valueSize":1},{"declaration":1664,"isOffset":false,"isSlot":false,"src":"1485:3:13","valueSize":1},{"declaration":1642,"isOffset":false,"isSlot":false,"src":"1499:5:13","valueSize":1}],"flags":["memory-safe"],"id":1671,"nodeType":"InlineAssembly","src":"1429:113:13"},{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1560:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1569:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1560:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"1560:11:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1594:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1603:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1594:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1680,"nodeType":"IfStatement","src":"1590:21:13","trueBody":{"id":1679,"nodeType":"Break","src":"1606:5:13"}}]},"condition":{"hexValue":"74727565","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1380:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1682,"nodeType":"WhileStatement","src":"1373:254:13"},{"expression":{"id":1683,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"1648:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1646,"id":1684,"nodeType":"Return","src":"1641:13:13"}]}]},"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"925:92:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1032:8:13","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"value","nameLocation":"1049:5:13","nodeType":"VariableDeclaration","scope":1687,"src":"1041:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1041:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1040:15:13"},"returnParameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"1079:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1644,"name":"string","nodeType":"ElementaryTypeName","src":"1079:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1078:15:13"},"scope":2809,"src":"1023:650:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"1854:94:13","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"1886:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1894:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1886:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1904:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1886:20:13","trueExpression":{"hexValue":"2d","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1898:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"1932:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1705,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"1917:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6973_$","typeString":"type(library SignedMath)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:3:13","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6972,"src":"1917:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1917:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1704,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"1908:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1908:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1872:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1695,"name":"string","nodeType":"ElementaryTypeName","src":"1872:6:13","typeDescriptions":{}}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1879:6:13","memberName":"concat","nodeType":"MemberAccess","src":"1872:13:13","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1694,"id":1711,"nodeType":"Return","src":"1865:75:13"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"1681:91:13","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1787:14:13","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"value","nameLocation":"1809:5:13","nodeType":"VariableDeclaration","scope":1713,"src":"1802:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1689,"name":"int256","nodeType":"ElementaryTypeName","src":"1802:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1801:14:13"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"1839:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1692,"name":"string","nodeType":"ElementaryTypeName","src":"1839:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1838:15:13"},"scope":2809,"src":"1778:170:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1732,"nodeType":"Block","src":"2132:104:13","statements":[{"id":1731,"nodeType":"UncheckedBlock","src":"2143:86:13","statements":[{"expression":{"arguments":[{"id":1722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2187:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2206:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1723,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2194:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5064_$","typeString":"type(library Math)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2199:6:13","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5007,"src":"2194:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2194:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2215:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2194:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1721,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1733,1816,1836],"referencedDeclaration":1816,"src":"2175:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1720,"id":1730,"nodeType":"Return","src":"2168:49:13"}]}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"1956:96:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1733,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2067:11:13","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"value","nameLocation":"2087:5:13","nodeType":"VariableDeclaration","scope":1733,"src":"2079:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2078:15:13"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1733,"src":"2117:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1718,"name":"string","nodeType":"ElementaryTypeName","src":"2117:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2116:15:13"},"scope":2809,"src":"2058:178:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1815,"nodeType":"Block","src":"2454:448:13","statements":[{"assignments":[1744],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"localValue","nameLocation":"2473:10:13","nodeType":"VariableDeclaration","scope":1815,"src":"2465:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"2465:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1746,"initialValue":{"id":1745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2486:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2465:26:13"},{"assignments":[1748],"declarations":[{"constant":false,"id":1748,"mutability":"mutable","name":"buffer","nameLocation":"2515:6:13","nodeType":"VariableDeclaration","scope":1815,"src":"2502:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1747,"name":"bytes","nodeType":"ElementaryTypeName","src":"2502:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1757,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2534:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1752,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2538:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2534:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2547:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2534:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2524:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1749,"name":"bytes","nodeType":"ElementaryTypeName","src":"2528:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2524:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2502:47:13"},{"expression":{"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1758,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2560:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1760,"indexExpression":{"hexValue":"30","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2567:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2560:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2572:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2560:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1763,"nodeType":"ExpressionStatement","src":"2560:15:13"},{"expression":{"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1764,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2586:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1766,"indexExpression":{"hexValue":"31","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2593:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2586:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2598:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2586:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1769,"nodeType":"ExpressionStatement","src":"2586:15:13"},{"body":{"id":1798,"nodeType":"Block","src":"2657:98:13","statements":[{"expression":{"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1784,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2672:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1786,"indexExpression":{"id":1785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2679:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2672:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1787,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"2684:10:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1791,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2695:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2708:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2695:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2684:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2672:40:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1793,"nodeType":"ExpressionStatement","src":"2672:40:13"},{"expression":{"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1794,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2727:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2742:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2727:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1797,"nodeType":"ExpressionStatement","src":"2727:16:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2645:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2649:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2645:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1799,"initializationExpression":{"assignments":[1771],"declarations":[{"constant":false,"id":1771,"mutability":"mutable","name":"i","nameLocation":"2625:1:13","nodeType":"VariableDeclaration","scope":1799,"src":"2617:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2617:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1777,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2629:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1773,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2633:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2629:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2629:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2617:26:13"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2652:3:13","subExpression":{"id":1781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2654:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ExpressionStatement","src":"2652:3:13"},"nodeType":"ForStatement","src":"2612:143:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2769:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2783:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2769:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1809,"nodeType":"IfStatement","src":"2765:98:13","trueBody":{"id":1808,"nodeType":"Block","src":"2786:77:13","statements":[{"errorCall":{"arguments":[{"id":1804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2837:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1805,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2844:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1803,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2808:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2808:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1807,"nodeType":"RevertStatement","src":"2801:50:13"}]}},{"expression":{"arguments":[{"id":1812,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2887:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2880:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1810,"name":"string","nodeType":"ElementaryTypeName","src":"2880:6:13","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2880:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1742,"id":1814,"nodeType":"Return","src":"2873:21:13"}]},"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"2244:114:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2373:11:13","nodeType":"FunctionDefinition","parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"value","nameLocation":"2393:5:13","nodeType":"VariableDeclaration","scope":1816,"src":"2385:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2385:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"length","nameLocation":"2408:6:13","nodeType":"VariableDeclaration","scope":1816,"src":"2400:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint256","nodeType":"ElementaryTypeName","src":"2400:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2384:31:13"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"2439:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1740,"name":"string","nodeType":"ElementaryTypeName","src":"2439:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2438:15:13"},"scope":2809,"src":"2364:538:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1835,"nodeType":"Block","src":"3140:77:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1829,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"3186:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3178:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1827,"name":"uint160","nodeType":"ElementaryTypeName","src":"3178:7:13","typeDescriptions":{}}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3178:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3170:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:13","typeDescriptions":{}}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3170:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1832,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"3194:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1824,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1733,1816,1836],"referencedDeclaration":1816,"src":"3158:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3158:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1823,"id":1834,"nodeType":"Return","src":"3151:58:13"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"2910:151:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1836,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3076:11:13","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"addr","nameLocation":"3096:4:13","nodeType":"VariableDeclaration","scope":1836,"src":"3088:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1818,"name":"address","nodeType":"ElementaryTypeName","src":"3088:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3087:14:13"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1836,"src":"3125:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1821,"name":"string","nodeType":"ElementaryTypeName","src":"3125:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3124:15:13"},"scope":2809,"src":"3067:150:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"3480:660:13","statements":[{"assignments":[1845],"declarations":[{"constant":false,"id":1845,"mutability":"mutable","name":"buffer","nameLocation":"3504:6:13","nodeType":"VariableDeclaration","scope":1900,"src":"3491:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1844,"name":"bytes","nodeType":"ElementaryTypeName","src":"3491:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1852,"initialValue":{"arguments":[{"arguments":[{"id":1849,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"3531:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1733,1816,1836],"referencedDeclaration":1836,"src":"3519:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3519:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3513:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"3513:5:13","typeDescriptions":{}}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3513:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3491:46:13"},{"assignments":[1854],"declarations":[{"constant":false,"id":1854,"mutability":"mutable","name":"hashValue","nameLocation":"3633:9:13","nodeType":"VariableDeclaration","scope":1900,"src":"3625:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"3625:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1855,"nodeType":"VariableDeclarationStatement","src":"3625:17:13"},{"AST":{"nativeSrc":"3678:80:13","nodeType":"YulBlock","src":"3678:80:13","statements":[{"nativeSrc":"3693:54:13","nodeType":"YulAssignment","src":"3693:54:13","value":{"arguments":[{"kind":"number","nativeSrc":"3710:2:13","nodeType":"YulLiteral","src":"3710:2:13","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3728:6:13","nodeType":"YulIdentifier","src":"3728:6:13"},{"kind":"number","nativeSrc":"3736:4:13","nodeType":"YulLiteral","src":"3736:4:13","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3724:3:13","nodeType":"YulIdentifier","src":"3724:3:13"},"nativeSrc":"3724:17:13","nodeType":"YulFunctionCall","src":"3724:17:13"},{"kind":"number","nativeSrc":"3743:2:13","nodeType":"YulLiteral","src":"3743:2:13","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3714:9:13","nodeType":"YulIdentifier","src":"3714:9:13"},"nativeSrc":"3714:32:13","nodeType":"YulFunctionCall","src":"3714:32:13"}],"functionName":{"name":"shr","nativeSrc":"3706:3:13","nodeType":"YulIdentifier","src":"3706:3:13"},"nativeSrc":"3706:41:13","nodeType":"YulFunctionCall","src":"3706:41:13"},"variableNames":[{"name":"hashValue","nativeSrc":"3693:9:13","nodeType":"YulIdentifier","src":"3693:9:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1845,"isOffset":false,"isSlot":false,"src":"3728:6:13","valueSize":1},{"declaration":1854,"isOffset":false,"isSlot":false,"src":"3693:9:13","valueSize":1}],"flags":["memory-safe"],"id":1856,"nodeType":"InlineAssembly","src":"3653:105:13"},{"body":{"id":1893,"nodeType":"Block","src":"3803:298:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"3911:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3923:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3911:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3929:1:13","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3911:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1874,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"3940:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1876,"indexExpression":{"id":1875,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3947:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3940:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3934:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1872,"name":"uint8","nodeType":"ElementaryTypeName","src":"3934:5:13","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3934:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3953:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3934:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3911:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1888,"nodeType":"IfStatement","src":"3907:153:13","trueBody":{"id":1887,"nodeType":"Block","src":"3957:103:13","statements":[{"expression":{"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1881,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"4027:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1883,"indexExpression":{"id":1882,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4034:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4027:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4040:4:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4027:17:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1886,"nodeType":"ExpressionStatement","src":"4027:17:13"}]}},{"expression":{"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1889,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"4074:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4088:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4074:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1892,"nodeType":"ExpressionStatement","src":"4074:15:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3791:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3795:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3791:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1894,"initializationExpression":{"assignments":[1858],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"i","nameLocation":"3783:1:13","nodeType":"VariableDeclaration","scope":1894,"src":"3775:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"3775:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1860,"initialValue":{"hexValue":"3431","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3787:2:13","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3775:14:13"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3798:3:13","subExpression":{"id":1864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3800:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1866,"nodeType":"ExpressionStatement","src":"3798:3:13"},"nodeType":"ForStatement","src":"3770:331:13"},{"expression":{"arguments":[{"id":1897,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"4125:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1895,"name":"string","nodeType":"ElementaryTypeName","src":"4118:6:13","typeDescriptions":{}}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1843,"id":1899,"nodeType":"Return","src":"4111:21:13"}]},"documentation":{"id":1837,"nodeType":"StructuredDocumentation","src":"3225:168:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3408:19:13","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"addr","nameLocation":"3436:4:13","nodeType":"VariableDeclaration","scope":1901,"src":"3428:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"3428:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:14:13"},"returnParameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3465:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1841,"name":"string","nodeType":"ElementaryTypeName","src":"3465:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3464:15:13"},"scope":2809,"src":"3399:741:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1937,"nodeType":"Block","src":"4300:106:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4324:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4318:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1911,"name":"bytes","nodeType":"ElementaryTypeName","src":"4318:5:13","typeDescriptions":{}}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4327:6:13","memberName":"length","nodeType":"MemberAccess","src":"4318:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1918,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4343:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4337:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1916,"name":"bytes","nodeType":"ElementaryTypeName","src":"4337:5:13","typeDescriptions":{}}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4337:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4346:6:13","memberName":"length","nodeType":"MemberAccess","src":"4337:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4318:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4372:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1923,"name":"bytes","nodeType":"ElementaryTypeName","src":"4366:5:13","typeDescriptions":{}}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1922,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4356:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4356:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1931,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4395:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4389:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1929,"name":"bytes","nodeType":"ElementaryTypeName","src":"4389:5:13","typeDescriptions":{}}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4389:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1928,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4379:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4379:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4356:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4318:80:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1910,"id":1936,"nodeType":"Return","src":"4311:87:13"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"4148:68:13","text":" @dev Returns true if the two strings are equal."},"id":1938,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4231:5:13","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"a","nameLocation":"4251:1:13","nodeType":"VariableDeclaration","scope":1938,"src":"4237:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1903,"name":"string","nodeType":"ElementaryTypeName","src":"4237:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"b","nameLocation":"4268:1:13","nodeType":"VariableDeclaration","scope":1938,"src":"4254:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1905,"name":"string","nodeType":"ElementaryTypeName","src":"4254:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4236:34:13"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1938,"src":"4294:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1908,"name":"bool","nodeType":"ElementaryTypeName","src":"4294:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4293:6:13"},"scope":2809,"src":"4222:184:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1956,"nodeType":"Block","src":"4712:66:13","statements":[{"expression":{"arguments":[{"id":1947,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"4740:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4747:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1951,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"4756:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4750:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1949,"name":"bytes","nodeType":"ElementaryTypeName","src":"4750:5:13","typeDescriptions":{}}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4750:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4763:6:13","memberName":"length","nodeType":"MemberAccess","src":"4750:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1946,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1957,1988],"referencedDeclaration":1988,"src":"4730:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1945,"id":1955,"nodeType":"Return","src":"4723:47:13"}]},"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"4414:220:13","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4649:9:13","nodeType":"FunctionDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"input","nameLocation":"4673:5:13","nodeType":"VariableDeclaration","scope":1957,"src":"4659:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1940,"name":"string","nodeType":"ElementaryTypeName","src":"4659:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4658:21:13"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1957,"src":"4703:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"4703:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4702:9:13"},"scope":2809,"src":"4640:138:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1987,"nodeType":"Block","src":"5186:157:13","statements":[{"assignments":[1970,1972],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"success","nameLocation":"5203:7:13","nodeType":"VariableDeclaration","scope":1987,"src":"5198:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"5198:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"value","nameLocation":"5220:5:13","nodeType":"VariableDeclaration","scope":1987,"src":"5212:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"5212:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1978,"initialValue":{"arguments":[{"id":1974,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"5242:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1975,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"5249:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1976,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"5256:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1973,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2009,2046],"referencedDeclaration":2046,"src":"5229:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5197:63:13"},{"condition":{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5275:8:13","subExpression":{"id":1979,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"5276:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1984,"nodeType":"IfStatement","src":"5271:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1981,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5292:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5292:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1983,"nodeType":"RevertStatement","src":"5285:27:13"}},{"expression":{"id":1985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5330:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1968,"id":1986,"nodeType":"Return","src":"5323:12:13"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"4786:294:13","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1988,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5095:9:13","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"input","nameLocation":"5119:5:13","nodeType":"VariableDeclaration","scope":1988,"src":"5105:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1959,"name":"string","nodeType":"ElementaryTypeName","src":"5105:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"begin","nameLocation":"5134:5:13","nodeType":"VariableDeclaration","scope":1988,"src":"5126:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"5126:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"end","nameLocation":"5149:3:13","nodeType":"VariableDeclaration","scope":1988,"src":"5141:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"5141:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5104:49:13"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1988,"src":"5177:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"5177:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5176:9:13"},"scope":2809,"src":"5086:257:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2008,"nodeType":"Block","src":"5671:85:13","statements":[{"expression":{"arguments":[{"id":1999,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"5718:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5725:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2003,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"5734:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2001,"name":"bytes","nodeType":"ElementaryTypeName","src":"5728:5:13","typeDescriptions":{}}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5741:6:13","memberName":"length","nodeType":"MemberAccess","src":"5728:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1998,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5689:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5689:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1997,"id":2007,"nodeType":"Return","src":"5682:66:13"}]},"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"5351:219:13","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2009,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5585:12:13","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"input","nameLocation":"5612:5:13","nodeType":"VariableDeclaration","scope":2009,"src":"5598:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1990,"name":"string","nodeType":"ElementaryTypeName","src":"5598:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5597:21:13"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"success","nameLocation":"5647:7:13","nodeType":"VariableDeclaration","scope":2009,"src":"5642:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1993,"name":"bool","nodeType":"ElementaryTypeName","src":"5642:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1996,"mutability":"mutable","name":"value","nameLocation":"5664:5:13","nodeType":"VariableDeclaration","scope":2009,"src":"5656:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"5656:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5641:29:13"},"scope":2809,"src":"5576:180:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2045,"nodeType":"Block","src":"6170:147:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2023,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"6185:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2026,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"6197:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2024,"name":"bytes","nodeType":"ElementaryTypeName","src":"6191:5:13","typeDescriptions":{}}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6191:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6204:6:13","memberName":"length","nodeType":"MemberAccess","src":"6191:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6185:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"6214:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2031,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"6222:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2038,"nodeType":"IfStatement","src":"6181:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6235:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6242:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6234:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2022,"id":2037,"nodeType":"Return","src":"6227:17:13"}},{"expression":{"arguments":[{"id":2040,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"6291:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2041,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"6298:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2042,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"6305:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2039,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"6262:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6262:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2022,"id":2044,"nodeType":"Return","src":"6255:54:13"}]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"5764:243:13","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2046,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6022:12:13","nodeType":"FunctionDefinition","parameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"input","nameLocation":"6059:5:13","nodeType":"VariableDeclaration","scope":2046,"src":"6045:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2011,"name":"string","nodeType":"ElementaryTypeName","src":"6045:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"begin","nameLocation":"6083:5:13","nodeType":"VariableDeclaration","scope":2046,"src":"6075:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"6075:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"end","nameLocation":"6107:3:13","nodeType":"VariableDeclaration","scope":2046,"src":"6099:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"6099:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6034:83:13"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"success","nameLocation":"6146:7:13","nodeType":"VariableDeclaration","scope":2046,"src":"6141:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2018,"name":"bool","nodeType":"ElementaryTypeName","src":"6141:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"value","nameLocation":"6163:5:13","nodeType":"VariableDeclaration","scope":2046,"src":"6155:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"6155:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6140:29:13"},"scope":2809,"src":"6013:304:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2115,"nodeType":"Block","src":"6707:358:13","statements":[{"assignments":[2061],"declarations":[{"constant":false,"id":2061,"mutability":"mutable","name":"buffer","nameLocation":"6731:6:13","nodeType":"VariableDeclaration","scope":2115,"src":"6718:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2060,"name":"bytes","nodeType":"ElementaryTypeName","src":"6718:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2066,"initialValue":{"arguments":[{"id":2064,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"6746:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6740:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2062,"name":"bytes","nodeType":"ElementaryTypeName","src":"6740:5:13","typeDescriptions":{}}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6740:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6718:34:13"},{"assignments":[2068],"declarations":[{"constant":false,"id":2068,"mutability":"mutable","name":"result","nameLocation":"6773:6:13","nodeType":"VariableDeclaration","scope":2115,"src":"6765:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"6765:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2070,"initialValue":{"hexValue":"30","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6782:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6765:18:13"},{"body":{"id":2109,"nodeType":"Block","src":"6832:194:13","statements":[{"assignments":[2082],"declarations":[{"constant":false,"id":2082,"mutability":"mutable","name":"chr","nameLocation":"6853:3:13","nodeType":"VariableDeclaration","scope":2109,"src":"6847:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2081,"name":"uint8","nodeType":"ElementaryTypeName","src":"6847:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2092,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2087,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"6902:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2088,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6910:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2086,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"6879:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6879:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6872:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2084,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6872:6:13","typeDescriptions":{}}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6872:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2083,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"6859:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6859:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6847:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2093,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"6933:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6939:1:13","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6933:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2100,"nodeType":"IfStatement","src":"6929:30:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6950:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6957:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6949:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2059,"id":2099,"nodeType":"Return","src":"6942:17:13"}},{"expression":{"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6974:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6984:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6974:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2104,"nodeType":"ExpressionStatement","src":"6974:12:13"},{"expression":{"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"7001:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2106,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7011:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7001:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2108,"nodeType":"ExpressionStatement","src":"7001:13:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6818:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2076,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"6822:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6818:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2110,"initializationExpression":{"assignments":[2072],"declarations":[{"constant":false,"id":2072,"mutability":"mutable","name":"i","nameLocation":"6807:1:13","nodeType":"VariableDeclaration","scope":2110,"src":"6799:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"6799:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2074,"initialValue":{"id":2073,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"6811:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6799:17:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6827:3:13","subExpression":{"id":2078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6829:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2080,"nodeType":"ExpressionStatement","src":"6827:3:13"},"nodeType":"ForStatement","src":"6794:232:13"},{"expression":{"components":[{"hexValue":"74727565","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7044:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"7050:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7043:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2059,"id":2114,"nodeType":"Return","src":"7036:21:13"}]},"documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"6325:204:13","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2116,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6544:28:13","nodeType":"FunctionDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"input","nameLocation":"6597:5:13","nodeType":"VariableDeclaration","scope":2116,"src":"6583:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2048,"name":"string","nodeType":"ElementaryTypeName","src":"6583:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2051,"mutability":"mutable","name":"begin","nameLocation":"6621:5:13","nodeType":"VariableDeclaration","scope":2116,"src":"6613:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"6613:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"end","nameLocation":"6645:3:13","nodeType":"VariableDeclaration","scope":2116,"src":"6637:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"6637:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6572:83:13"},"returnParameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"success","nameLocation":"6683:7:13","nodeType":"VariableDeclaration","scope":2116,"src":"6678:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2055,"name":"bool","nodeType":"ElementaryTypeName","src":"6678:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"value","nameLocation":"6700:5:13","nodeType":"VariableDeclaration","scope":2116,"src":"6692:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"6692:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6677:29:13"},"scope":2809,"src":"6535:530:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2134,"nodeType":"Block","src":"7371:65:13","statements":[{"expression":{"arguments":[{"id":2125,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"7398:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7405:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2129,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"7414:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7408:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2127,"name":"bytes","nodeType":"ElementaryTypeName","src":"7408:5:13","typeDescriptions":{}}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7408:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7421:6:13","memberName":"length","nodeType":"MemberAccess","src":"7408:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2124,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2135,2166],"referencedDeclaration":2166,"src":"7389:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7389:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2123,"id":2133,"nodeType":"Return","src":"7382:46:13"}]},"documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"7073:222:13","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7310:8:13","nodeType":"FunctionDefinition","parameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"input","nameLocation":"7333:5:13","nodeType":"VariableDeclaration","scope":2135,"src":"7319:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2118,"name":"string","nodeType":"ElementaryTypeName","src":"7319:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7318:21:13"},"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"7363:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2121,"name":"int256","nodeType":"ElementaryTypeName","src":"7363:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7362:8:13"},"scope":2809,"src":"7301:135:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2165,"nodeType":"Block","src":"7851:155:13","statements":[{"assignments":[2148,2150],"declarations":[{"constant":false,"id":2148,"mutability":"mutable","name":"success","nameLocation":"7868:7:13","nodeType":"VariableDeclaration","scope":2165,"src":"7863:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2147,"name":"bool","nodeType":"ElementaryTypeName","src":"7863:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2150,"mutability":"mutable","name":"value","nameLocation":"7884:5:13","nodeType":"VariableDeclaration","scope":2165,"src":"7877:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2149,"name":"int256","nodeType":"ElementaryTypeName","src":"7877:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2156,"initialValue":{"arguments":[{"id":2152,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"7905:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2153,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"7912:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2154,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"7919:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2151,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2187,2229],"referencedDeclaration":2229,"src":"7893:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7893:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7862:61:13"},{"condition":{"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7938:8:13","subExpression":{"id":2157,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"7939:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2162,"nodeType":"IfStatement","src":"7934:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2159,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"7955:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7955:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2161,"nodeType":"RevertStatement","src":"7948:27:13"}},{"expression":{"id":2163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"7993:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2146,"id":2164,"nodeType":"Return","src":"7986:12:13"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"7444:303:13","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2166,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7762:8:13","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"input","nameLocation":"7785:5:13","nodeType":"VariableDeclaration","scope":2166,"src":"7771:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2137,"name":"string","nodeType":"ElementaryTypeName","src":"7771:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"begin","nameLocation":"7800:5:13","nodeType":"VariableDeclaration","scope":2166,"src":"7792:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"7792:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2142,"mutability":"mutable","name":"end","nameLocation":"7815:3:13","nodeType":"VariableDeclaration","scope":2166,"src":"7807:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"7807:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7770:49:13"},"returnParameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2166,"src":"7843:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2144,"name":"int256","nodeType":"ElementaryTypeName","src":"7843:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7842:8:13"},"scope":2809,"src":"7753:253:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2186,"nodeType":"Block","src":"8405:84:13","statements":[{"expression":{"arguments":[{"id":2177,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"8451:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8458:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2181,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"8467:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8461:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2179,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:13","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8461:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8474:6:13","memberName":"length","nodeType":"MemberAccess","src":"8461:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2176,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"8423:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8423:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2175,"id":2185,"nodeType":"Return","src":"8416:65:13"}]},"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"8014:292:13","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2187,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8321:11:13","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"input","nameLocation":"8347:5:13","nodeType":"VariableDeclaration","scope":2187,"src":"8333:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2168,"name":"string","nodeType":"ElementaryTypeName","src":"8333:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8332:21:13"},"returnParameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"success","nameLocation":"8382:7:13","nodeType":"VariableDeclaration","scope":2187,"src":"8377:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2171,"name":"bool","nodeType":"ElementaryTypeName","src":"8377:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2174,"mutability":"mutable","name":"value","nameLocation":"8398:5:13","nodeType":"VariableDeclaration","scope":2187,"src":"8391:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2173,"name":"int256","nodeType":"ElementaryTypeName","src":"8391:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8376:28:13"},"scope":2809,"src":"8312:177:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2192,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8522:14:13","nodeType":"VariableDeclaration","scope":2809,"src":"8497:50:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"8497:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8539:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8544:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8539:8:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2228,"nodeType":"Block","src":"9025:146:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2206,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"9040:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2209,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"9052:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9046:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2207,"name":"bytes","nodeType":"ElementaryTypeName","src":"9046:5:13","typeDescriptions":{}}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9046:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9059:6:13","memberName":"length","nodeType":"MemberAccess","src":"9046:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9040:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2213,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"9069:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2214,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"9077:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9069:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9040:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2221,"nodeType":"IfStatement","src":"9036:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9090:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9097:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9089:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2205,"id":2220,"nodeType":"Return","src":"9082:17:13"}},{"expression":{"arguments":[{"id":2223,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"9145:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2224,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"9152:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2225,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"9159:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2222,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"9117:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9117:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2205,"id":2227,"nodeType":"Return","src":"9110:53:13"}]},"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"8556:308:13","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2229,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8879:11:13","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"input","nameLocation":"8915:5:13","nodeType":"VariableDeclaration","scope":2229,"src":"8901:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2194,"name":"string","nodeType":"ElementaryTypeName","src":"8901:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"begin","nameLocation":"8939:5:13","nodeType":"VariableDeclaration","scope":2229,"src":"8931:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"8931:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"end","nameLocation":"8963:3:13","nodeType":"VariableDeclaration","scope":2229,"src":"8955:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2198,"name":"uint256","nodeType":"ElementaryTypeName","src":"8955:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8890:83:13"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"success","nameLocation":"9002:7:13","nodeType":"VariableDeclaration","scope":2229,"src":"8997:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2201,"name":"bool","nodeType":"ElementaryTypeName","src":"8997:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"value","nameLocation":"9018:5:13","nodeType":"VariableDeclaration","scope":2229,"src":"9011:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2203,"name":"int256","nodeType":"ElementaryTypeName","src":"9011:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8996:28:13"},"scope":2809,"src":"8870:301:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2349,"nodeType":"Block","src":"9558:828:13","statements":[{"assignments":[2244],"declarations":[{"constant":false,"id":2244,"mutability":"mutable","name":"buffer","nameLocation":"9582:6:13","nodeType":"VariableDeclaration","scope":2349,"src":"9569:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2243,"name":"bytes","nodeType":"ElementaryTypeName","src":"9569:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2249,"initialValue":{"arguments":[{"id":2247,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"9597:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9591:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2245,"name":"bytes","nodeType":"ElementaryTypeName","src":"9591:5:13","typeDescriptions":{}}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9591:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9569:34:13"},{"assignments":[2251],"declarations":[{"constant":false,"id":2251,"mutability":"mutable","name":"sign","nameLocation":"9670:4:13","nodeType":"VariableDeclaration","scope":2349,"src":"9663:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2250,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9663:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2267,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9677:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2253,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"9686:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9677:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2262,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"9734:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2263,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9742:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2261,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"9711:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9711:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9704:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2259,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9704:6:13","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9704:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9677:72:13","trueExpression":{"arguments":[{"hexValue":"30","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9699:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9692:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2255,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9692:6:13","typeDescriptions":{}}},"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9692:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9663:86:13"},{"assignments":[2269],"declarations":[{"constant":false,"id":2269,"mutability":"mutable","name":"positiveSign","nameLocation":"9836:12:13","nodeType":"VariableDeclaration","scope":2349,"src":"9831:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2268,"name":"bool","nodeType":"ElementaryTypeName","src":"9831:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2276,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"9851:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9866:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9859:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2271,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9859:6:13","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9851:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9831:39:13"},{"assignments":[2278],"declarations":[{"constant":false,"id":2278,"mutability":"mutable","name":"negativeSign","nameLocation":"9886:12:13","nodeType":"VariableDeclaration","scope":2349,"src":"9881:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2277,"name":"bool","nodeType":"ElementaryTypeName","src":"9881:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2285,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2279,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"9901:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9916:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9909:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2280,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9909:6:13","typeDescriptions":{}}},"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9909:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9901:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9881:39:13"},{"assignments":[2287],"declarations":[{"constant":false,"id":2287,"mutability":"mutable","name":"offset","nameLocation":"9939:6:13","nodeType":"VariableDeclaration","scope":2349,"src":"9931:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"9931:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2294,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"9949:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2289,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"9965:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9949:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9948:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9979:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"9948:37:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9948:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9931:56:13"},{"assignments":[2296,2298],"declarations":[{"constant":false,"id":2296,"mutability":"mutable","name":"absSuccess","nameLocation":"10006:10:13","nodeType":"VariableDeclaration","scope":2349,"src":"10001:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2295,"name":"bool","nodeType":"ElementaryTypeName","src":"10001:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"absValue","nameLocation":"10026:8:13","nodeType":"VariableDeclaration","scope":2349,"src":"10018:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"10018:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2306,"initialValue":{"arguments":[{"id":2300,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"10051:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2301,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"10058:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2302,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"10066:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10058:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2304,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"10074:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2299,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2009,2046],"referencedDeclaration":2046,"src":"10038:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10038:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10000:78:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2307,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"10095:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2308,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10109:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2309,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"10120:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10109:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"10239:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2328,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"10253:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10239:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2330,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10269:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2331,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"10281:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10269:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10239:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10369:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10376:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10368:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2242,"id":2346,"nodeType":"Return","src":"10361:17:13"},"id":2347,"nodeType":"IfStatement","src":"10235:143:13","trueBody":{"id":2342,"nodeType":"Block","src":"10297:58:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10320:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10331:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2336,"name":"int256","nodeType":"ElementaryTypeName","src":"10331:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2335,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10326:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10326:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10339:3:13","memberName":"min","nodeType":"MemberAccess","src":"10326:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10319:24:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2242,"id":2341,"nodeType":"Return","src":"10312:31:13"}]}},"id":2348,"nodeType":"IfStatement","src":"10091:287:13","trueBody":{"id":2326,"nodeType":"Block","src":"10136:93:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10159:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2313,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"10165:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2321,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10207:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10200:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2319,"name":"int256","nodeType":"ElementaryTypeName","src":"10200:6:13","typeDescriptions":{}}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10200:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10165:51:13","trueExpression":{"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10180:17:13","subExpression":{"arguments":[{"id":2316,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10188:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10181:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2314,"name":"int256","nodeType":"ElementaryTypeName","src":"10181:6:13","typeDescriptions":{}}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10181:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10158:59:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2242,"id":2325,"nodeType":"Return","src":"10151:66:13"}]}}]},"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"9179:203:13","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2350,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9397:27:13","nodeType":"FunctionDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"input","nameLocation":"9449:5:13","nodeType":"VariableDeclaration","scope":2350,"src":"9435:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2231,"name":"string","nodeType":"ElementaryTypeName","src":"9435:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"begin","nameLocation":"9473:5:13","nodeType":"VariableDeclaration","scope":2350,"src":"9465:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"9465:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"end","nameLocation":"9497:3:13","nodeType":"VariableDeclaration","scope":2350,"src":"9489:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"9489:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9424:83:13"},"returnParameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"success","nameLocation":"9535:7:13","nodeType":"VariableDeclaration","scope":2350,"src":"9530:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2238,"name":"bool","nodeType":"ElementaryTypeName","src":"9530:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"value","nameLocation":"9551:5:13","nodeType":"VariableDeclaration","scope":2350,"src":"9544:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2240,"name":"int256","nodeType":"ElementaryTypeName","src":"9544:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9529:28:13"},"scope":2809,"src":"9388:998:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2368,"nodeType":"Block","src":"10740:69:13","statements":[{"expression":{"arguments":[{"id":2359,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"10771:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10778:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2363,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"10787:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10781:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2361,"name":"bytes","nodeType":"ElementaryTypeName","src":"10781:5:13","typeDescriptions":{}}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10781:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10794:6:13","memberName":"length","nodeType":"MemberAccess","src":"10781:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2358,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2369,2400],"referencedDeclaration":2400,"src":"10758:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2357,"id":2367,"nodeType":"Return","src":"10751:50:13"}]},"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"10394:265:13","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2369,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10674:12:13","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"input","nameLocation":"10701:5:13","nodeType":"VariableDeclaration","scope":2369,"src":"10687:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2352,"name":"string","nodeType":"ElementaryTypeName","src":"10687:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10686:21:13"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2369,"src":"10731:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"10731:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10730:9:13"},"scope":2809,"src":"10665:144:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2399,"nodeType":"Block","src":"11233:160:13","statements":[{"assignments":[2382,2384],"declarations":[{"constant":false,"id":2382,"mutability":"mutable","name":"success","nameLocation":"11250:7:13","nodeType":"VariableDeclaration","scope":2399,"src":"11245:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2381,"name":"bool","nodeType":"ElementaryTypeName","src":"11245:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"value","nameLocation":"11267:5:13","nodeType":"VariableDeclaration","scope":2399,"src":"11259:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"11259:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2390,"initialValue":{"arguments":[{"id":2386,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"11292:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2387,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"11299:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2388,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"11306:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2385,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2421,2458],"referencedDeclaration":2458,"src":"11276:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11276:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11244:66:13"},{"condition":{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11325:8:13","subExpression":{"id":2391,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"11326:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2396,"nodeType":"IfStatement","src":"11321:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2393,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"11342:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11342:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2395,"nodeType":"RevertStatement","src":"11335:27:13"}},{"expression":{"id":2397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"11380:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2380,"id":2398,"nodeType":"Return","src":"11373:12:13"}]},"documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"10817:307:13","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11139:12:13","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"input","nameLocation":"11166:5:13","nodeType":"VariableDeclaration","scope":2400,"src":"11152:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2371,"name":"string","nodeType":"ElementaryTypeName","src":"11152:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"begin","nameLocation":"11181:5:13","nodeType":"VariableDeclaration","scope":2400,"src":"11173:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"11173:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2376,"mutability":"mutable","name":"end","nameLocation":"11196:3:13","nodeType":"VariableDeclaration","scope":2400,"src":"11188:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"11188:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11151:49:13"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2400,"src":"11224:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11223:9:13"},"scope":2809,"src":"11130:263:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2420,"nodeType":"Block","src":"11727:88:13","statements":[{"expression":{"arguments":[{"id":2411,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"11777:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11784:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2415,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"11793:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11787:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2413,"name":"bytes","nodeType":"ElementaryTypeName","src":"11787:5:13","typeDescriptions":{}}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11787:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11800:6:13","memberName":"length","nodeType":"MemberAccess","src":"11787:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2410,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"11745:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2409,"id":2419,"nodeType":"Return","src":"11738:69:13"}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"11401:222:13","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2421,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11638:15:13","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"input","nameLocation":"11668:5:13","nodeType":"VariableDeclaration","scope":2421,"src":"11654:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2402,"name":"string","nodeType":"ElementaryTypeName","src":"11654:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11653:21:13"},"returnParameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"success","nameLocation":"11703:7:13","nodeType":"VariableDeclaration","scope":2421,"src":"11698:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2405,"name":"bool","nodeType":"ElementaryTypeName","src":"11698:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"value","nameLocation":"11720:5:13","nodeType":"VariableDeclaration","scope":2421,"src":"11712:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"11712:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:29:13"},"scope":2809,"src":"11629:186:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2457,"nodeType":"Block","src":"12235:150:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"12250:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2438,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"12262:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12256:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2436,"name":"bytes","nodeType":"ElementaryTypeName","src":"12256:5:13","typeDescriptions":{}}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12256:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12269:6:13","memberName":"length","nodeType":"MemberAccess","src":"12256:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12250:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2442,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"12279:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2443,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"12287:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12279:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12250:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2450,"nodeType":"IfStatement","src":"12246:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12300:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12307:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12299:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2434,"id":2449,"nodeType":"Return","src":"12292:17:13"}},{"expression":{"arguments":[{"id":2452,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"12359:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2453,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"12366:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2454,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"12373:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2451,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"12327:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12327:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2434,"id":2456,"nodeType":"Return","src":"12320:57:13"}]},"documentation":{"id":2422,"nodeType":"StructuredDocumentation","src":"11823:246:13","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12084:15:13","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"input","nameLocation":"12124:5:13","nodeType":"VariableDeclaration","scope":2458,"src":"12110:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2423,"name":"string","nodeType":"ElementaryTypeName","src":"12110:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"begin","nameLocation":"12148:5:13","nodeType":"VariableDeclaration","scope":2458,"src":"12140:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"12140:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"end","nameLocation":"12172:3:13","nodeType":"VariableDeclaration","scope":2458,"src":"12164:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"12164:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12099:83:13"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"success","nameLocation":"12211:7:13","nodeType":"VariableDeclaration","scope":2458,"src":"12206:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2430,"name":"bool","nodeType":"ElementaryTypeName","src":"12206:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"value","nameLocation":"12228:5:13","nodeType":"VariableDeclaration","scope":2458,"src":"12220:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"12220:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12205:29:13"},"scope":2809,"src":"12075:310:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2560,"nodeType":"Block","src":"12781:899:13","statements":[{"assignments":[2473],"declarations":[{"constant":false,"id":2473,"mutability":"mutable","name":"buffer","nameLocation":"12805:6:13","nodeType":"VariableDeclaration","scope":2560,"src":"12792:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2472,"name":"bytes","nodeType":"ElementaryTypeName","src":"12792:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2478,"initialValue":{"arguments":[{"id":2476,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"12820:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12814:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2474,"name":"bytes","nodeType":"ElementaryTypeName","src":"12814:5:13","typeDescriptions":{}}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12814:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12792:34:13"},{"assignments":[2480],"declarations":[{"constant":false,"id":2480,"mutability":"mutable","name":"hasPrefix","nameLocation":"12882:9:13","nodeType":"VariableDeclaration","scope":2560,"src":"12877:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2479,"name":"bool","nodeType":"ElementaryTypeName","src":"12877:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2500,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2481,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"12895:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2482,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"12901:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12909:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12901:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12895:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12894:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2490,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"12945:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2491,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"12953:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2489,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"12922:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12922:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12915:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2487,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12915:6:13","typeDescriptions":{}}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12915:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12971:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12964:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2494,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12964:6:13","typeDescriptions":{}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12964:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12915:61:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12894:82:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12877:99:13"},{"assignments":[2502],"declarations":[{"constant":false,"id":2502,"mutability":"mutable","name":"offset","nameLocation":"13066:6:13","nodeType":"VariableDeclaration","scope":2560,"src":"13058:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"13058:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2503,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"13075:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13085:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"13075:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13075:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13096:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13075:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13058:39:13"},{"assignments":[2510],"declarations":[{"constant":false,"id":2510,"mutability":"mutable","name":"result","nameLocation":"13118:6:13","nodeType":"VariableDeclaration","scope":2560,"src":"13110:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"13110:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2512,"initialValue":{"hexValue":"30","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13127:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13110:18:13"},{"body":{"id":2554,"nodeType":"Block","src":"13186:455:13","statements":[{"assignments":[2526],"declarations":[{"constant":false,"id":2526,"mutability":"mutable","name":"chr","nameLocation":"13207:3:13","nodeType":"VariableDeclaration","scope":2554,"src":"13201:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2525,"name":"uint8","nodeType":"ElementaryTypeName","src":"13201:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2536,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2531,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"13256:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2532,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"13264:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2530,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"13233:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13233:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13226:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2528,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13226:6:13","typeDescriptions":{}}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13226:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2527,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"13213:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13213:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13201:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2537,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"13287:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13293:2:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13287:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2544,"nodeType":"IfStatement","src":"13283:31:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13305:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13312:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13304:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2471,"id":2543,"nodeType":"Return","src":"13297:17:13"}},{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"13329:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13339:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13329:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2548,"nodeType":"ExpressionStatement","src":"13329:12:13"},{"id":2553,"nodeType":"UncheckedBlock","src":"13356:274:13","statements":[{"expression":{"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2549,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"13601:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2550,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"13611:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13601:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2552,"nodeType":"ExpressionStatement","src":"13601:13:13"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"13172:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2520,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"13176:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13172:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2555,"initializationExpression":{"assignments":[2514],"declarations":[{"constant":false,"id":2514,"mutability":"mutable","name":"i","nameLocation":"13152:1:13","nodeType":"VariableDeclaration","scope":2555,"src":"13144:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"13144:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2518,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"13156:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2516,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"13164:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13156:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13144:26:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13181:3:13","subExpression":{"id":2522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"13183:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2524,"nodeType":"ExpressionStatement","src":"13181:3:13"},"nodeType":"ForStatement","src":"13139:502:13"},{"expression":{"components":[{"hexValue":"74727565","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13659:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"13665:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13658:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2471,"id":2559,"nodeType":"Return","src":"13651:21:13"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"12393:207:13","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12615:31:13","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"input","nameLocation":"12671:5:13","nodeType":"VariableDeclaration","scope":2561,"src":"12657:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2460,"name":"string","nodeType":"ElementaryTypeName","src":"12657:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"begin","nameLocation":"12695:5:13","nodeType":"VariableDeclaration","scope":2561,"src":"12687:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"12687:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"end","nameLocation":"12719:3:13","nodeType":"VariableDeclaration","scope":2561,"src":"12711:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"12711:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12646:83:13"},"returnParameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"success","nameLocation":"12757:7:13","nodeType":"VariableDeclaration","scope":2561,"src":"12752:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2467,"name":"bool","nodeType":"ElementaryTypeName","src":"12752:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"value","nameLocation":"12774:5:13","nodeType":"VariableDeclaration","scope":2561,"src":"12766:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"12766:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12751:29:13"},"scope":2809,"src":"12606:1074:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2579,"nodeType":"Block","src":"13986:69:13","statements":[{"expression":{"arguments":[{"id":2570,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"14017:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14024:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2574,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"14033:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14027:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2572,"name":"bytes","nodeType":"ElementaryTypeName","src":"14027:5:13","typeDescriptions":{}}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14027:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14040:6:13","memberName":"length","nodeType":"MemberAccess","src":"14027:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2569,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2580,2611],"referencedDeclaration":2611,"src":"14004:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2568,"id":2578,"nodeType":"Return","src":"13997:50:13"}]},"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"13688:217:13","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13920:12:13","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"input","nameLocation":"13947:5:13","nodeType":"VariableDeclaration","scope":2580,"src":"13933:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2563,"name":"string","nodeType":"ElementaryTypeName","src":"13933:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13932:21:13"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"13977:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2566,"name":"address","nodeType":"ElementaryTypeName","src":"13977:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13976:9:13"},"scope":2809,"src":"13911:144:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2610,"nodeType":"Block","src":"14430:169:13","statements":[{"assignments":[2593,2595],"declarations":[{"constant":false,"id":2593,"mutability":"mutable","name":"success","nameLocation":"14447:7:13","nodeType":"VariableDeclaration","scope":2610,"src":"14442:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2592,"name":"bool","nodeType":"ElementaryTypeName","src":"14442:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"value","nameLocation":"14464:5:13","nodeType":"VariableDeclaration","scope":2610,"src":"14456:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"14456:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2601,"initialValue":{"arguments":[{"id":2597,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"14489:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2598,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"14496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2599,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"14503:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2596,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2632,2736],"referencedDeclaration":2736,"src":"14473:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14473:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14441:66:13"},{"condition":{"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14522:8:13","subExpression":{"id":2602,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"14523:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2607,"nodeType":"IfStatement","src":"14518:50:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2604,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"14539:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14539:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2606,"nodeType":"RevertStatement","src":"14532:36:13"}},{"expression":{"id":2608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"14586:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2591,"id":2609,"nodeType":"Return","src":"14579:12:13"}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"14063:258:13","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2611,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14336:12:13","nodeType":"FunctionDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"input","nameLocation":"14363:5:13","nodeType":"VariableDeclaration","scope":2611,"src":"14349:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2582,"name":"string","nodeType":"ElementaryTypeName","src":"14349:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"begin","nameLocation":"14378:5:13","nodeType":"VariableDeclaration","scope":2611,"src":"14370:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"14370:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"end","nameLocation":"14393:3:13","nodeType":"VariableDeclaration","scope":2611,"src":"14385:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"14385:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14348:49:13"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2611,"src":"14421:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"14421:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14420:9:13"},"scope":2809,"src":"14327:272:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"14905:72:13","statements":[{"expression":{"arguments":[{"id":2622,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"14939:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14946:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2626,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"14955:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14949:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2624,"name":"bytes","nodeType":"ElementaryTypeName","src":"14949:5:13","typeDescriptions":{}}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14949:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14962:6:13","memberName":"length","nodeType":"MemberAccess","src":"14949:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2621,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2632,2736],"referencedDeclaration":2736,"src":"14923:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14923:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2620,"id":2630,"nodeType":"Return","src":"14916:53:13"}]},"documentation":{"id":2612,"nodeType":"StructuredDocumentation","src":"14607:194:13","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2632,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:13","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"input","nameLocation":"14846:5:13","nodeType":"VariableDeclaration","scope":2632,"src":"14832:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2613,"name":"string","nodeType":"ElementaryTypeName","src":"14832:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14831:21:13"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"success","nameLocation":"14881:7:13","nodeType":"VariableDeclaration","scope":2632,"src":"14876:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2616,"name":"bool","nodeType":"ElementaryTypeName","src":"14876:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"value","nameLocation":"14898:5:13","nodeType":"VariableDeclaration","scope":2632,"src":"14890:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"14890:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14875:29:13"},"scope":2809,"src":"14807:170:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2735,"nodeType":"Block","src":"15357:747:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15372:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2649,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"15384:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15378:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2647,"name":"bytes","nodeType":"ElementaryTypeName","src":"15378:5:13","typeDescriptions":{}}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15378:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15391:6:13","memberName":"length","nodeType":"MemberAccess","src":"15378:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15372:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15401:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2654,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15409:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15401:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15372:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2664,"nodeType":"IfStatement","src":"15368:72:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15422:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15437:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15429:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"15429:7:13","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15429:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15421:19:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2645,"id":2663,"nodeType":"Return","src":"15414:26:13"}},{"assignments":[2666],"declarations":[{"constant":false,"id":2666,"mutability":"mutable","name":"hasPrefix","nameLocation":"15458:9:13","nodeType":"VariableDeclaration","scope":2735,"src":"15453:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2665,"name":"bool","nodeType":"ElementaryTypeName","src":"15453:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2689,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2667,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15471:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2668,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15477:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15485:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15477:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15471:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2678,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"15527:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15521:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2676,"name":"bytes","nodeType":"ElementaryTypeName","src":"15521:5:13","typeDescriptions":{}}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15521:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2680,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15535:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2675,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"15498:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15498:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15491:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2673,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15491:6:13","typeDescriptions":{}}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15491:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15553:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15546:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2683,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15546:6:13","typeDescriptions":{}}},"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15546:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15491:67:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15470:88:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15453:105:13"},{"assignments":[2691],"declarations":[{"constant":false,"id":2691,"mutability":"mutable","name":"expectedLength","nameLocation":"15648:14:13","nodeType":"VariableDeclaration","scope":2735,"src":"15640:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"15640:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2699,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15665:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2693,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"15670:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15680:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"15670:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15670:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15691:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15670:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15665:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15640:52:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2700,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15760:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2701,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15766:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15760:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2703,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"15775:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15760:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2733,"nodeType":"Block","src":"16044:53:13","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16067:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16082:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16074:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"16074:7:13","typeDescriptions":{}}},"id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16074:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16066:19:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2645,"id":2732,"nodeType":"Return","src":"16059:26:13"}]},"id":2734,"nodeType":"IfStatement","src":"15756:341:13","trueBody":{"id":2725,"nodeType":"Block","src":"15791:247:13","statements":[{"assignments":[2706,2708],"declarations":[{"constant":false,"id":2706,"mutability":"mutable","name":"s","nameLocation":"15914:1:13","nodeType":"VariableDeclaration","scope":2725,"src":"15909:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2705,"name":"bool","nodeType":"ElementaryTypeName","src":"15909:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"v","nameLocation":"15925:1:13","nodeType":"VariableDeclaration","scope":2725,"src":"15917:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint256","nodeType":"ElementaryTypeName","src":"15917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2714,"initialValue":{"arguments":[{"id":2710,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"15962:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2711,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15969:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2712,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15976:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2709,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"15930:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15930:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15908:72:13"},{"expression":{"components":[{"id":2715,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"16003:1:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2720,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"16022:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16014:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2718,"name":"uint160","nodeType":"ElementaryTypeName","src":"16014:7:13","typeDescriptions":{}}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16014:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16006:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"16006:7:13","typeDescriptions":{}}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16006:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16002:24:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2645,"id":2724,"nodeType":"Return","src":"15995:31:13"}]}}]},"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"14985:206:13","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2736,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15206:15:13","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"input","nameLocation":"15246:5:13","nodeType":"VariableDeclaration","scope":2736,"src":"15232:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2634,"name":"string","nodeType":"ElementaryTypeName","src":"15232:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"begin","nameLocation":"15270:5:13","nodeType":"VariableDeclaration","scope":2736,"src":"15262:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"15262:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"end","nameLocation":"15294:3:13","nodeType":"VariableDeclaration","scope":2736,"src":"15286:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"15286:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15221:83:13"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"success","nameLocation":"15333:7:13","nodeType":"VariableDeclaration","scope":2736,"src":"15328:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2641,"name":"bool","nodeType":"ElementaryTypeName","src":"15328:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"value","nameLocation":"15350:5:13","nodeType":"VariableDeclaration","scope":2736,"src":"15342:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2643,"name":"address","nodeType":"ElementaryTypeName","src":"15342:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15327:29:13"},"scope":2809,"src":"15197:907:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2795,"nodeType":"Block","src":"16175:477:13","statements":[{"assignments":[2744],"declarations":[{"constant":false,"id":2744,"mutability":"mutable","name":"value","nameLocation":"16192:5:13","nodeType":"VariableDeclaration","scope":2795,"src":"16186:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2743,"name":"uint8","nodeType":"ElementaryTypeName","src":"16186:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2749,"initialValue":{"arguments":[{"id":2747,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"16206:3:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16200:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2745,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:13","typeDescriptions":{}}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16200:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16186:24:13"},{"id":2792,"nodeType":"UncheckedBlock","src":"16377:243:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16406:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16414:2:13","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16406:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16420:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16428:2:13","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16420:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16406:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16467:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16475:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16467:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16481:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16489:3:13","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16481:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16467:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16529:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16537:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16529:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16543:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16551:2:13","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16543:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16529:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16598:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2784,"name":"uint8","nodeType":"ElementaryTypeName","src":"16598:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2783,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16593:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16593:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16605:3:13","memberName":"max","nodeType":"MemberAccess","src":"16593:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2742,"id":2788,"nodeType":"Return","src":"16586:22:13"},"id":2789,"nodeType":"IfStatement","src":"16525:83:13","trueBody":{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16555:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16564:2:13","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16555:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2782,"nodeType":"ExpressionStatement","src":"16555:11:13"}},"id":2790,"nodeType":"IfStatement","src":"16463:145:13","trueBody":{"expression":{"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16494:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16503:2:13","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16494:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2771,"nodeType":"ExpressionStatement","src":"16494:11:13"}},"id":2791,"nodeType":"IfStatement","src":"16402:206:13","trueBody":{"expression":{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16432:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16441:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16432:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2760,"nodeType":"ExpressionStatement","src":"16432:11:13"}}]},{"expression":{"id":2793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16639:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2742,"id":2794,"nodeType":"Return","src":"16632:12:13"}]},"id":2796,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16121:12:13","nodeType":"FunctionDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"chr","nameLocation":"16141:3:13","nodeType":"VariableDeclaration","scope":2796,"src":"16134:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2737,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16134:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16133:12:13"},"returnParameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2796,"src":"16168:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2740,"name":"uint8","nodeType":"ElementaryTypeName","src":"16168:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16167:7:13"},"scope":2809,"src":"16112:540:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2807,"nodeType":"Block","src":"17045:230:13","statements":[{"AST":{"nativeSrc":"17196:72:13","nodeType":"YulBlock","src":"17196:72:13","statements":[{"nativeSrc":"17211:46:13","nodeType":"YulAssignment","src":"17211:46:13","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"17230:6:13","nodeType":"YulIdentifier","src":"17230:6:13"},{"arguments":[{"kind":"number","nativeSrc":"17242:4:13","nodeType":"YulLiteral","src":"17242:4:13","type":"","value":"0x20"},{"name":"offset","nativeSrc":"17248:6:13","nodeType":"YulIdentifier","src":"17248:6:13"}],"functionName":{"name":"add","nativeSrc":"17238:3:13","nodeType":"YulIdentifier","src":"17238:3:13"},"nativeSrc":"17238:17:13","nodeType":"YulFunctionCall","src":"17238:17:13"}],"functionName":{"name":"add","nativeSrc":"17226:3:13","nodeType":"YulIdentifier","src":"17226:3:13"},"nativeSrc":"17226:30:13","nodeType":"YulFunctionCall","src":"17226:30:13"}],"functionName":{"name":"mload","nativeSrc":"17220:5:13","nodeType":"YulIdentifier","src":"17220:5:13"},"nativeSrc":"17220:37:13","nodeType":"YulFunctionCall","src":"17220:37:13"},"variableNames":[{"name":"value","nativeSrc":"17211:5:13","nodeType":"YulIdentifier","src":"17211:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2799,"isOffset":false,"isSlot":false,"src":"17230:6:13","valueSize":1},{"declaration":2801,"isOffset":false,"isSlot":false,"src":"17248:6:13","valueSize":1},{"declaration":2804,"isOffset":false,"isSlot":false,"src":"17211:5:13","valueSize":1}],"flags":["memory-safe"],"id":2806,"nodeType":"InlineAssembly","src":"17171:97:13"}]},"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"16660:273:13","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16948:22:13","nodeType":"FunctionDefinition","parameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"buffer","nameLocation":"16984:6:13","nodeType":"VariableDeclaration","scope":2808,"src":"16971:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2798,"name":"bytes","nodeType":"ElementaryTypeName","src":"16971:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2801,"mutability":"mutable","name":"offset","nameLocation":"17000:6:13","nodeType":"VariableDeclaration","scope":2808,"src":"16992:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"16992:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16970:37:13"},"returnParameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"value","nameLocation":"17038:5:13","nodeType":"VariableDeclaration","scope":2808,"src":"17030:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17030:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17029:15:13"},"scope":2809,"src":"16939:336:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2810,"src":"309:16969:13","usedErrors":[1633,1636,1639],"usedEvents":[]}],"src":"104:17176:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3157]},"id":3158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2811,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2812,"nodeType":"StructuredDocumentation","src":"143:210:14","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3157,"linearizedBaseContracts":[3157],"name":"ECDSA","nameLocation":"363:5:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2817,"members":[{"id":2813,"name":"NoError","nameLocation":"405:7:14","nodeType":"EnumValue","src":"405:7:14"},{"id":2814,"name":"InvalidSignature","nameLocation":"423:16:14","nodeType":"EnumValue","src":"423:16:14"},{"id":2815,"name":"InvalidSignatureLength","nameLocation":"450:22:14","nodeType":"EnumValue","src":"450:22:14"},{"id":2816,"name":"InvalidSignatureS","nameLocation":"483:17:14","nodeType":"EnumValue","src":"483:17:14"}],"name":"RecoverError","nameLocation":"381:12:14","nodeType":"EnumDefinition","src":"376:131:14"},{"documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"515:65:14","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2820,"name":"ECDSAInvalidSignature","nameLocation":"592:21:14","nodeType":"ErrorDefinition","parameters":{"id":2819,"nodeType":"ParameterList","parameters":[],"src":"613:2:14"},"src":"586:30:14"},{"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"624:62:14","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2825,"name":"ECDSAInvalidSignatureLength","nameLocation":"698:27:14","nodeType":"ErrorDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"length","nameLocation":"734:6:14","nodeType":"VariableDeclaration","scope":2825,"src":"726:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"725:16:14"},"src":"692:50:14"},{"documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"750:87:14","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2830,"name":"ECDSAInvalidSignatureS","nameLocation":"849:22:14","nodeType":"ErrorDefinition","parameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"s","nameLocation":"880:1:14","nodeType":"VariableDeclaration","scope":2830,"src":"872:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"872:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"871:11:14"},"src":"843:40:14"},{"body":{"id":2882,"nodeType":"Block","src":"2343:638:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2845,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"2358:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2368:6:14","memberName":"length","nodeType":"MemberAccess","src":"2358:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2378:2:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2358:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2880,"nodeType":"Block","src":"2864:110:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2895:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2887:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2867,"name":"address","nodeType":"ElementaryTypeName","src":"2887:7:14","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2887:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2871,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"2899:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2912:22:14","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2815,"src":"2899:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2875,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"2944:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2954:6:14","memberName":"length","nodeType":"MemberAccess","src":"2944:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2936:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2936:7:14","typeDescriptions":{}}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2936:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2886:76:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2844,"id":2879,"nodeType":"Return","src":"2879:83:14"}]},"id":2881,"nodeType":"IfStatement","src":"2354:620:14","trueBody":{"id":2866,"nodeType":"Block","src":"2382:476:14","statements":[{"assignments":[2850],"declarations":[{"constant":false,"id":2850,"mutability":"mutable","name":"r","nameLocation":"2405:1:14","nodeType":"VariableDeclaration","scope":2866,"src":"2397:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2397:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2851,"nodeType":"VariableDeclarationStatement","src":"2397:9:14"},{"assignments":[2853],"declarations":[{"constant":false,"id":2853,"mutability":"mutable","name":"s","nameLocation":"2429:1:14","nodeType":"VariableDeclaration","scope":2866,"src":"2421:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2421:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2854,"nodeType":"VariableDeclarationStatement","src":"2421:9:14"},{"assignments":[2856],"declarations":[{"constant":false,"id":2856,"mutability":"mutable","name":"v","nameLocation":"2451:1:14","nodeType":"VariableDeclaration","scope":2866,"src":"2445:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2855,"name":"uint8","nodeType":"ElementaryTypeName","src":"2445:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2857,"nodeType":"VariableDeclarationStatement","src":"2445:7:14"},{"AST":{"nativeSrc":"2625:175:14","nodeType":"YulBlock","src":"2625:175:14","statements":[{"nativeSrc":"2644:32:14","nodeType":"YulAssignment","src":"2644:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2659:9:14","nodeType":"YulIdentifier","src":"2659:9:14"},{"kind":"number","nativeSrc":"2670:4:14","nodeType":"YulLiteral","src":"2670:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2655:3:14","nodeType":"YulIdentifier","src":"2655:3:14"},"nativeSrc":"2655:20:14","nodeType":"YulFunctionCall","src":"2655:20:14"}],"functionName":{"name":"mload","nativeSrc":"2649:5:14","nodeType":"YulIdentifier","src":"2649:5:14"},"nativeSrc":"2649:27:14","nodeType":"YulFunctionCall","src":"2649:27:14"},"variableNames":[{"name":"r","nativeSrc":"2644:1:14","nodeType":"YulIdentifier","src":"2644:1:14"}]},{"nativeSrc":"2694:32:14","nodeType":"YulAssignment","src":"2694:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2709:9:14","nodeType":"YulIdentifier","src":"2709:9:14"},{"kind":"number","nativeSrc":"2720:4:14","nodeType":"YulLiteral","src":"2720:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2705:3:14","nodeType":"YulIdentifier","src":"2705:3:14"},"nativeSrc":"2705:20:14","nodeType":"YulFunctionCall","src":"2705:20:14"}],"functionName":{"name":"mload","nativeSrc":"2699:5:14","nodeType":"YulIdentifier","src":"2699:5:14"},"nativeSrc":"2699:27:14","nodeType":"YulFunctionCall","src":"2699:27:14"},"variableNames":[{"name":"s","nativeSrc":"2694:1:14","nodeType":"YulIdentifier","src":"2694:1:14"}]},{"nativeSrc":"2744:41:14","nodeType":"YulAssignment","src":"2744:41:14","value":{"arguments":[{"kind":"number","nativeSrc":"2754:1:14","nodeType":"YulLiteral","src":"2754:1:14","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2767:9:14","nodeType":"YulIdentifier","src":"2767:9:14"},{"kind":"number","nativeSrc":"2778:4:14","nodeType":"YulLiteral","src":"2778:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2763:3:14","nodeType":"YulIdentifier","src":"2763:3:14"},"nativeSrc":"2763:20:14","nodeType":"YulFunctionCall","src":"2763:20:14"}],"functionName":{"name":"mload","nativeSrc":"2757:5:14","nodeType":"YulIdentifier","src":"2757:5:14"},"nativeSrc":"2757:27:14","nodeType":"YulFunctionCall","src":"2757:27:14"}],"functionName":{"name":"byte","nativeSrc":"2749:4:14","nodeType":"YulIdentifier","src":"2749:4:14"},"nativeSrc":"2749:36:14","nodeType":"YulFunctionCall","src":"2749:36:14"},"variableNames":[{"name":"v","nativeSrc":"2744:1:14","nodeType":"YulIdentifier","src":"2744:1:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2850,"isOffset":false,"isSlot":false,"src":"2644:1:14","valueSize":1},{"declaration":2853,"isOffset":false,"isSlot":false,"src":"2694:1:14","valueSize":1},{"declaration":2835,"isOffset":false,"isSlot":false,"src":"2659:9:14","valueSize":1},{"declaration":2835,"isOffset":false,"isSlot":false,"src":"2709:9:14","valueSize":1},{"declaration":2835,"isOffset":false,"isSlot":false,"src":"2767:9:14","valueSize":1},{"declaration":2856,"isOffset":false,"isSlot":false,"src":"2744:1:14","valueSize":1}],"flags":["memory-safe"],"id":2858,"nodeType":"InlineAssembly","src":"2600:200:14"},{"expression":{"arguments":[{"id":2860,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"2832:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2861,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"2838:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2862,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"2841:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2863,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"2844:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2859,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2883,2963,3071],"referencedDeclaration":3071,"src":"2821:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2844,"id":2865,"nodeType":"Return","src":"2814:32:14"}]}}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"891:1287:14","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2883,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2193:10:14","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"hash","nameLocation":"2222:4:14","nodeType":"VariableDeclaration","scope":2883,"src":"2214:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"signature","nameLocation":"2250:9:14","nodeType":"VariableDeclaration","scope":2883,"src":"2237:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2834,"name":"bytes","nodeType":"ElementaryTypeName","src":"2237:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2203:63:14"},"returnParameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"recovered","nameLocation":"2298:9:14","nodeType":"VariableDeclaration","scope":2883,"src":"2290:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2837,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2841,"mutability":"mutable","name":"err","nameLocation":"2322:3:14","nodeType":"VariableDeclaration","scope":2883,"src":"2309:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2840,"nodeType":"UserDefinedTypeName","pathNode":{"id":2839,"name":"RecoverError","nameLocations":["2309:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"2309:12:14"},"referencedDeclaration":2817,"src":"2309:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"errArg","nameLocation":"2335:6:14","nodeType":"VariableDeclaration","scope":2883,"src":"2327:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2327:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2289:53:14"},"scope":3157,"src":"2184:797:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2912,"nodeType":"Block","src":"3891:172:14","statements":[{"assignments":[2894,2897,2899],"declarations":[{"constant":false,"id":2894,"mutability":"mutable","name":"recovered","nameLocation":"3911:9:14","nodeType":"VariableDeclaration","scope":2912,"src":"3903:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2893,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"error","nameLocation":"3935:5:14","nodeType":"VariableDeclaration","scope":2912,"src":"3922:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2896,"nodeType":"UserDefinedTypeName","pathNode":{"id":2895,"name":"RecoverError","nameLocations":["3922:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"3922:12:14"},"referencedDeclaration":2817,"src":"3922:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"errorArg","nameLocation":"3950:8:14","nodeType":"VariableDeclaration","scope":2912,"src":"3942:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2904,"initialValue":{"arguments":[{"id":2901,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"3973:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2902,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"3979:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2900,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2883,2963,3071],"referencedDeclaration":2883,"src":"3962:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3962:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3902:87:14"},{"expression":{"arguments":[{"id":2906,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4012:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"id":2907,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"4019:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2905,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"4000:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2817_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4000:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2909,"nodeType":"ExpressionStatement","src":"4000:28:14"},{"expression":{"id":2910,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4046:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2892,"id":2911,"nodeType":"Return","src":"4039:16:14"}]},"documentation":{"id":2884,"nodeType":"StructuredDocumentation","src":"2989:809:14","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3813:7:14","nodeType":"FunctionDefinition","parameters":{"id":2889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"hash","nameLocation":"3829:4:14","nodeType":"VariableDeclaration","scope":2913,"src":"3821:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3821:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2888,"mutability":"mutable","name":"signature","nameLocation":"3848:9:14","nodeType":"VariableDeclaration","scope":2913,"src":"3835:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3835:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3820:38:14"},"returnParameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2913,"src":"3882:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"3882:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3881:9:14"},"scope":3157,"src":"3804:259:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2962,"nodeType":"Block","src":"4453:349:14","statements":[{"id":2961,"nodeType":"UncheckedBlock","src":"4464:331:14","statements":[{"assignments":[2931],"declarations":[{"constant":false,"id":2931,"mutability":"mutable","name":"s","nameLocation":"4497:1:14","nodeType":"VariableDeclaration","scope":2961,"src":"4489:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4489:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2938,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2932,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"4501:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4514:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4506:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4506:7:14","typeDescriptions":{}}},"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4506:75:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4501:80:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4489:92:14"},{"assignments":[2940],"declarations":[{"constant":false,"id":2940,"mutability":"mutable","name":"v","nameLocation":"4700:1:14","nodeType":"VariableDeclaration","scope":2961,"src":"4694:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2939,"name":"uint8","nodeType":"ElementaryTypeName","src":"4694:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2953,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2945,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"4719:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4711:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"4711:7:14","typeDescriptions":{}}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4711:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4726:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4711:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4710:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4733:2:14","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4710:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4704:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2941,"name":"uint8","nodeType":"ElementaryTypeName","src":"4704:5:14","typeDescriptions":{}}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4704:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4694:42:14"},{"expression":{"arguments":[{"id":2955,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"4769:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2956,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"4775:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2957,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"4778:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2958,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"4781:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2954,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2883,2963,3071],"referencedDeclaration":3071,"src":"4758:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4758:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2929,"id":2960,"nodeType":"Return","src":"4751:32:14"}]}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"4071:209:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2963,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4295:10:14","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"hash","nameLocation":"4324:4:14","nodeType":"VariableDeclaration","scope":2963,"src":"4316:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4316:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"r","nameLocation":"4347:1:14","nodeType":"VariableDeclaration","scope":2963,"src":"4339:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4339:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"vs","nameLocation":"4367:2:14","nodeType":"VariableDeclaration","scope":2963,"src":"4359:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4359:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4305:71:14"},"returnParameters":{"id":2929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"recovered","nameLocation":"4408:9:14","nodeType":"VariableDeclaration","scope":2963,"src":"4400:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2922,"name":"address","nodeType":"ElementaryTypeName","src":"4400:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2926,"mutability":"mutable","name":"err","nameLocation":"4432:3:14","nodeType":"VariableDeclaration","scope":2963,"src":"4419:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2925,"nodeType":"UserDefinedTypeName","pathNode":{"id":2924,"name":"RecoverError","nameLocations":["4419:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"4419:12:14"},"referencedDeclaration":2817,"src":"4419:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"errArg","nameLocation":"4445:6:14","nodeType":"VariableDeclaration","scope":2963,"src":"4437:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4437:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4399:53:14"},"scope":3157,"src":"4286:516:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2995,"nodeType":"Block","src":"5020:168:14","statements":[{"assignments":[2976,2979,2981],"declarations":[{"constant":false,"id":2976,"mutability":"mutable","name":"recovered","nameLocation":"5040:9:14","nodeType":"VariableDeclaration","scope":2995,"src":"5032:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"5032:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2979,"mutability":"mutable","name":"error","nameLocation":"5064:5:14","nodeType":"VariableDeclaration","scope":2995,"src":"5051:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2978,"nodeType":"UserDefinedTypeName","pathNode":{"id":2977,"name":"RecoverError","nameLocations":["5051:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"5051:12:14"},"referencedDeclaration":2817,"src":"5051:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"errorArg","nameLocation":"5079:8:14","nodeType":"VariableDeclaration","scope":2995,"src":"5071:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5071:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2987,"initialValue":{"arguments":[{"id":2983,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"5102:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2984,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"5108:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2985,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"5111:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2982,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2883,2963,3071],"referencedDeclaration":2963,"src":"5091:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"5031:83:14"},{"expression":{"arguments":[{"id":2989,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"5137:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"id":2990,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"5144:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2988,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5125:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2817_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5125:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2992,"nodeType":"ExpressionStatement","src":"5125:28:14"},{"expression":{"id":2993,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"5171:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2974,"id":2994,"nodeType":"Return","src":"5164:16:14"}]},"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"4810:118:14","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4943:7:14","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"hash","nameLocation":"4959:4:14","nodeType":"VariableDeclaration","scope":2996,"src":"4951:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4951:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"r","nameLocation":"4973:1:14","nodeType":"VariableDeclaration","scope":2996,"src":"4965:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4965:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"vs","nameLocation":"4984:2:14","nodeType":"VariableDeclaration","scope":2996,"src":"4976:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4976:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4950:37:14"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2996,"src":"5011:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2972,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5010:9:14"},"scope":3157,"src":"4934:254:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3070,"nodeType":"Block","src":"5514:1393:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3017,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"6420:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6412:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"6412:7:14","typeDescriptions":{}}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6412:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6425:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6412:79:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3031,"nodeType":"IfStatement","src":"6408:166:14","trueBody":{"id":3030,"nodeType":"Block","src":"6493:81:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6524:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6516:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3021,"name":"address","nodeType":"ElementaryTypeName","src":"6516:7:14","typeDescriptions":{}}},"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6516:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3025,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"6528:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6541:17:14","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2816,"src":"6528:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"id":3027,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"6560:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6515:47:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3014,"id":3029,"nodeType":"Return","src":"6508:54:14"}]}},{"assignments":[3033],"declarations":[{"constant":false,"id":3033,"mutability":"mutable","name":"signer","nameLocation":"6679:6:14","nodeType":"VariableDeclaration","scope":3070,"src":"6671:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3032,"name":"address","nodeType":"ElementaryTypeName","src":"6671:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3040,"initialValue":{"arguments":[{"id":3035,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"6698:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3036,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"6704:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3037,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"6707:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3038,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"6710:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3034,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6688:9:14","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6671:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3041,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"6727:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6737:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3042,"name":"address","nodeType":"ElementaryTypeName","src":"6737:7:14","typeDescriptions":{}}},"id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6737:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6727:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3060,"nodeType":"IfStatement","src":"6723:115:14","trueBody":{"id":3059,"nodeType":"Block","src":"6749:89:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6780:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6772:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"6772:7:14","typeDescriptions":{}}},"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6772:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3051,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"6784:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6797:16:14","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2814,"src":"6784:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6823:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6815:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6815:7:14","typeDescriptions":{}}},"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6815:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6771:55:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3014,"id":3058,"nodeType":"Return","src":"6764:62:14"}]}},{"expression":{"components":[{"id":3061,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"6858:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3062,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"6866:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6879:7:14","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2813,"src":"6866:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6896:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6888:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6888:7:14","typeDescriptions":{}}},"id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6888:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6857:42:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3014,"id":3069,"nodeType":"Return","src":"6850:49:14"}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"5196:128:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3071,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5339:10:14","nodeType":"FunctionDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"hash","nameLocation":"5368:4:14","nodeType":"VariableDeclaration","scope":3071,"src":"5360:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5360:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"v","nameLocation":"5389:1:14","nodeType":"VariableDeclaration","scope":3071,"src":"5383:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3000,"name":"uint8","nodeType":"ElementaryTypeName","src":"5383:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"r","nameLocation":"5409:1:14","nodeType":"VariableDeclaration","scope":3071,"src":"5401:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5401:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"s","nameLocation":"5429:1:14","nodeType":"VariableDeclaration","scope":3071,"src":"5421:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5421:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5349:88:14"},"returnParameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"recovered","nameLocation":"5469:9:14","nodeType":"VariableDeclaration","scope":3071,"src":"5461:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3007,"name":"address","nodeType":"ElementaryTypeName","src":"5461:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"err","nameLocation":"5493:3:14","nodeType":"VariableDeclaration","scope":3071,"src":"5480:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3010,"nodeType":"UserDefinedTypeName","pathNode":{"id":3009,"name":"RecoverError","nameLocations":["5480:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"5480:12:14"},"referencedDeclaration":2817,"src":"5480:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"errArg","nameLocation":"5506:6:14","nodeType":"VariableDeclaration","scope":3071,"src":"5498:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5498:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5460:53:14"},"scope":3157,"src":"5330:1577:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3106,"nodeType":"Block","src":"7140:170:14","statements":[{"assignments":[3086,3089,3091],"declarations":[{"constant":false,"id":3086,"mutability":"mutable","name":"recovered","nameLocation":"7160:9:14","nodeType":"VariableDeclaration","scope":3106,"src":"7152:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3085,"name":"address","nodeType":"ElementaryTypeName","src":"7152:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3089,"mutability":"mutable","name":"error","nameLocation":"7184:5:14","nodeType":"VariableDeclaration","scope":3106,"src":"7171:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3088,"nodeType":"UserDefinedTypeName","pathNode":{"id":3087,"name":"RecoverError","nameLocations":["7171:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"7171:12:14"},"referencedDeclaration":2817,"src":"7171:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3091,"mutability":"mutable","name":"errorArg","nameLocation":"7199:8:14","nodeType":"VariableDeclaration","scope":3106,"src":"7191:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7191:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3098,"initialValue":{"arguments":[{"id":3093,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"7222:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3094,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"7228:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3095,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"7231:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3096,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"7234:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3092,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2883,2963,3071],"referencedDeclaration":3071,"src":"7211:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7211:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"7151:85:14"},{"expression":{"arguments":[{"id":3100,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"7259:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"id":3101,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"7266:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3099,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"7247:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2817_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7247:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3103,"nodeType":"ExpressionStatement","src":"7247:28:14"},{"expression":{"id":3104,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"7293:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3084,"id":3105,"nodeType":"Return","src":"7286:16:14"}]},"documentation":{"id":3072,"nodeType":"StructuredDocumentation","src":"6915:125:14","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"7055:7:14","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3074,"mutability":"mutable","name":"hash","nameLocation":"7071:4:14","nodeType":"VariableDeclaration","scope":3107,"src":"7063:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7063:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"v","nameLocation":"7083:1:14","nodeType":"VariableDeclaration","scope":3107,"src":"7077:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3075,"name":"uint8","nodeType":"ElementaryTypeName","src":"7077:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3078,"mutability":"mutable","name":"r","nameLocation":"7094:1:14","nodeType":"VariableDeclaration","scope":3107,"src":"7086:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7086:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3080,"mutability":"mutable","name":"s","nameLocation":"7105:1:14","nodeType":"VariableDeclaration","scope":3107,"src":"7097:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7097:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7062:45:14"},"returnParameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"7131:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3082,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7130:9:14"},"scope":3157,"src":"7046:264:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3155,"nodeType":"Block","src":"7520:470:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3116,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7535:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3117,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"7544:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7557:7:14","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2813,"src":"7544:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"src":"7535:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3122,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7633:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3123,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"7642:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7655:16:14","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2814,"src":"7642:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"src":"7633:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7740:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3131,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"7749:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7762:22:14","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2815,"src":"7749:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"src":"7740:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7876:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3143,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"7885:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7898:17:14","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2816,"src":"7885:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"src":"7876:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3151,"nodeType":"IfStatement","src":"7872:111:14","trueBody":{"id":3150,"nodeType":"Block","src":"7917:66:14","statements":[{"errorCall":{"arguments":[{"id":3147,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"7962:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3146,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"7939:22:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7939:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3149,"nodeType":"RevertStatement","src":"7932:39:14"}]}},"id":3152,"nodeType":"IfStatement","src":"7736:247:14","trueBody":{"id":3141,"nodeType":"Block","src":"7786:80:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3137,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"7844:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7836:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"7836:7:14","typeDescriptions":{}}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7836:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3134,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"7808:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7808:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3140,"nodeType":"RevertStatement","src":"7801:53:14"}]}},"id":3153,"nodeType":"IfStatement","src":"7629:354:14","trueBody":{"id":3129,"nodeType":"Block","src":"7673:57:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3126,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"7695:21:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7695:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3128,"nodeType":"RevertStatement","src":"7688:30:14"}]}},"id":3154,"nodeType":"IfStatement","src":"7531:452:14","trueBody":{"id":3121,"nodeType":"Block","src":"7566:57:14","statements":[{"functionReturnParameters":3115,"id":3120,"nodeType":"Return","src":"7581:7:14"}]}}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"7318:124:14","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3156,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7457:11:14","nodeType":"FunctionDefinition","parameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"error","nameLocation":"7482:5:14","nodeType":"VariableDeclaration","scope":3156,"src":"7469:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3110,"nodeType":"UserDefinedTypeName","pathNode":{"id":3109,"name":"RecoverError","nameLocations":["7469:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"7469:12:14"},"referencedDeclaration":2817,"src":"7469:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3113,"mutability":"mutable","name":"errorArg","nameLocation":"7497:8:14","nodeType":"VariableDeclaration","scope":3156,"src":"7489:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7489:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7468:38:14"},"returnParameters":{"id":3115,"nodeType":"ParameterList","parameters":[],"src":"7520:0:14"},"scope":3157,"src":"7448:542:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3158,"src":"355:7638:14","usedErrors":[2820,2825,2830],"usedEvents":[]}],"src":"115:7880:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3384],"IERC5267":[172],"MessageHashUtils":[3458],"ShortString":[1274],"ShortStrings":[1485]},"id":3385,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3159,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3385,"sourceUnit":3459,"src":"144:56:15","symbolAliases":[{"foreign":{"id":3160,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"152:16:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3385,"sourceUnit":1486,"src":"202:62:15","symbolAliases":[{"foreign":{"id":3162,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"210:12:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3163,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"224:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3166,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3385,"sourceUnit":173,"src":"266:55:15","symbolAliases":[{"foreign":{"id":3165,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"274:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3168,"name":"IERC5267","nameLocations":["2021:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"2021:8:15"},"id":3169,"nodeType":"InheritanceSpecifier","src":"2021:8:15"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3167,"nodeType":"StructuredDocumentation","src":"325:1666:15","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3384,"linearizedBaseContracts":[3384,172],"name":"EIP712","nameLocation":"2011:6:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3171,"libraryName":{"id":3170,"name":"ShortStrings","nameLocations":["2043:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1485,"src":"2043:12:15"},"nodeType":"UsingForDirective","src":"2037:25:15"},{"constant":true,"id":3176,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2095:9:15","nodeType":"VariableDeclaration","scope":3384,"src":"2070:141:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2070:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2126:84:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3173,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2116:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2116:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3178,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2440:22:15","nodeType":"VariableDeclaration","scope":3384,"src":"2414:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2414:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3180,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2495:14:15","nodeType":"VariableDeclaration","scope":3384,"src":"2469:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3182,"mutability":"immutable","name":"_cachedThis","nameLocation":"2542:11:15","nodeType":"VariableDeclaration","scope":3384,"src":"2516:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3181,"name":"address","nodeType":"ElementaryTypeName","src":"2516:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3184,"mutability":"immutable","name":"_hashedName","nameLocation":"2588:11:15","nodeType":"VariableDeclaration","scope":3384,"src":"2562:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2562:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3186,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2632:14:15","nodeType":"VariableDeclaration","scope":3384,"src":"2606:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2606:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3189,"mutability":"immutable","name":"_name","nameLocation":"2685:5:15","nodeType":"VariableDeclaration","scope":3384,"src":"2655:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":3188,"nodeType":"UserDefinedTypeName","pathNode":{"id":3187,"name":"ShortString","nameLocations":["2655:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2655:11:15"},"referencedDeclaration":1274,"src":"2655:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3192,"mutability":"immutable","name":"_version","nameLocation":"2727:8:15","nodeType":"VariableDeclaration","scope":3384,"src":"2697:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":3191,"nodeType":"UserDefinedTypeName","pathNode":{"id":3190,"name":"ShortString","nameLocations":["2697:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2697:11:15"},"referencedDeclaration":1274,"src":"2697:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3194,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:15","nodeType":"VariableDeclaration","scope":3384,"src":"2742:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3193,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3196,"mutability":"mutable","name":"_versionFallback","nameLocation":"2792:16:15","nodeType":"VariableDeclaration","scope":3384,"src":"2777:31:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3195,"name":"string","nodeType":"ElementaryTypeName","src":"2777:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3253,"nodeType":"Block","src":"3448:385:15","statements":[{"expression":{"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3204,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"3459:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3207,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"3498:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3205,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"3467:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3472:25:15","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1426,"src":"3467:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1274_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"src":"3459:53:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"id":3210,"nodeType":"ExpressionStatement","src":"3459:53:15"},{"expression":{"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3211,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"3523:8:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3214,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"3568:16:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3212,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"3534:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3542:25:15","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1426,"src":"3534:33:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1274_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"src":"3523:62:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"id":3217,"nodeType":"ExpressionStatement","src":"3523:62:15"},{"expression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3218,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"3596:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3222,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"3626:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3620:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3220,"name":"bytes","nodeType":"ElementaryTypeName","src":"3620:5:15","typeDescriptions":{}}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3620:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3219,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3610:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3596:36:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3226,"nodeType":"ExpressionStatement","src":"3596:36:15"},{"expression":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3227,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"3643:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3231,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"3676:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3670:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3229,"name":"bytes","nodeType":"ElementaryTypeName","src":"3670:5:15","typeDescriptions":{}}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3670:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3228,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3660:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3660:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3643:42:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3235,"nodeType":"ExpressionStatement","src":"3643:42:15"},{"expression":{"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3236,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"3698:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3237,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3715:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3721:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"3715:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3698:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3240,"nodeType":"ExpressionStatement","src":"3698:30:15"},{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3241,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"3739:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3242,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"3764:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3764:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3739:48:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3245,"nodeType":"ExpressionStatement","src":"3739:48:15"},{"expression":{"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3246,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"3798:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3249,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3820:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}],"id":3248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3812:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3247,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:15","typeDescriptions":{}}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3812:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3798:27:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3252,"nodeType":"ExpressionStatement","src":"3798:27:15"}]},"documentation":{"id":3197,"nodeType":"StructuredDocumentation","src":"2817:570:15","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3254,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"name","nameLocation":"3419:4:15","nodeType":"VariableDeclaration","scope":3254,"src":"3405:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3198,"name":"string","nodeType":"ElementaryTypeName","src":"3405:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"version","nameLocation":"3439:7:15","nodeType":"VariableDeclaration","scope":3254,"src":"3425:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3200,"name":"string","nodeType":"ElementaryTypeName","src":"3425:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3404:43:15"},"returnParameters":{"id":3203,"nodeType":"ParameterList","parameters":[],"src":"3448:0:15"},"scope":3384,"src":"3393:440:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3279,"nodeType":"Block","src":"3986:206:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3262,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4009:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}],"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4001:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3260,"name":"address","nodeType":"ElementaryTypeName","src":"4001:7:15","typeDescriptions":{}}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4001:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3264,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"4018:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4001:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3266,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4033:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4039:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"4033:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3268,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"4050:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4033:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4001:63:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3277,"nodeType":"Block","src":"4128:57:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3274,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"4150:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4150:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3259,"id":3276,"nodeType":"Return","src":"4143:30:15"}]},"id":3278,"nodeType":"IfStatement","src":"3997:188:15","trueBody":{"id":3273,"nodeType":"Block","src":"4066:56:15","statements":[{"expression":{"id":3271,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"4088:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3259,"id":3272,"nodeType":"Return","src":"4081:29:15"}]}}]},"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"3841:77:15","text":" @dev Returns the domain separator for the current chain."},"id":3280,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3933:18:15","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[],"src":"3951:2:15"},"returnParameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3280,"src":"3977:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3977:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3976:9:15"},"scope":3384,"src":"3924:268:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3300,"nodeType":"Block","src":"4264:117:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3288,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"4303:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3289,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"4314:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3290,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"4327:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3291,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4343:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4349:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"4343:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3295,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4366:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}],"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4358:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3293,"name":"address","nodeType":"ElementaryTypeName","src":"4358:7:15","typeDescriptions":{}}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4358:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3286,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4292:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4296:6:15","memberName":"encode","nodeType":"MemberAccess","src":"4292:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3285,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4282:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:91:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3284,"id":3299,"nodeType":"Return","src":"4275:98:15"}]},"id":3301,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4209:21:15","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[],"src":"4230:2:15"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3301,"src":"4255:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4254:9:15"},"scope":3384,"src":"4200:181:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3316,"nodeType":"Block","src":"5109:92:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3311,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"5160:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3313,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"5182:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3309,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"5127:16:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3458_$","typeString":"type(library MessageHashUtils)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5144:15:15","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"5127:32:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5127:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3308,"id":3315,"nodeType":"Return","src":"5120:73:15"}]},"documentation":{"id":3302,"nodeType":"StructuredDocumentation","src":"4389:628:15","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5032:16:15","nodeType":"FunctionDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"structHash","nameLocation":"5057:10:15","nodeType":"VariableDeclaration","scope":3317,"src":"5049:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5049:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5048:20:15"},"returnParameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"5100:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5100:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5099:9:15"},"scope":3384,"src":"5023:178:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":3358,"nodeType":"Block","src":"5598:239:15","statements":[{"expression":{"components":[{"hexValue":"0f","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5631:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3337,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"5662:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3339,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"5690:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5690:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3341,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5721:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5727:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"5721:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3345,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5757:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}],"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5749:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3343,"name":"address","nodeType":"ElementaryTypeName","src":"5749:7:15","typeDescriptions":{}}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5777:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5777:7:15","typeDescriptions":{}}},"id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5777:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5816:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5802:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"5806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3352,"nodeType":"ArrayTypeName","src":"5806:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5802:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5616:213:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3335,"id":3357,"nodeType":"Return","src":"5609:220:15"}]},"documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"5209:42:15","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5266:12:15","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[],"src":"5278:2:15"},"returnParameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"fields","nameLocation":"5367:6:15","nodeType":"VariableDeclaration","scope":3359,"src":"5360:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3320,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5360:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3323,"mutability":"mutable","name":"name","nameLocation":"5402:4:15","nodeType":"VariableDeclaration","scope":3359,"src":"5388:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3322,"name":"string","nodeType":"ElementaryTypeName","src":"5388:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3325,"mutability":"mutable","name":"version","nameLocation":"5435:7:15","nodeType":"VariableDeclaration","scope":3359,"src":"5421:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3324,"name":"string","nodeType":"ElementaryTypeName","src":"5421:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"chainId","nameLocation":"5465:7:15","nodeType":"VariableDeclaration","scope":3359,"src":"5457:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"5457:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"verifyingContract","nameLocation":"5495:17:15","nodeType":"VariableDeclaration","scope":3359,"src":"5487:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3328,"name":"address","nodeType":"ElementaryTypeName","src":"5487:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"salt","nameLocation":"5535:4:15","nodeType":"VariableDeclaration","scope":3359,"src":"5527:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5527:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"extensions","nameLocation":"5571:10:15","nodeType":"VariableDeclaration","scope":3359,"src":"5554:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"5554:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3333,"nodeType":"ArrayTypeName","src":"5554:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5345:247:15"},"scope":3384,"src":"5257:580:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3370,"nodeType":"Block","src":"6227:67:15","statements":[{"expression":{"arguments":[{"id":3367,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"6272:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3365,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"6245:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6251:20:15","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"6245:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6245:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3364,"id":3369,"nodeType":"Return","src":"6238:48:15"}]},"documentation":{"id":3360,"nodeType":"StructuredDocumentation","src":"5845:261:15","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3371,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6175:11:15","nodeType":"FunctionDefinition","parameters":{"id":3361,"nodeType":"ParameterList","parameters":[],"src":"6186:2:15"},"returnParameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3371,"src":"6212:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3362,"name":"string","nodeType":"ElementaryTypeName","src":"6212:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6211:15:15"},"scope":3384,"src":"6166:128:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3382,"nodeType":"Block","src":"6693:73:15","statements":[{"expression":{"arguments":[{"id":3379,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"6741:16:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3377,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"6711:8:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6720:20:15","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"6711:29:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6711:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3376,"id":3381,"nodeType":"Return","src":"6704:54:15"}]},"documentation":{"id":3372,"nodeType":"StructuredDocumentation","src":"6302:267:15","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3383,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6638:14:15","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[],"src":"6652:2:15"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"6678:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3374,"name":"string","nodeType":"ElementaryTypeName","src":"6678:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6677:15:15"},"scope":3384,"src":"6629:137:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3385,"src":"1993:4776:15","usedErrors":[1282,1284],"usedEvents":[152]}],"src":"116:6655:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3458],"Strings":[2809]},"id":3459,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3386,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3459,"sourceUnit":2810,"src":"154:39:16","symbolAliases":[{"foreign":{"id":3387,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"162:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3389,"nodeType":"StructuredDocumentation","src":"197:336:16","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3458,"linearizedBaseContracts":[3458],"name":"MessageHashUtils","nameLocation":"543:16:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3398,"nodeType":"Block","src":"1343:347:16","statements":[{"AST":{"nativeSrc":"1379:304:16","nodeType":"YulBlock","src":"1379:304:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1401:4:16","nodeType":"YulLiteral","src":"1401:4:16","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1407:34:16","nodeType":"YulLiteral","src":"1407:34:16","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1394:6:16","nodeType":"YulIdentifier","src":"1394:6:16"},"nativeSrc":"1394:48:16","nodeType":"YulFunctionCall","src":"1394:48:16"},"nativeSrc":"1394:48:16","nodeType":"YulExpressionStatement","src":"1394:48:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1504:4:16","nodeType":"YulLiteral","src":"1504:4:16","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1510:11:16","nodeType":"YulIdentifier","src":"1510:11:16"}],"functionName":{"name":"mstore","nativeSrc":"1497:6:16","nodeType":"YulIdentifier","src":"1497:6:16"},"nativeSrc":"1497:25:16","nodeType":"YulFunctionCall","src":"1497:25:16"},"nativeSrc":"1497:25:16","nodeType":"YulExpressionStatement","src":"1497:25:16"},{"nativeSrc":"1577:31:16","nodeType":"YulAssignment","src":"1577:31:16","value":{"arguments":[{"kind":"number","nativeSrc":"1597:4:16","nodeType":"YulLiteral","src":"1597:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1603:4:16","nodeType":"YulLiteral","src":"1603:4:16","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1587:9:16","nodeType":"YulIdentifier","src":"1587:9:16"},"nativeSrc":"1587:21:16","nodeType":"YulFunctionCall","src":"1587:21:16"},"variableNames":[{"name":"digest","nativeSrc":"1577:6:16","nodeType":"YulIdentifier","src":"1577:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3395,"isOffset":false,"isSlot":false,"src":"1577:6:16","valueSize":1},{"declaration":3392,"isOffset":false,"isSlot":false,"src":"1510:11:16","valueSize":1}],"flags":["memory-safe"],"id":3397,"nodeType":"InlineAssembly","src":"1354:329:16"}]},"documentation":{"id":3390,"nodeType":"StructuredDocumentation","src":"567:678:16","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3399,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1260:22:16","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"messageHash","nameLocation":"1291:11:16","nodeType":"VariableDeclaration","scope":3399,"src":"1283:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1283:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1282:21:16"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"digest","nameLocation":"1335:6:16","nodeType":"VariableDeclaration","scope":3399,"src":"1327:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1327:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1326:16:16"},"scope":3458,"src":"1251:439:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3424,"nodeType":"Block","src":"2254:146:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2308:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3416,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"2365:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2373:6:16","memberName":"length","nodeType":"MemberAccess","src":"2365:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3414,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"2348:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2809_$","typeString":"type(library Strings)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2356:8:16","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1687,"src":"2348:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2348:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2342:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3412,"name":"bytes","nodeType":"ElementaryTypeName","src":"2342:5:16","typeDescriptions":{}}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2342:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3420,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"2383:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2295:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3408,"name":"bytes","nodeType":"ElementaryTypeName","src":"2295:5:16","typeDescriptions":{}}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2301:6:16","memberName":"concat","nodeType":"MemberAccess","src":"2295:12:16","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2295:96:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3407,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2285:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2285:107:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3406,"id":3423,"nodeType":"Return","src":"2265:127:16"}]},"documentation":{"id":3400,"nodeType":"StructuredDocumentation","src":"1698:464:16","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3425,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2177:22:16","nodeType":"FunctionDefinition","parameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"message","nameLocation":"2213:7:16","nodeType":"VariableDeclaration","scope":3425,"src":"2200:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3401,"name":"bytes","nodeType":"ElementaryTypeName","src":"2200:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2199:22:16"},"returnParameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3425,"src":"2245:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2244:9:16"},"scope":3458,"src":"2168:232:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3444,"nodeType":"Block","src":"2865:82:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2910:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3439,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"2922:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3440,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"2933:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3436,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2893:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2897:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"2893:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2893:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3435,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2883:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2883:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3434,"id":3443,"nodeType":"Return","src":"2876:63:16"}]},"documentation":{"id":3426,"nodeType":"StructuredDocumentation","src":"2408:340:16","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3445,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2763:31:16","nodeType":"FunctionDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3428,"mutability":"mutable","name":"validator","nameLocation":"2803:9:16","nodeType":"VariableDeclaration","scope":3445,"src":"2795:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3427,"name":"address","nodeType":"ElementaryTypeName","src":"2795:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"data","nameLocation":"2827:4:16","nodeType":"VariableDeclaration","scope":3445,"src":"2814:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3429,"name":"bytes","nodeType":"ElementaryTypeName","src":"2814:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2794:38:16"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3445,"src":"2856:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2856:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2855:9:16"},"scope":3458,"src":"2754:193:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3456,"nodeType":"Block","src":"3509:273:16","statements":[{"AST":{"nativeSrc":"3545:230:16","nodeType":"YulBlock","src":"3545:230:16","statements":[{"nativeSrc":"3560:22:16","nodeType":"YulVariableDeclaration","src":"3560:22:16","value":{"arguments":[{"kind":"number","nativeSrc":"3577:4:16","nodeType":"YulLiteral","src":"3577:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3571:5:16","nodeType":"YulIdentifier","src":"3571:5:16"},"nativeSrc":"3571:11:16","nodeType":"YulFunctionCall","src":"3571:11:16"},"variables":[{"name":"ptr","nativeSrc":"3564:3:16","nodeType":"YulTypedName","src":"3564:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3603:3:16","nodeType":"YulIdentifier","src":"3603:3:16"},{"hexValue":"1901","kind":"string","nativeSrc":"3608:10:16","nodeType":"YulLiteral","src":"3608:10:16","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3596:6:16","nodeType":"YulIdentifier","src":"3596:6:16"},"nativeSrc":"3596:23:16","nodeType":"YulFunctionCall","src":"3596:23:16"},"nativeSrc":"3596:23:16","nodeType":"YulExpressionStatement","src":"3596:23:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3644:3:16","nodeType":"YulIdentifier","src":"3644:3:16"},{"kind":"number","nativeSrc":"3649:4:16","nodeType":"YulLiteral","src":"3649:4:16","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3640:3:16","nodeType":"YulIdentifier","src":"3640:3:16"},"nativeSrc":"3640:14:16","nodeType":"YulFunctionCall","src":"3640:14:16"},{"name":"domainSeparator","nativeSrc":"3656:15:16","nodeType":"YulIdentifier","src":"3656:15:16"}],"functionName":{"name":"mstore","nativeSrc":"3633:6:16","nodeType":"YulIdentifier","src":"3633:6:16"},"nativeSrc":"3633:39:16","nodeType":"YulFunctionCall","src":"3633:39:16"},"nativeSrc":"3633:39:16","nodeType":"YulExpressionStatement","src":"3633:39:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3697:3:16","nodeType":"YulIdentifier","src":"3697:3:16"},{"kind":"number","nativeSrc":"3702:4:16","nodeType":"YulLiteral","src":"3702:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3693:3:16","nodeType":"YulIdentifier","src":"3693:3:16"},"nativeSrc":"3693:14:16","nodeType":"YulFunctionCall","src":"3693:14:16"},{"name":"structHash","nativeSrc":"3709:10:16","nodeType":"YulIdentifier","src":"3709:10:16"}],"functionName":{"name":"mstore","nativeSrc":"3686:6:16","nodeType":"YulIdentifier","src":"3686:6:16"},"nativeSrc":"3686:34:16","nodeType":"YulFunctionCall","src":"3686:34:16"},"nativeSrc":"3686:34:16","nodeType":"YulExpressionStatement","src":"3686:34:16"},{"nativeSrc":"3734:30:16","nodeType":"YulAssignment","src":"3734:30:16","value":{"arguments":[{"name":"ptr","nativeSrc":"3754:3:16","nodeType":"YulIdentifier","src":"3754:3:16"},{"kind":"number","nativeSrc":"3759:4:16","nodeType":"YulLiteral","src":"3759:4:16","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3744:9:16","nodeType":"YulIdentifier","src":"3744:9:16"},"nativeSrc":"3744:20:16","nodeType":"YulFunctionCall","src":"3744:20:16"},"variableNames":[{"name":"digest","nativeSrc":"3734:6:16","nodeType":"YulIdentifier","src":"3734:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3453,"isOffset":false,"isSlot":false,"src":"3734:6:16","valueSize":1},{"declaration":3448,"isOffset":false,"isSlot":false,"src":"3656:15:16","valueSize":1},{"declaration":3450,"isOffset":false,"isSlot":false,"src":"3709:10:16","valueSize":1}],"flags":["memory-safe"],"id":3455,"nodeType":"InlineAssembly","src":"3520:255:16"}]},"documentation":{"id":3446,"nodeType":"StructuredDocumentation","src":"2955:439:16","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3457,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3409:15:16","nodeType":"FunctionDefinition","parameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"domainSeparator","nameLocation":"3433:15:16","nodeType":"VariableDeclaration","scope":3457,"src":"3425:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3425:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"structHash","nameLocation":"3458:10:16","nodeType":"VariableDeclaration","scope":3457,"src":"3450:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3450:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3424:45:16"},"returnParameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"digest","nameLocation":"3501:6:16","nodeType":"VariableDeclaration","scope":3457,"src":"3493:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3493:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3492:16:16"},"scope":3458,"src":"3400:382:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3459,"src":"535:3250:16","usedErrors":[],"usedEvents":[]}],"src":"126:3661:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5064],"Panic":[1268],"SafeCast":[6829]},"id":5065,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3460,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5065,"sourceUnit":1269,"src":"134:35:17","symbolAliases":[{"foreign":{"id":3461,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"142:5:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3464,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5065,"sourceUnit":6830,"src":"171:40:17","symbolAliases":[{"foreign":{"id":3463,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"179:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3465,"nodeType":"StructuredDocumentation","src":"215:75:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5064,"linearizedBaseContracts":[5064],"name":"Math","nameLocation":"300:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3470,"members":[{"id":3466,"name":"Floor","nameLocation":"337:5:17","nodeType":"EnumValue","src":"337:5:17"},{"id":3467,"name":"Ceil","nameLocation":"381:4:17","nodeType":"EnumValue","src":"381:4:17"},{"id":3468,"name":"Trunc","nameLocation":"424:5:17","nodeType":"EnumValue","src":"424:5:17"},{"id":3469,"name":"Expand","nameLocation":"455:6:17","nodeType":"EnumValue","src":"455:6:17"}],"name":"Rounding","nameLocation":"317:8:17","nodeType":"EnumDefinition","src":"312:174:17"},{"body":{"id":3501,"nodeType":"Block","src":"699:146:17","statements":[{"id":3500,"nodeType":"UncheckedBlock","src":"710:128:17","statements":[{"assignments":[3483],"declarations":[{"constant":false,"id":3483,"mutability":"mutable","name":"c","nameLocation":"743:1:17","nodeType":"VariableDeclaration","scope":3500,"src":"735:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3487,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"747:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3485,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"751:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"747:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"735:17:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3488,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"771:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"775:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"771:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3495,"nodeType":"IfStatement","src":"767:28:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"786:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"793:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"785:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3481,"id":3494,"nodeType":"Return","src":"778:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"818:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3497,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"824:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"817:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3481,"id":3499,"nodeType":"Return","src":"810:16:17"}]}]},"documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"494:108:17","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3502,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"617:6:17","nodeType":"FunctionDefinition","parameters":{"id":3476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"a","nameLocation":"632:1:17","nodeType":"VariableDeclaration","scope":3502,"src":"624:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3475,"mutability":"mutable","name":"b","nameLocation":"643:1:17","nodeType":"VariableDeclaration","scope":3502,"src":"635:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"635:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:22:17"},"returnParameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"success","nameLocation":"674:7:17","nodeType":"VariableDeclaration","scope":3502,"src":"669:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3477,"name":"bool","nodeType":"ElementaryTypeName","src":"669:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"result","nameLocation":"691:6:17","nodeType":"VariableDeclaration","scope":3502,"src":"683:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"668:30:17"},"scope":5064,"src":"608:237:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3529,"nodeType":"Block","src":"1061:118:17","statements":[{"id":3528,"nodeType":"UncheckedBlock","src":"1072:100:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"1101:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3515,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"1105:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1101:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3521,"nodeType":"IfStatement","src":"1097:28:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1116:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1123:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1115:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3513,"id":3520,"nodeType":"Return","src":"1108:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1148:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"1154:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3524,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"1158:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1154:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1147:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3513,"id":3527,"nodeType":"Return","src":"1140:20:17"}]}]},"documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"853:111:17","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3530,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"979:6:17","nodeType":"FunctionDefinition","parameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"a","nameLocation":"994:1:17","nodeType":"VariableDeclaration","scope":3530,"src":"986:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"b","nameLocation":"1005:1:17","nodeType":"VariableDeclaration","scope":3530,"src":"997:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"997:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"985:22:17"},"returnParameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"success","nameLocation":"1036:7:17","nodeType":"VariableDeclaration","scope":3530,"src":"1031:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3509,"name":"bool","nodeType":"ElementaryTypeName","src":"1031:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3512,"mutability":"mutable","name":"result","nameLocation":"1053:6:17","nodeType":"VariableDeclaration","scope":3530,"src":"1045:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1045:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1030:30:17"},"scope":5064,"src":"970:209:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3571,"nodeType":"Block","src":"1398:427:17","statements":[{"id":3570,"nodeType":"UncheckedBlock","src":"1409:409:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3542,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"1671:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1671:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3549,"nodeType":"IfStatement","src":"1667:28:17","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1687:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1693:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1686:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3541,"id":3548,"nodeType":"Return","src":"1679:16:17"}},{"assignments":[3551],"declarations":[{"constant":false,"id":3551,"mutability":"mutable","name":"c","nameLocation":"1718:1:17","nodeType":"VariableDeclaration","scope":3570,"src":"1710:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1710:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3555,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"1722:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"1726:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1722:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1710:17:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3556,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"1746:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"1750:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1746:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3559,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"1755:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1746:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3565,"nodeType":"IfStatement","src":"1742:33:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1766:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1773:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1765:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3541,"id":3564,"nodeType":"Return","src":"1758:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1798:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3567,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"1804:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1797:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3541,"id":3569,"nodeType":"Return","src":"1790:16:17"}]}]},"documentation":{"id":3531,"nodeType":"StructuredDocumentation","src":"1187:114:17","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3572,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1316:6:17","nodeType":"FunctionDefinition","parameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"a","nameLocation":"1331:1:17","nodeType":"VariableDeclaration","scope":3572,"src":"1323:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3535,"mutability":"mutable","name":"b","nameLocation":"1342:1:17","nodeType":"VariableDeclaration","scope":3572,"src":"1334:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1334:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:22:17"},"returnParameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"success","nameLocation":"1373:7:17","nodeType":"VariableDeclaration","scope":3572,"src":"1368:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3537,"name":"bool","nodeType":"ElementaryTypeName","src":"1368:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"result","nameLocation":"1390:6:17","nodeType":"VariableDeclaration","scope":3572,"src":"1382:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3539,"name":"uint256","nodeType":"ElementaryTypeName","src":"1382:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1367:30:17"},"scope":5064,"src":"1307:518:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3599,"nodeType":"Block","src":"2045:119:17","statements":[{"id":3598,"nodeType":"UncheckedBlock","src":"2056:101:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3584,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"2085:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2090:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2085:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3591,"nodeType":"IfStatement","src":"2081:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2101:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2100:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3583,"id":3590,"nodeType":"Return","src":"2093:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2133:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3593,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"2139:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3594,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"2143:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2139:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2132:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3583,"id":3597,"nodeType":"Return","src":"2125:20:17"}]}]},"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"1833:115:17","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3600,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1963:6:17","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"a","nameLocation":"1978:1:17","nodeType":"VariableDeclaration","scope":3600,"src":"1970:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1970:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3577,"mutability":"mutable","name":"b","nameLocation":"1989:1:17","nodeType":"VariableDeclaration","scope":3600,"src":"1981:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1981:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1969:22:17"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"success","nameLocation":"2020:7:17","nodeType":"VariableDeclaration","scope":3600,"src":"2015:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3579,"name":"bool","nodeType":"ElementaryTypeName","src":"2015:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"result","nameLocation":"2037:6:17","nodeType":"VariableDeclaration","scope":3600,"src":"2029:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2029:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2014:30:17"},"scope":5064,"src":"1954:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"2394:119:17","statements":[{"id":3626,"nodeType":"UncheckedBlock","src":"2405:101:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3612,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"2434:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2439:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2434:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3619,"nodeType":"IfStatement","src":"2430:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2450:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2449:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3611,"id":3618,"nodeType":"Return","src":"2442:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2482:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"2488:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"2492:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2488:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2481:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3611,"id":3625,"nodeType":"Return","src":"2474:20:17"}]}]},"documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"2172:125:17","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2312:6:17","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"a","nameLocation":"2327:1:17","nodeType":"VariableDeclaration","scope":3628,"src":"2319:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"b","nameLocation":"2338:1:17","nodeType":"VariableDeclaration","scope":3628,"src":"2330:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2330:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2318:22:17"},"returnParameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"success","nameLocation":"2369:7:17","nodeType":"VariableDeclaration","scope":3628,"src":"2364:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3607,"name":"bool","nodeType":"ElementaryTypeName","src":"2364:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"result","nameLocation":"2386:6:17","nodeType":"VariableDeclaration","scope":3628,"src":"2378:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2363:30:17"},"scope":5064,"src":"2303:210:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3654,"nodeType":"Block","src":"2994:214:17","statements":[{"id":3653,"nodeType":"UncheckedBlock","src":"3005:196:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3640,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"3147:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"3153:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3642,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"3157:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3153:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3152:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3647,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"3178:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3645,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"3162:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3171:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"3162:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3162:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3152:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3151:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3147:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3639,"id":3652,"nodeType":"Return","src":"3140:49:17"}]}]},"documentation":{"id":3629,"nodeType":"StructuredDocumentation","src":"2521:380:17","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3655,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2916:7:17","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"condition","nameLocation":"2929:9:17","nodeType":"VariableDeclaration","scope":3655,"src":"2924:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3630,"name":"bool","nodeType":"ElementaryTypeName","src":"2924:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"a","nameLocation":"2948:1:17","nodeType":"VariableDeclaration","scope":3655,"src":"2940:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2940:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"b","nameLocation":"2959:1:17","nodeType":"VariableDeclaration","scope":3655,"src":"2951:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3634,"name":"uint256","nodeType":"ElementaryTypeName","src":"2951:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2923:38:17"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3655,"src":"2985:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"2985:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2984:9:17"},"scope":5064,"src":"2907:301:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3673,"nodeType":"Block","src":"3350:46:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"3376:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3667,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"3380:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3376:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3669,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"3383:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3670,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"3386:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3665,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"3368:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3368:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3664,"id":3672,"nodeType":"Return","src":"3361:27:17"}]},"documentation":{"id":3656,"nodeType":"StructuredDocumentation","src":"3216:61:17","text":" @dev Returns the largest of two numbers."},"id":3674,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3292:3:17","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"a","nameLocation":"3304:1:17","nodeType":"VariableDeclaration","scope":3674,"src":"3296:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"3296:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3660,"mutability":"mutable","name":"b","nameLocation":"3315:1:17","nodeType":"VariableDeclaration","scope":3674,"src":"3307:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"3307:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3295:22:17"},"returnParameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3674,"src":"3341:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"3341:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3340:9:17"},"scope":5064,"src":"3283:113:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3692,"nodeType":"Block","src":"3539:46:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"3565:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3686,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"3569:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3565:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"3572:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3689,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"3575:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3684,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"3557:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3557:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3683,"id":3691,"nodeType":"Return","src":"3550:27:17"}]},"documentation":{"id":3675,"nodeType":"StructuredDocumentation","src":"3404:62:17","text":" @dev Returns the smallest of two numbers."},"id":3693,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3481:3:17","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"a","nameLocation":"3493:1:17","nodeType":"VariableDeclaration","scope":3693,"src":"3485:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"3485:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"b","nameLocation":"3504:1:17","nodeType":"VariableDeclaration","scope":3693,"src":"3496:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"3496:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:22:17"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3693,"src":"3530:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"3530:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3529:9:17"},"scope":5064,"src":"3472:113:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3715,"nodeType":"Block","src":"3775:85:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"3832:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3836:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3832:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3831:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3707,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"3842:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3708,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3846:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3710,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3841:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3851:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3841:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3831:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3702,"id":3714,"nodeType":"Return","src":"3824:28:17"}]},"documentation":{"id":3694,"nodeType":"StructuredDocumentation","src":"3593:105:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3716,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3713:7:17","nodeType":"FunctionDefinition","parameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3696,"mutability":"mutable","name":"a","nameLocation":"3729:1:17","nodeType":"VariableDeclaration","scope":3716,"src":"3721:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3721:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3698,"mutability":"mutable","name":"b","nameLocation":"3740:1:17","nodeType":"VariableDeclaration","scope":3716,"src":"3732:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"3732:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3720:22:17"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3716,"src":"3766:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"3766:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3765:9:17"},"scope":5064,"src":"3704:156:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3756,"nodeType":"Block","src":"4160:647:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3726,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"4175:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4180:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4175:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3737,"nodeType":"IfStatement","src":"4171:153:17","trueBody":{"id":3736,"nodeType":"Block","src":"4183:141:17","statements":[{"expression":{"arguments":[{"expression":{"id":3732,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"4289:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4295:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"4289:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3729,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"4277:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"4277:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4277:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3735,"nodeType":"ExpressionStatement","src":"4277:35:17"}]}},{"id":3755,"nodeType":"UncheckedBlock","src":"4714:86:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"4762:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4766:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4762:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3738,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"4746:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4755:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"4746:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4746:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3744,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"4773:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4777:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4773:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4772:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3748,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"4782:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4772:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4786:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4772:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4771:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4746:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3725,"id":3754,"nodeType":"Return","src":"4739:49:17"}]}]},"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"3868:215:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3757,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"4098:7:17","nodeType":"FunctionDefinition","parameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"a","nameLocation":"4114:1:17","nodeType":"VariableDeclaration","scope":3757,"src":"4106:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"4106:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"b","nameLocation":"4125:1:17","nodeType":"VariableDeclaration","scope":3757,"src":"4117:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"4117:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4105:22:17"},"returnParameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3757,"src":"4151:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3723,"name":"uint256","nodeType":"ElementaryTypeName","src":"4151:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4150:9:17"},"scope":5064,"src":"4089:718:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3893,"nodeType":"Block","src":"5237:4207:17","statements":[{"id":3892,"nodeType":"UncheckedBlock","src":"5248:4189:17","statements":[{"assignments":[3770],"declarations":[{"constant":false,"id":3770,"mutability":"mutable","name":"prod0","nameLocation":"5589:5:17","nodeType":"VariableDeclaration","scope":3892,"src":"5581:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"5581:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3774,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"5597:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3772,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"5601:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5597:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5581:21:17"},{"assignments":[3776],"declarations":[{"constant":false,"id":3776,"mutability":"mutable","name":"prod1","nameLocation":"5670:5:17","nodeType":"VariableDeclaration","scope":3892,"src":"5662:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"5662:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3777,"nodeType":"VariableDeclarationStatement","src":"5662:13:17"},{"AST":{"nativeSrc":"5743:125:17","nodeType":"YulBlock","src":"5743:125:17","statements":[{"nativeSrc":"5762:30:17","nodeType":"YulVariableDeclaration","src":"5762:30:17","value":{"arguments":[{"name":"x","nativeSrc":"5779:1:17","nodeType":"YulIdentifier","src":"5779:1:17"},{"name":"y","nativeSrc":"5782:1:17","nodeType":"YulIdentifier","src":"5782:1:17"},{"arguments":[{"kind":"number","nativeSrc":"5789:1:17","nodeType":"YulLiteral","src":"5789:1:17","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5785:3:17","nodeType":"YulIdentifier","src":"5785:3:17"},"nativeSrc":"5785:6:17","nodeType":"YulFunctionCall","src":"5785:6:17"}],"functionName":{"name":"mulmod","nativeSrc":"5772:6:17","nodeType":"YulIdentifier","src":"5772:6:17"},"nativeSrc":"5772:20:17","nodeType":"YulFunctionCall","src":"5772:20:17"},"variables":[{"name":"mm","nativeSrc":"5766:2:17","nodeType":"YulTypedName","src":"5766:2:17","type":""}]},{"nativeSrc":"5810:43:17","nodeType":"YulAssignment","src":"5810:43:17","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5827:2:17","nodeType":"YulIdentifier","src":"5827:2:17"},{"name":"prod0","nativeSrc":"5831:5:17","nodeType":"YulIdentifier","src":"5831:5:17"}],"functionName":{"name":"sub","nativeSrc":"5823:3:17","nodeType":"YulIdentifier","src":"5823:3:17"},"nativeSrc":"5823:14:17","nodeType":"YulFunctionCall","src":"5823:14:17"},{"arguments":[{"name":"mm","nativeSrc":"5842:2:17","nodeType":"YulIdentifier","src":"5842:2:17"},{"name":"prod0","nativeSrc":"5846:5:17","nodeType":"YulIdentifier","src":"5846:5:17"}],"functionName":{"name":"lt","nativeSrc":"5839:2:17","nodeType":"YulIdentifier","src":"5839:2:17"},"nativeSrc":"5839:13:17","nodeType":"YulFunctionCall","src":"5839:13:17"}],"functionName":{"name":"sub","nativeSrc":"5819:3:17","nodeType":"YulIdentifier","src":"5819:3:17"},"nativeSrc":"5819:34:17","nodeType":"YulFunctionCall","src":"5819:34:17"},"variableNames":[{"name":"prod1","nativeSrc":"5810:5:17","nodeType":"YulIdentifier","src":"5810:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3770,"isOffset":false,"isSlot":false,"src":"5831:5:17","valueSize":1},{"declaration":3770,"isOffset":false,"isSlot":false,"src":"5846:5:17","valueSize":1},{"declaration":3776,"isOffset":false,"isSlot":false,"src":"5810:5:17","valueSize":1},{"declaration":3760,"isOffset":false,"isSlot":false,"src":"5779:1:17","valueSize":1},{"declaration":3762,"isOffset":false,"isSlot":false,"src":"5782:1:17","valueSize":1}],"id":3778,"nodeType":"InlineAssembly","src":"5734:134:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3779,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"5952:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5961:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5952:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3787,"nodeType":"IfStatement","src":"5948:373:17","trueBody":{"id":3786,"nodeType":"Block","src":"5964:357:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3782,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"6286:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3783,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"6294:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6286:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3768,"id":3785,"nodeType":"Return","src":"6279:26:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3788,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"6434:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3789,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"6449:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6434:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3806,"nodeType":"IfStatement","src":"6430:145:17","trueBody":{"id":3805,"nodeType":"Block","src":"6456:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"6495:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6510:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6495:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3798,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6513:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6519:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"6513:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3800,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6537:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6543:14:17","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1231,"src":"6537:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3794,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"6487:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6487:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3791,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6475:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6481:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"6475:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6475:84:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3804,"nodeType":"ExpressionStatement","src":"6475:84:17"}]}},{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"remainder","nameLocation":"6845:9:17","nodeType":"VariableDeclaration","scope":3892,"src":"6837:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"6837:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3809,"nodeType":"VariableDeclarationStatement","src":"6837:17:17"},{"AST":{"nativeSrc":"6878:298:17","nodeType":"YulBlock","src":"6878:298:17","statements":[{"nativeSrc":"6949:38:17","nodeType":"YulAssignment","src":"6949:38:17","value":{"arguments":[{"name":"x","nativeSrc":"6969:1:17","nodeType":"YulIdentifier","src":"6969:1:17"},{"name":"y","nativeSrc":"6972:1:17","nodeType":"YulIdentifier","src":"6972:1:17"},{"name":"denominator","nativeSrc":"6975:11:17","nodeType":"YulIdentifier","src":"6975:11:17"}],"functionName":{"name":"mulmod","nativeSrc":"6962:6:17","nodeType":"YulIdentifier","src":"6962:6:17"},"nativeSrc":"6962:25:17","nodeType":"YulFunctionCall","src":"6962:25:17"},"variableNames":[{"name":"remainder","nativeSrc":"6949:9:17","nodeType":"YulIdentifier","src":"6949:9:17"}]},{"nativeSrc":"7072:41:17","nodeType":"YulAssignment","src":"7072:41:17","value":{"arguments":[{"name":"prod1","nativeSrc":"7085:5:17","nodeType":"YulIdentifier","src":"7085:5:17"},{"arguments":[{"name":"remainder","nativeSrc":"7095:9:17","nodeType":"YulIdentifier","src":"7095:9:17"},{"name":"prod0","nativeSrc":"7106:5:17","nodeType":"YulIdentifier","src":"7106:5:17"}],"functionName":{"name":"gt","nativeSrc":"7092:2:17","nodeType":"YulIdentifier","src":"7092:2:17"},"nativeSrc":"7092:20:17","nodeType":"YulFunctionCall","src":"7092:20:17"}],"functionName":{"name":"sub","nativeSrc":"7081:3:17","nodeType":"YulIdentifier","src":"7081:3:17"},"nativeSrc":"7081:32:17","nodeType":"YulFunctionCall","src":"7081:32:17"},"variableNames":[{"name":"prod1","nativeSrc":"7072:5:17","nodeType":"YulIdentifier","src":"7072:5:17"}]},{"nativeSrc":"7131:30:17","nodeType":"YulAssignment","src":"7131:30:17","value":{"arguments":[{"name":"prod0","nativeSrc":"7144:5:17","nodeType":"YulIdentifier","src":"7144:5:17"},{"name":"remainder","nativeSrc":"7151:9:17","nodeType":"YulIdentifier","src":"7151:9:17"}],"functionName":{"name":"sub","nativeSrc":"7140:3:17","nodeType":"YulIdentifier","src":"7140:3:17"},"nativeSrc":"7140:21:17","nodeType":"YulFunctionCall","src":"7140:21:17"},"variableNames":[{"name":"prod0","nativeSrc":"7131:5:17","nodeType":"YulIdentifier","src":"7131:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3764,"isOffset":false,"isSlot":false,"src":"6975:11:17","valueSize":1},{"declaration":3770,"isOffset":false,"isSlot":false,"src":"7106:5:17","valueSize":1},{"declaration":3770,"isOffset":false,"isSlot":false,"src":"7131:5:17","valueSize":1},{"declaration":3770,"isOffset":false,"isSlot":false,"src":"7144:5:17","valueSize":1},{"declaration":3776,"isOffset":false,"isSlot":false,"src":"7072:5:17","valueSize":1},{"declaration":3776,"isOffset":false,"isSlot":false,"src":"7085:5:17","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"6949:9:17","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"7095:9:17","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"7151:9:17","valueSize":1},{"declaration":3760,"isOffset":false,"isSlot":false,"src":"6969:1:17","valueSize":1},{"declaration":3762,"isOffset":false,"isSlot":false,"src":"6972:1:17","valueSize":1}],"id":3810,"nodeType":"InlineAssembly","src":"6869:307:17"},{"assignments":[3812],"declarations":[{"constant":false,"id":3812,"mutability":"mutable","name":"twos","nameLocation":"7393:4:17","nodeType":"VariableDeclaration","scope":3892,"src":"7385:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"7385:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3819,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"7400:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7415:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3815,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"7419:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7415:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7414:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7400:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7385:46:17"},{"AST":{"nativeSrc":"7455:375:17","nodeType":"YulBlock","src":"7455:375:17","statements":[{"nativeSrc":"7522:37:17","nodeType":"YulAssignment","src":"7522:37:17","value":{"arguments":[{"name":"denominator","nativeSrc":"7541:11:17","nodeType":"YulIdentifier","src":"7541:11:17"},{"name":"twos","nativeSrc":"7554:4:17","nodeType":"YulIdentifier","src":"7554:4:17"}],"functionName":{"name":"div","nativeSrc":"7537:3:17","nodeType":"YulIdentifier","src":"7537:3:17"},"nativeSrc":"7537:22:17","nodeType":"YulFunctionCall","src":"7537:22:17"},"variableNames":[{"name":"denominator","nativeSrc":"7522:11:17","nodeType":"YulIdentifier","src":"7522:11:17"}]},{"nativeSrc":"7629:25:17","nodeType":"YulAssignment","src":"7629:25:17","value":{"arguments":[{"name":"prod0","nativeSrc":"7642:5:17","nodeType":"YulIdentifier","src":"7642:5:17"},{"name":"twos","nativeSrc":"7649:4:17","nodeType":"YulIdentifier","src":"7649:4:17"}],"functionName":{"name":"div","nativeSrc":"7638:3:17","nodeType":"YulIdentifier","src":"7638:3:17"},"nativeSrc":"7638:16:17","nodeType":"YulFunctionCall","src":"7638:16:17"},"variableNames":[{"name":"prod0","nativeSrc":"7629:5:17","nodeType":"YulIdentifier","src":"7629:5:17"}]},{"nativeSrc":"7776:39:17","nodeType":"YulAssignment","src":"7776:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7796:1:17","nodeType":"YulLiteral","src":"7796:1:17","type":"","value":"0"},{"name":"twos","nativeSrc":"7799:4:17","nodeType":"YulIdentifier","src":"7799:4:17"}],"functionName":{"name":"sub","nativeSrc":"7792:3:17","nodeType":"YulIdentifier","src":"7792:3:17"},"nativeSrc":"7792:12:17","nodeType":"YulFunctionCall","src":"7792:12:17"},{"name":"twos","nativeSrc":"7806:4:17","nodeType":"YulIdentifier","src":"7806:4:17"}],"functionName":{"name":"div","nativeSrc":"7788:3:17","nodeType":"YulIdentifier","src":"7788:3:17"},"nativeSrc":"7788:23:17","nodeType":"YulFunctionCall","src":"7788:23:17"},{"kind":"number","nativeSrc":"7813:1:17","nodeType":"YulLiteral","src":"7813:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7784:3:17","nodeType":"YulIdentifier","src":"7784:3:17"},"nativeSrc":"7784:31:17","nodeType":"YulFunctionCall","src":"7784:31:17"},"variableNames":[{"name":"twos","nativeSrc":"7776:4:17","nodeType":"YulIdentifier","src":"7776:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3764,"isOffset":false,"isSlot":false,"src":"7522:11:17","valueSize":1},{"declaration":3764,"isOffset":false,"isSlot":false,"src":"7541:11:17","valueSize":1},{"declaration":3770,"isOffset":false,"isSlot":false,"src":"7629:5:17","valueSize":1},{"declaration":3770,"isOffset":false,"isSlot":false,"src":"7642:5:17","valueSize":1},{"declaration":3812,"isOffset":false,"isSlot":false,"src":"7554:4:17","valueSize":1},{"declaration":3812,"isOffset":false,"isSlot":false,"src":"7649:4:17","valueSize":1},{"declaration":3812,"isOffset":false,"isSlot":false,"src":"7776:4:17","valueSize":1},{"declaration":3812,"isOffset":false,"isSlot":false,"src":"7799:4:17","valueSize":1},{"declaration":3812,"isOffset":false,"isSlot":false,"src":"7806:4:17","valueSize":1}],"id":3820,"nodeType":"InlineAssembly","src":"7446:384:17"},{"expression":{"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3821,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"7899:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3822,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"7908:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3823,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"7916:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7908:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3826,"nodeType":"ExpressionStatement","src":"7899:21:17"},{"assignments":[3828],"declarations":[{"constant":false,"id":3828,"mutability":"mutable","name":"inverse","nameLocation":"8268:7:17","nodeType":"VariableDeclaration","scope":3892,"src":"8260:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"8260:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3835,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8279:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3830,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8283:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8279:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8278:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8298:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8278:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8260:39:17"},{"expression":{"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3836,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8520:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8531:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3838,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8535:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3839,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8549:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8535:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8531:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8520:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3843,"nodeType":"ExpressionStatement","src":"8520:36:17"},{"expression":{"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3844,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8591:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8602:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8606:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3847,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8620:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8606:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8602:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8591:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3851,"nodeType":"ExpressionStatement","src":"8591:36:17"},{"expression":{"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3852,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8675:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3854,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8679:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3855,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8693:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8679:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8675:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8664:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3859,"nodeType":"ExpressionStatement","src":"8664:36:17"},{"expression":{"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3860,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8736:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8751:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3863,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8765:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8751:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8747:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8736:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3867,"nodeType":"ExpressionStatement","src":"8736:36:17"},{"expression":{"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3868,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8810:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8821:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3870,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8825:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3871,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8839:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8825:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8821:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8810:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3875,"nodeType":"ExpressionStatement","src":"8810:36:17"},{"expression":{"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3876,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8885:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8896:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8900:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3879,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8900:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8896:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8885:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3883,"nodeType":"ExpressionStatement","src":"8885:36:17"},{"expression":{"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3884,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"9373:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"9382:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3886,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"9390:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9382:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9373:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3889,"nodeType":"ExpressionStatement","src":"9373:24:17"},{"expression":{"id":3890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"9419:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3768,"id":3891,"nodeType":"Return","src":"9412:13:17"}]}]},"documentation":{"id":3758,"nodeType":"StructuredDocumentation","src":"4815:318:17","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3894,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5148:6:17","nodeType":"FunctionDefinition","parameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3760,"mutability":"mutable","name":"x","nameLocation":"5163:1:17","nodeType":"VariableDeclaration","scope":3894,"src":"5155:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"5155:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3762,"mutability":"mutable","name":"y","nameLocation":"5174:1:17","nodeType":"VariableDeclaration","scope":3894,"src":"5166:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"5166:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"denominator","nameLocation":"5185:11:17","nodeType":"VariableDeclaration","scope":3894,"src":"5177:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"5177:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5154:43:17"},"returnParameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"result","nameLocation":"5229:6:17","nodeType":"VariableDeclaration","scope":3894,"src":"5221:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"5221:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5220:16:17"},"scope":5064,"src":"5139:4305:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3930,"nodeType":"Block","src":"9688:130:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3910,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"9713:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3911,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"9716:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3912,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"9719:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3909,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3894,3931],"referencedDeclaration":3894,"src":"9706:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9706:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3917,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"9767:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}],"id":3916,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"9750:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3470_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9750:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3920,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"9787:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3921,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"9790:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3922,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"9793:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3919,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9780:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9808:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9780:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9750:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3914,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"9734:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9743:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"9734:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9734:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9706:104:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3908,"id":3929,"nodeType":"Return","src":"9699:111:17"}]},"documentation":{"id":3895,"nodeType":"StructuredDocumentation","src":"9452:120:17","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3931,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9587:6:17","nodeType":"FunctionDefinition","parameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"x","nameLocation":"9602:1:17","nodeType":"VariableDeclaration","scope":3931,"src":"9594:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"9594:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"y","nameLocation":"9613:1:17","nodeType":"VariableDeclaration","scope":3931,"src":"9605:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"denominator","nameLocation":"9624:11:17","nodeType":"VariableDeclaration","scope":3931,"src":"9616:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"9616:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3904,"mutability":"mutable","name":"rounding","nameLocation":"9646:8:17","nodeType":"VariableDeclaration","scope":3931,"src":"9637:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"},"typeName":{"id":3903,"nodeType":"UserDefinedTypeName","pathNode":{"id":3902,"name":"Rounding","nameLocations":["9637:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"9637:8:17"},"referencedDeclaration":3470,"src":"9637:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9593:62:17"},"returnParameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3931,"src":"9679:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9678:9:17"},"scope":5064,"src":"9578:240:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4027,"nodeType":"Block","src":"10465:1895:17","statements":[{"id":4026,"nodeType":"UncheckedBlock","src":"10476:1877:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"10505:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10510:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10505:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3946,"nodeType":"IfStatement","src":"10501:20:17","trueBody":{"expression":{"hexValue":"30","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10520:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3940,"id":3945,"nodeType":"Return","src":"10513:8:17"}},{"assignments":[3948],"declarations":[{"constant":false,"id":3948,"mutability":"mutable","name":"remainder","nameLocation":"11010:9:17","nodeType":"VariableDeclaration","scope":4026,"src":"11002:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3947,"name":"uint256","nodeType":"ElementaryTypeName","src":"11002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3952,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3949,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"11022:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3950,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"11026:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11022:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11002:25:17"},{"assignments":[3954],"declarations":[{"constant":false,"id":3954,"mutability":"mutable","name":"gcd","nameLocation":"11050:3:17","nodeType":"VariableDeclaration","scope":4026,"src":"11042:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"11042:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3956,"initialValue":{"id":3955,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"11056:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11042:15:17"},{"assignments":[3958],"declarations":[{"constant":false,"id":3958,"mutability":"mutable","name":"x","nameLocation":"11205:1:17","nodeType":"VariableDeclaration","scope":4026,"src":"11198:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3957,"name":"int256","nodeType":"ElementaryTypeName","src":"11198:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3960,"initialValue":{"hexValue":"30","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11209:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11198:12:17"},{"assignments":[3962],"declarations":[{"constant":false,"id":3962,"mutability":"mutable","name":"y","nameLocation":"11232:1:17","nodeType":"VariableDeclaration","scope":4026,"src":"11225:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3961,"name":"int256","nodeType":"ElementaryTypeName","src":"11225:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3964,"initialValue":{"hexValue":"31","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11236:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"11225:12:17"},{"body":{"id":4001,"nodeType":"Block","src":"11277:902:17","statements":[{"assignments":[3969],"declarations":[{"constant":false,"id":3969,"mutability":"mutable","name":"quotient","nameLocation":"11304:8:17","nodeType":"VariableDeclaration","scope":4001,"src":"11296:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"11296:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3973,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"11315:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3971,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"11321:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11315:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11296:34:17"},{"expression":{"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3974,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"11352:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3975,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"11357:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3976,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11351:16:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3977,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"11459:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3978,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"11708:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3979,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"11714:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3980,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"11726:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11714:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11708:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3983,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11370:383:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11351:402:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3985,"nodeType":"ExpressionStatement","src":"11351:402:17"},{"expression":{"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3986,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"11775:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3987,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"11778:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3988,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11774:6:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3989,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"11862:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"12120:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3991,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"12124:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3994,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"12135:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12128:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3992,"name":"int256","nodeType":"ElementaryTypeName","src":"12128:6:17","typeDescriptions":{}}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12128:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12124:20:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12120:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11783:380:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11774:389:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4000,"nodeType":"ExpressionStatement","src":"11774:389:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3965,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"11261:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11261:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4002,"nodeType":"WhileStatement","src":"11254:925:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4003,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"12199:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12206:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12199:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4008,"nodeType":"IfStatement","src":"12195:22:17","trueBody":{"expression":{"hexValue":"30","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12216:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3940,"id":4007,"nodeType":"Return","src":"12209:8:17"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4010,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"12269:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12273:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12269:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"12276:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12288:2:17","subExpression":{"id":4016,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"12289:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12280:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:17","typeDescriptions":{}}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12280:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12276:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4022,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"12301:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12293:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"12293:7:17","typeDescriptions":{}}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12293:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4009,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"12261:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12261:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3940,"id":4025,"nodeType":"Return","src":"12254:50:17"}]}]},"documentation":{"id":3932,"nodeType":"StructuredDocumentation","src":"9826:563:17","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4028,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10404:6:17","nodeType":"FunctionDefinition","parameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"a","nameLocation":"10419:1:17","nodeType":"VariableDeclaration","scope":4028,"src":"10411:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"10411:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3936,"mutability":"mutable","name":"n","nameLocation":"10430:1:17","nodeType":"VariableDeclaration","scope":4028,"src":"10422:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"10422:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10410:22:17"},"returnParameters":{"id":3940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4028,"src":"10456:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"10456:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10455:9:17"},"scope":5064,"src":"10395:1965:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4048,"nodeType":"Block","src":"12971:86:17","statements":[{"id":4047,"nodeType":"UncheckedBlock","src":"12982:68:17","statements":[{"expression":{"arguments":[{"id":4040,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"13026:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4041,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"13029:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13033:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13029:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4044,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"13036:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4038,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"13014:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5064_$","typeString":"type(library Math)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13019:6:17","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4085,"src":"13014:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13014:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4037,"id":4046,"nodeType":"Return","src":"13007:31:17"}]}]},"documentation":{"id":4029,"nodeType":"StructuredDocumentation","src":"12368:522:17","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12905:11:17","nodeType":"FunctionDefinition","parameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"a","nameLocation":"12925:1:17","nodeType":"VariableDeclaration","scope":4049,"src":"12917:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4030,"name":"uint256","nodeType":"ElementaryTypeName","src":"12917:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4033,"mutability":"mutable","name":"p","nameLocation":"12936:1:17","nodeType":"VariableDeclaration","scope":4049,"src":"12928:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"12928:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12916:22:17"},"returnParameters":{"id":4037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4049,"src":"12962:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4035,"name":"uint256","nodeType":"ElementaryTypeName","src":"12962:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12961:9:17"},"scope":5064,"src":"12896:161:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4084,"nodeType":"Block","src":"13842:180:17","statements":[{"assignments":[4062,4064],"declarations":[{"constant":false,"id":4062,"mutability":"mutable","name":"success","nameLocation":"13859:7:17","nodeType":"VariableDeclaration","scope":4084,"src":"13854:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4061,"name":"bool","nodeType":"ElementaryTypeName","src":"13854:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4064,"mutability":"mutable","name":"result","nameLocation":"13876:6:17","nodeType":"VariableDeclaration","scope":4084,"src":"13868:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"13868:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4070,"initialValue":{"arguments":[{"id":4066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"13896:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4067,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"13899:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4068,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"13902:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4065,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4109,4191],"referencedDeclaration":4109,"src":"13886:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13886:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13853:51:17"},{"condition":{"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13919:8:17","subExpression":{"id":4071,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"13920:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4081,"nodeType":"IfStatement","src":"13915:76:17","trueBody":{"id":4080,"nodeType":"Block","src":"13929:62:17","statements":[{"expression":{"arguments":[{"expression":{"id":4076,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"13956:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13962:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"13956:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4073,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"13944:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13950:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"13944:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13944:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4079,"nodeType":"ExpressionStatement","src":"13944:35:17"}]}},{"expression":{"id":4082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"14008:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4060,"id":4083,"nodeType":"Return","src":"14001:13:17"}]},"documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"13065:690:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4085,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13770:6:17","nodeType":"FunctionDefinition","parameters":{"id":4057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"b","nameLocation":"13785:1:17","nodeType":"VariableDeclaration","scope":4085,"src":"13777:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"13777:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4054,"mutability":"mutable","name":"e","nameLocation":"13796:1:17","nodeType":"VariableDeclaration","scope":4085,"src":"13788:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"13788:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4056,"mutability":"mutable","name":"m","nameLocation":"13807:1:17","nodeType":"VariableDeclaration","scope":4085,"src":"13799:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"13799:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13776:33:17"},"returnParameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4085,"src":"13833:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"13833:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13832:9:17"},"scope":5064,"src":"13761:261:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4108,"nodeType":"Block","src":"14888:1517:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4099,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"14903:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14908:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14903:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4106,"nodeType":"IfStatement","src":"14899:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14919:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14926:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14918:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4098,"id":4105,"nodeType":"Return","src":"14911:17:17"}},{"AST":{"nativeSrc":"14964:1434:17","nodeType":"YulBlock","src":"14964:1434:17","statements":[{"nativeSrc":"14979:22:17","nodeType":"YulVariableDeclaration","src":"14979:22:17","value":{"arguments":[{"kind":"number","nativeSrc":"14996:4:17","nodeType":"YulLiteral","src":"14996:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14990:5:17","nodeType":"YulIdentifier","src":"14990:5:17"},"nativeSrc":"14990:11:17","nodeType":"YulFunctionCall","src":"14990:11:17"},"variables":[{"name":"ptr","nativeSrc":"14983:3:17","nodeType":"YulTypedName","src":"14983:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15918:3:17","nodeType":"YulIdentifier","src":"15918:3:17"},{"kind":"number","nativeSrc":"15923:4:17","nodeType":"YulLiteral","src":"15923:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15911:6:17","nodeType":"YulIdentifier","src":"15911:6:17"},"nativeSrc":"15911:17:17","nodeType":"YulFunctionCall","src":"15911:17:17"},"nativeSrc":"15911:17:17","nodeType":"YulExpressionStatement","src":"15911:17:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15953:3:17","nodeType":"YulIdentifier","src":"15953:3:17"},{"kind":"number","nativeSrc":"15958:4:17","nodeType":"YulLiteral","src":"15958:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15949:3:17","nodeType":"YulIdentifier","src":"15949:3:17"},"nativeSrc":"15949:14:17","nodeType":"YulFunctionCall","src":"15949:14:17"},{"kind":"number","nativeSrc":"15965:4:17","nodeType":"YulLiteral","src":"15965:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15942:6:17","nodeType":"YulIdentifier","src":"15942:6:17"},"nativeSrc":"15942:28:17","nodeType":"YulFunctionCall","src":"15942:28:17"},"nativeSrc":"15942:28:17","nodeType":"YulExpressionStatement","src":"15942:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15995:3:17","nodeType":"YulIdentifier","src":"15995:3:17"},{"kind":"number","nativeSrc":"16000:4:17","nodeType":"YulLiteral","src":"16000:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15991:3:17","nodeType":"YulIdentifier","src":"15991:3:17"},"nativeSrc":"15991:14:17","nodeType":"YulFunctionCall","src":"15991:14:17"},{"kind":"number","nativeSrc":"16007:4:17","nodeType":"YulLiteral","src":"16007:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15984:6:17","nodeType":"YulIdentifier","src":"15984:6:17"},"nativeSrc":"15984:28:17","nodeType":"YulFunctionCall","src":"15984:28:17"},"nativeSrc":"15984:28:17","nodeType":"YulExpressionStatement","src":"15984:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"16037:3:17","nodeType":"YulIdentifier","src":"16037:3:17"},{"kind":"number","nativeSrc":"16042:4:17","nodeType":"YulLiteral","src":"16042:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"16033:3:17","nodeType":"YulIdentifier","src":"16033:3:17"},"nativeSrc":"16033:14:17","nodeType":"YulFunctionCall","src":"16033:14:17"},{"name":"b","nativeSrc":"16049:1:17","nodeType":"YulIdentifier","src":"16049:1:17"}],"functionName":{"name":"mstore","nativeSrc":"16026:6:17","nodeType":"YulIdentifier","src":"16026:6:17"},"nativeSrc":"16026:25:17","nodeType":"YulFunctionCall","src":"16026:25:17"},"nativeSrc":"16026:25:17","nodeType":"YulExpressionStatement","src":"16026:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"16076:3:17","nodeType":"YulIdentifier","src":"16076:3:17"},{"kind":"number","nativeSrc":"16081:4:17","nodeType":"YulLiteral","src":"16081:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"16072:3:17","nodeType":"YulIdentifier","src":"16072:3:17"},"nativeSrc":"16072:14:17","nodeType":"YulFunctionCall","src":"16072:14:17"},{"name":"e","nativeSrc":"16088:1:17","nodeType":"YulIdentifier","src":"16088:1:17"}],"functionName":{"name":"mstore","nativeSrc":"16065:6:17","nodeType":"YulIdentifier","src":"16065:6:17"},"nativeSrc":"16065:25:17","nodeType":"YulFunctionCall","src":"16065:25:17"},"nativeSrc":"16065:25:17","nodeType":"YulExpressionStatement","src":"16065:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"16115:3:17","nodeType":"YulIdentifier","src":"16115:3:17"},{"kind":"number","nativeSrc":"16120:4:17","nodeType":"YulLiteral","src":"16120:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"16111:3:17","nodeType":"YulIdentifier","src":"16111:3:17"},"nativeSrc":"16111:14:17","nodeType":"YulFunctionCall","src":"16111:14:17"},{"name":"m","nativeSrc":"16127:1:17","nodeType":"YulIdentifier","src":"16127:1:17"}],"functionName":{"name":"mstore","nativeSrc":"16104:6:17","nodeType":"YulIdentifier","src":"16104:6:17"},"nativeSrc":"16104:25:17","nodeType":"YulFunctionCall","src":"16104:25:17"},"nativeSrc":"16104:25:17","nodeType":"YulExpressionStatement","src":"16104:25:17"},{"nativeSrc":"16295:57:17","nodeType":"YulAssignment","src":"16295:57:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"16317:3:17","nodeType":"YulIdentifier","src":"16317:3:17"},"nativeSrc":"16317:5:17","nodeType":"YulFunctionCall","src":"16317:5:17"},{"kind":"number","nativeSrc":"16324:4:17","nodeType":"YulLiteral","src":"16324:4:17","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"16330:3:17","nodeType":"YulIdentifier","src":"16330:3:17"},{"kind":"number","nativeSrc":"16335:4:17","nodeType":"YulLiteral","src":"16335:4:17","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"16341:4:17","nodeType":"YulLiteral","src":"16341:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"16347:4:17","nodeType":"YulLiteral","src":"16347:4:17","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"16306:10:17","nodeType":"YulIdentifier","src":"16306:10:17"},"nativeSrc":"16306:46:17","nodeType":"YulFunctionCall","src":"16306:46:17"},"variableNames":[{"name":"success","nativeSrc":"16295:7:17","nodeType":"YulIdentifier","src":"16295:7:17"}]},{"nativeSrc":"16366:21:17","nodeType":"YulAssignment","src":"16366:21:17","value":{"arguments":[{"kind":"number","nativeSrc":"16382:4:17","nodeType":"YulLiteral","src":"16382:4:17","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16376:5:17","nodeType":"YulIdentifier","src":"16376:5:17"},"nativeSrc":"16376:11:17","nodeType":"YulFunctionCall","src":"16376:11:17"},"variableNames":[{"name":"result","nativeSrc":"16366:6:17","nodeType":"YulIdentifier","src":"16366:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4088,"isOffset":false,"isSlot":false,"src":"16049:1:17","valueSize":1},{"declaration":4090,"isOffset":false,"isSlot":false,"src":"16088:1:17","valueSize":1},{"declaration":4092,"isOffset":false,"isSlot":false,"src":"16127:1:17","valueSize":1},{"declaration":4097,"isOffset":false,"isSlot":false,"src":"16366:6:17","valueSize":1},{"declaration":4095,"isOffset":false,"isSlot":false,"src":"16295:7:17","valueSize":1}],"flags":["memory-safe"],"id":4107,"nodeType":"InlineAssembly","src":"14939:1459:17"}]},"documentation":{"id":4086,"nodeType":"StructuredDocumentation","src":"14030:747:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4109,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14792:9:17","nodeType":"FunctionDefinition","parameters":{"id":4093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"b","nameLocation":"14810:1:17","nodeType":"VariableDeclaration","scope":4109,"src":"14802:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"14802:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4090,"mutability":"mutable","name":"e","nameLocation":"14821:1:17","nodeType":"VariableDeclaration","scope":4109,"src":"14813:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"14813:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4092,"mutability":"mutable","name":"m","nameLocation":"14832:1:17","nodeType":"VariableDeclaration","scope":4109,"src":"14824:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14801:33:17"},"returnParameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"mutability":"mutable","name":"success","nameLocation":"14863:7:17","nodeType":"VariableDeclaration","scope":4109,"src":"14858:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4094,"name":"bool","nodeType":"ElementaryTypeName","src":"14858:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4097,"mutability":"mutable","name":"result","nameLocation":"14880:6:17","nodeType":"VariableDeclaration","scope":4109,"src":"14872:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"14872:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14857:30:17"},"scope":5064,"src":"14783:1622:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4144,"nodeType":"Block","src":"16607:185:17","statements":[{"assignments":[4122,4124],"declarations":[{"constant":false,"id":4122,"mutability":"mutable","name":"success","nameLocation":"16624:7:17","nodeType":"VariableDeclaration","scope":4144,"src":"16619:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4121,"name":"bool","nodeType":"ElementaryTypeName","src":"16619:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4124,"mutability":"mutable","name":"result","nameLocation":"16646:6:17","nodeType":"VariableDeclaration","scope":4144,"src":"16633:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4123,"name":"bytes","nodeType":"ElementaryTypeName","src":"16633:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4130,"initialValue":{"arguments":[{"id":4126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"16666:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4127,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"16669:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4128,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"16672:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4125,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4109,4191],"referencedDeclaration":4191,"src":"16656:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16656:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16618:56:17"},{"condition":{"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16689:8:17","subExpression":{"id":4131,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"16690:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4141,"nodeType":"IfStatement","src":"16685:76:17","trueBody":{"id":4140,"nodeType":"Block","src":"16699:62:17","statements":[{"expression":{"arguments":[{"expression":{"id":4136,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"16726:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16732:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"16726:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4133,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"16714:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16720:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"16714:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16714:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4139,"nodeType":"ExpressionStatement","src":"16714:35:17"}]}},{"expression":{"id":4142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"16778:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4120,"id":4143,"nodeType":"Return","src":"16771:13:17"}]},"documentation":{"id":4110,"nodeType":"StructuredDocumentation","src":"16413:87:17","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4145,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16515:6:17","nodeType":"FunctionDefinition","parameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4112,"mutability":"mutable","name":"b","nameLocation":"16535:1:17","nodeType":"VariableDeclaration","scope":4145,"src":"16522:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4111,"name":"bytes","nodeType":"ElementaryTypeName","src":"16522:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4114,"mutability":"mutable","name":"e","nameLocation":"16551:1:17","nodeType":"VariableDeclaration","scope":4145,"src":"16538:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4113,"name":"bytes","nodeType":"ElementaryTypeName","src":"16538:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4116,"mutability":"mutable","name":"m","nameLocation":"16567:1:17","nodeType":"VariableDeclaration","scope":4145,"src":"16554:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4115,"name":"bytes","nodeType":"ElementaryTypeName","src":"16554:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16521:48:17"},"returnParameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4145,"src":"16593:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4118,"name":"bytes","nodeType":"ElementaryTypeName","src":"16593:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16592:14:17"},"scope":5064,"src":"16506:286:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4190,"nodeType":"Block","src":"17055:789:17","statements":[{"condition":{"arguments":[{"id":4160,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"17081:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4159,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"17070:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17070:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4169,"nodeType":"IfStatement","src":"17066:47:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17093:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17110:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17100:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4163,"name":"bytes","nodeType":"ElementaryTypeName","src":"17104:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17100:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17092:21:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4158,"id":4168,"nodeType":"Return","src":"17085:28:17"}},{"assignments":[4171],"declarations":[{"constant":false,"id":4171,"mutability":"mutable","name":"mLen","nameLocation":"17134:4:17","nodeType":"VariableDeclaration","scope":4190,"src":"17126:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"17126:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4174,"initialValue":{"expression":{"id":4172,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"17141:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17143:6:17","memberName":"length","nodeType":"MemberAccess","src":"17141:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17126:23:17"},{"expression":{"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"17234:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4178,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"17260:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17262:6:17","memberName":"length","nodeType":"MemberAccess","src":"17260:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4180,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"17270:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17272:6:17","memberName":"length","nodeType":"MemberAccess","src":"17270:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4182,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"17280:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4183,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"17286:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4184,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"17289:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4185,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"17292:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4176,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17243:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17247:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"17243:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17243:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"17234:60:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4188,"nodeType":"ExpressionStatement","src":"17234:60:17"},{"AST":{"nativeSrc":"17332:505:17","nodeType":"YulBlock","src":"17332:505:17","statements":[{"nativeSrc":"17347:32:17","nodeType":"YulVariableDeclaration","src":"17347:32:17","value":{"arguments":[{"name":"result","nativeSrc":"17366:6:17","nodeType":"YulIdentifier","src":"17366:6:17"},{"kind":"number","nativeSrc":"17374:4:17","nodeType":"YulLiteral","src":"17374:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17362:3:17","nodeType":"YulIdentifier","src":"17362:3:17"},"nativeSrc":"17362:17:17","nodeType":"YulFunctionCall","src":"17362:17:17"},"variables":[{"name":"dataPtr","nativeSrc":"17351:7:17","nodeType":"YulTypedName","src":"17351:7:17","type":""}]},{"nativeSrc":"17471:73:17","nodeType":"YulAssignment","src":"17471:73:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17493:3:17","nodeType":"YulIdentifier","src":"17493:3:17"},"nativeSrc":"17493:5:17","nodeType":"YulFunctionCall","src":"17493:5:17"},{"kind":"number","nativeSrc":"17500:4:17","nodeType":"YulLiteral","src":"17500:4:17","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17506:7:17","nodeType":"YulIdentifier","src":"17506:7:17"},{"arguments":[{"name":"result","nativeSrc":"17521:6:17","nodeType":"YulIdentifier","src":"17521:6:17"}],"functionName":{"name":"mload","nativeSrc":"17515:5:17","nodeType":"YulIdentifier","src":"17515:5:17"},"nativeSrc":"17515:13:17","nodeType":"YulFunctionCall","src":"17515:13:17"},{"name":"dataPtr","nativeSrc":"17530:7:17","nodeType":"YulIdentifier","src":"17530:7:17"},{"name":"mLen","nativeSrc":"17539:4:17","nodeType":"YulIdentifier","src":"17539:4:17"}],"functionName":{"name":"staticcall","nativeSrc":"17482:10:17","nodeType":"YulIdentifier","src":"17482:10:17"},"nativeSrc":"17482:62:17","nodeType":"YulFunctionCall","src":"17482:62:17"},"variableNames":[{"name":"success","nativeSrc":"17471:7:17","nodeType":"YulIdentifier","src":"17471:7:17"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17703:6:17","nodeType":"YulIdentifier","src":"17703:6:17"},{"name":"mLen","nativeSrc":"17711:4:17","nodeType":"YulIdentifier","src":"17711:4:17"}],"functionName":{"name":"mstore","nativeSrc":"17696:6:17","nodeType":"YulIdentifier","src":"17696:6:17"},"nativeSrc":"17696:20:17","nodeType":"YulFunctionCall","src":"17696:20:17"},"nativeSrc":"17696:20:17","nodeType":"YulExpressionStatement","src":"17696:20:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17801:4:17","nodeType":"YulLiteral","src":"17801:4:17","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17811:7:17","nodeType":"YulIdentifier","src":"17811:7:17"},{"name":"mLen","nativeSrc":"17820:4:17","nodeType":"YulIdentifier","src":"17820:4:17"}],"functionName":{"name":"add","nativeSrc":"17807:3:17","nodeType":"YulIdentifier","src":"17807:3:17"},"nativeSrc":"17807:18:17","nodeType":"YulFunctionCall","src":"17807:18:17"}],"functionName":{"name":"mstore","nativeSrc":"17794:6:17","nodeType":"YulIdentifier","src":"17794:6:17"},"nativeSrc":"17794:32:17","nodeType":"YulFunctionCall","src":"17794:32:17"},"nativeSrc":"17794:32:17","nodeType":"YulExpressionStatement","src":"17794:32:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":4171,"isOffset":false,"isSlot":false,"src":"17539:4:17","valueSize":1},{"declaration":4171,"isOffset":false,"isSlot":false,"src":"17711:4:17","valueSize":1},{"declaration":4171,"isOffset":false,"isSlot":false,"src":"17820:4:17","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"17366:6:17","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"17521:6:17","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"17703:6:17","valueSize":1},{"declaration":4155,"isOffset":false,"isSlot":false,"src":"17471:7:17","valueSize":1}],"flags":["memory-safe"],"id":4189,"nodeType":"InlineAssembly","src":"17307:530:17"}]},"documentation":{"id":4146,"nodeType":"StructuredDocumentation","src":"16800:90:17","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4191,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16905:9:17","nodeType":"FunctionDefinition","parameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"b","nameLocation":"16938:1:17","nodeType":"VariableDeclaration","scope":4191,"src":"16925:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4147,"name":"bytes","nodeType":"ElementaryTypeName","src":"16925:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"e","nameLocation":"16963:1:17","nodeType":"VariableDeclaration","scope":4191,"src":"16950:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4149,"name":"bytes","nodeType":"ElementaryTypeName","src":"16950:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4152,"mutability":"mutable","name":"m","nameLocation":"16988:1:17","nodeType":"VariableDeclaration","scope":4191,"src":"16975:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4151,"name":"bytes","nodeType":"ElementaryTypeName","src":"16975:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16914:82:17"},"returnParameters":{"id":4158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4155,"mutability":"mutable","name":"success","nameLocation":"17025:7:17","nodeType":"VariableDeclaration","scope":4191,"src":"17020:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4154,"name":"bool","nodeType":"ElementaryTypeName","src":"17020:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4157,"mutability":"mutable","name":"result","nameLocation":"17047:6:17","nodeType":"VariableDeclaration","scope":4191,"src":"17034:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4156,"name":"bytes","nodeType":"ElementaryTypeName","src":"17034:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17019:35:17"},"scope":5064,"src":"16896:948:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4223,"nodeType":"Block","src":"18004:183:17","statements":[{"body":{"id":4219,"nodeType":"Block","src":"18062:96:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4210,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"18081:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4212,"indexExpression":{"id":4211,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"18091:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18081:12:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18097:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18081:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4218,"nodeType":"IfStatement","src":"18077:70:17","trueBody":{"id":4217,"nodeType":"Block","src":"18100:47:17","statements":[{"expression":{"hexValue":"66616c7365","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18126:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4198,"id":4216,"nodeType":"Return","src":"18119:12:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"18035:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4204,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"18039:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18049:6:17","memberName":"length","nodeType":"MemberAccess","src":"18039:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18035:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4220,"initializationExpression":{"assignments":[4200],"declarations":[{"constant":false,"id":4200,"mutability":"mutable","name":"i","nameLocation":"18028:1:17","nodeType":"VariableDeclaration","scope":4220,"src":"18020:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"18020:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4202,"initialValue":{"hexValue":"30","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18032:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18020:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"18057:3:17","subExpression":{"id":4207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"18059:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4209,"nodeType":"ExpressionStatement","src":"18057:3:17"},"nodeType":"ForStatement","src":"18015:143:17"},{"expression":{"hexValue":"74727565","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18175:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4198,"id":4222,"nodeType":"Return","src":"18168:11:17"}]},"documentation":{"id":4192,"nodeType":"StructuredDocumentation","src":"17852:74:17","text":" @dev Returns whether the provided byte array is zero."},"id":4224,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17941:10:17","nodeType":"FunctionDefinition","parameters":{"id":4195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"byteArray","nameLocation":"17965:9:17","nodeType":"VariableDeclaration","scope":4224,"src":"17952:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4193,"name":"bytes","nodeType":"ElementaryTypeName","src":"17952:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17951:24:17"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4224,"src":"17998:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4196,"name":"bool","nodeType":"ElementaryTypeName","src":"17998:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17997:6:17"},"scope":5064,"src":"17932:255:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4442,"nodeType":"Block","src":"18556:5228:17","statements":[{"id":4441,"nodeType":"UncheckedBlock","src":"18567:5210:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"18663:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18668:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18663:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4238,"nodeType":"IfStatement","src":"18659:55:17","trueBody":{"id":4237,"nodeType":"Block","src":"18671:43:17","statements":[{"expression":{"id":4235,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"18697:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4231,"id":4236,"nodeType":"Return","src":"18690:8:17"}]}},{"assignments":[4240],"declarations":[{"constant":false,"id":4240,"mutability":"mutable","name":"aa","nameLocation":"19663:2:17","nodeType":"VariableDeclaration","scope":4441,"src":"19655:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"19655:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4242,"initialValue":{"id":4241,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"19668:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19655:14:17"},{"assignments":[4244],"declarations":[{"constant":false,"id":4244,"mutability":"mutable","name":"xn","nameLocation":"19692:2:17","nodeType":"VariableDeclaration","scope":4441,"src":"19684:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4243,"name":"uint256","nodeType":"ElementaryTypeName","src":"19684:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4246,"initialValue":{"hexValue":"31","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19697:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19684:14:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4247,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19719:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19726:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19731:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19726:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19725:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19719:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4262,"nodeType":"IfStatement","src":"19715:95:17","trueBody":{"id":4261,"nodeType":"Block","src":"19737:73:17","statements":[{"expression":{"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4253,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19756:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19763:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19756:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4256,"nodeType":"ExpressionStatement","src":"19756:10:17"},{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4257,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"19785:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19792:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19785:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4260,"nodeType":"ExpressionStatement","src":"19785:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19828:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19835:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19840:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19835:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19834:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19828:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4278,"nodeType":"IfStatement","src":"19824:93:17","trueBody":{"id":4277,"nodeType":"Block","src":"19845:72:17","statements":[{"expression":{"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4269,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19864:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19871:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19864:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4272,"nodeType":"ExpressionStatement","src":"19864:9:17"},{"expression":{"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4273,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"19892:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19899:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19892:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4276,"nodeType":"ExpressionStatement","src":"19892:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4279,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19935:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19942:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19947:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19942:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19941:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19935:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4294,"nodeType":"IfStatement","src":"19931:93:17","trueBody":{"id":4293,"nodeType":"Block","src":"19952:72:17","statements":[{"expression":{"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4285,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19971:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19978:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19971:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4288,"nodeType":"ExpressionStatement","src":"19971:9:17"},{"expression":{"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4289,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"19999:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20006:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19999:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4292,"nodeType":"ExpressionStatement","src":"19999:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"20042:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20049:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20054:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"20049:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"20048:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"20042:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4310,"nodeType":"IfStatement","src":"20038:92:17","trueBody":{"id":4309,"nodeType":"Block","src":"20059:71:17","statements":[{"expression":{"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4301,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"20078:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20085:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"20078:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4304,"nodeType":"ExpressionStatement","src":"20078:9:17"},{"expression":{"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4305,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"20106:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20113:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"20106:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4308,"nodeType":"ExpressionStatement","src":"20106:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4311,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"20148:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20155:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20160:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"20155:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"20154:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"20148:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4326,"nodeType":"IfStatement","src":"20144:90:17","trueBody":{"id":4325,"nodeType":"Block","src":"20164:70:17","statements":[{"expression":{"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4317,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"20183:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20190:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"20183:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4320,"nodeType":"ExpressionStatement","src":"20183:8:17"},{"expression":{"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4321,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"20210:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20217:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"20210:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4324,"nodeType":"ExpressionStatement","src":"20210:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4327,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"20252:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20259:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20264:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"20259:6:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"20258:8:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"20252:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4342,"nodeType":"IfStatement","src":"20248:90:17","trueBody":{"id":4341,"nodeType":"Block","src":"20268:70:17","statements":[{"expression":{"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4333,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"20287:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20294:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"20287:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4336,"nodeType":"ExpressionStatement","src":"20287:8:17"},{"expression":{"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4337,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"20314:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20321:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"20314:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4340,"nodeType":"ExpressionStatement","src":"20314:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4343,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"20356:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20363:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20368:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"20363:6:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"20362:8:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"20356:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4354,"nodeType":"IfStatement","src":"20352:63:17","trueBody":{"id":4353,"nodeType":"Block","src":"20372:43:17","statements":[{"expression":{"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4349,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"20391:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20398:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20391:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4352,"nodeType":"ExpressionStatement","src":"20391:8:17"}]}},{"expression":{"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"20842:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20848:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4357,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"20852:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20848:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20847:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20859:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20847:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20842:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4363,"nodeType":"ExpressionStatement","src":"20842:18:17"},{"expression":{"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4364,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22784:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22790:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"22795:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4367,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22799:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22795:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22790:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22789:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22789:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22784:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4374,"nodeType":"ExpressionStatement","src":"22784:23:17"},{"expression":{"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4375,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22894:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4376,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22900:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4377,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"22905:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4378,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22909:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22905:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22900:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22899:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22916:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22899:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22894:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4385,"nodeType":"ExpressionStatement","src":"22894:23:17"},{"expression":{"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4386,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23006:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4387,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23012:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"23017:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4389,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23021:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23017:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23012:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23011:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23028:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23011:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23006:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4396,"nodeType":"ExpressionStatement","src":"23006:23:17"},{"expression":{"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4397,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23116:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23122:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"23127:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4400,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23131:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23127:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23122:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23121:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23138:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23121:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23116:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4407,"nodeType":"ExpressionStatement","src":"23116:23:17"},{"expression":{"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4408,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23227:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4409,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23233:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4410,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"23238:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4411,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23242:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23238:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23233:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23232:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23249:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23232:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23227:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4418,"nodeType":"ExpressionStatement","src":"23227:23:17"},{"expression":{"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4419,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23338:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4420,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23344:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4421,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"23349:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4422,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23353:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23349:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23344:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23343:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23360:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23343:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23338:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4429,"nodeType":"ExpressionStatement","src":"23338:23:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4430,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23732:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4433,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23753:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4434,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"23758:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4435,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23762:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23758:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23753:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4431,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"23737:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23746:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"23737:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23737:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23732:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4231,"id":4440,"nodeType":"Return","src":"23725:40:17"}]}]},"documentation":{"id":4225,"nodeType":"StructuredDocumentation","src":"18195:298:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4443,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18508:4:17","nodeType":"FunctionDefinition","parameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"a","nameLocation":"18521:1:17","nodeType":"VariableDeclaration","scope":4443,"src":"18513:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"18513:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18512:11:17"},"returnParameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4443,"src":"18547:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"18547:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18546:9:17"},"scope":5064,"src":"18499:5285:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4476,"nodeType":"Block","src":"23962:176:17","statements":[{"id":4475,"nodeType":"UncheckedBlock","src":"23973:158:17","statements":[{"assignments":[4455],"declarations":[{"constant":false,"id":4455,"mutability":"mutable","name":"result","nameLocation":"24006:6:17","nodeType":"VariableDeclaration","scope":4475,"src":"23998:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4454,"name":"uint256","nodeType":"ElementaryTypeName","src":"23998:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4459,"initialValue":{"arguments":[{"id":4457,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"24020:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4456,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4443,4477],"referencedDeclaration":4443,"src":"24015:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24015:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23998:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"24044:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4464,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"24086:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}],"id":4463,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"24069:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3470_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24069:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4466,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"24099:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"24108:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24099:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"24117:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24099:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24069:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4461,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24053:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24062:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24053:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24053:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24044:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4453,"id":4474,"nodeType":"Return","src":"24037:82:17"}]}]},"documentation":{"id":4444,"nodeType":"StructuredDocumentation","src":"23792:88:17","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4477,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23895:4:17","nodeType":"FunctionDefinition","parameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4446,"mutability":"mutable","name":"a","nameLocation":"23908:1:17","nodeType":"VariableDeclaration","scope":4477,"src":"23900:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"23900:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4449,"mutability":"mutable","name":"rounding","nameLocation":"23920:8:17","nodeType":"VariableDeclaration","scope":4477,"src":"23911:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"},"typeName":{"id":4448,"nodeType":"UserDefinedTypeName","pathNode":{"id":4447,"name":"Rounding","nameLocations":["23911:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"23911:8:17"},"referencedDeclaration":3470,"src":"23911:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23899:30:17"},"returnParameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4477,"src":"23953:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"23953:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23952:9:17"},"scope":5064,"src":"23886:252:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4672,"nodeType":"Block","src":"24335:1016:17","statements":[{"assignments":[4486],"declarations":[{"constant":false,"id":4486,"mutability":"mutable","name":"result","nameLocation":"24354:6:17","nodeType":"VariableDeclaration","scope":4672,"src":"24346:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4485,"name":"uint256","nodeType":"ElementaryTypeName","src":"24346:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4488,"initialValue":{"hexValue":"30","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24363:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"24346:18:17"},{"assignments":[4490],"declarations":[{"constant":false,"id":4490,"mutability":"mutable","name":"exp","nameLocation":"24383:3:17","nodeType":"VariableDeclaration","scope":4672,"src":"24375:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4489,"name":"uint256","nodeType":"ElementaryTypeName","src":"24375:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4491,"nodeType":"VariableDeclarationStatement","src":"24375:11:17"},{"id":4669,"nodeType":"UncheckedBlock","src":"24397:923:17","statements":[{"expression":{"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4492,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24422:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24428:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24450:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24459:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24464:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"24459:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24458:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24471:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24458:14:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"24450:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4494,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24434:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24443:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24434:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24434:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24428:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24422:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4507,"nodeType":"ExpressionStatement","src":"24422:51:17"},{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24488:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4509,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24498:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24488:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4511,"nodeType":"ExpressionStatement","src":"24488:13:17"},{"expression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"24516:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4513,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24526:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24516:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4515,"nodeType":"ExpressionStatement","src":"24516:13:17"},{"expression":{"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4516,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24546:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24552:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24573:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24582:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24587:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24582:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4524,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24581:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24593:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24581:13:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24573:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4518,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24557:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24566:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24557:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24557:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24552:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24546:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4531,"nodeType":"ExpressionStatement","src":"24546:49:17"},{"expression":{"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24610:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4533,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24620:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24610:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4535,"nodeType":"ExpressionStatement","src":"24610:13:17"},{"expression":{"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4536,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"24638:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4537,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24648:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24638:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4539,"nodeType":"ExpressionStatement","src":"24638:13:17"},{"expression":{"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4540,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24668:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24674:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24695:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24704:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24709:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24704:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24703:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24715:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24703:13:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24695:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4542,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24679:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24688:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24679:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24679:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24674:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24668:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4555,"nodeType":"ExpressionStatement","src":"24668:49:17"},{"expression":{"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24732:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4557,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24742:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24732:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4559,"nodeType":"ExpressionStatement","src":"24732:13:17"},{"expression":{"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"24760:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4561,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24770:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4563,"nodeType":"ExpressionStatement","src":"24760:13:17"},{"expression":{"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4564,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24790:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24796:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24817:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24826:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24831:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24826:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24825:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24837:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24825:13:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24817:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4566,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24801:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24810:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24801:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24801:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24796:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24790:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4579,"nodeType":"ExpressionStatement","src":"24790:49:17"},{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24854:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4581,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24864:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24854:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"24854:13:17"},{"expression":{"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"24882:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4585,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24892:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24882:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4587,"nodeType":"ExpressionStatement","src":"24882:13:17"},{"expression":{"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4588,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24912:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24918:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24938:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24947:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24952:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24947:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24946:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24957:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24946:12:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24938:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4590,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24922:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24931:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24922:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24922:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24918:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24912:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4603,"nodeType":"ExpressionStatement","src":"24912:47:17"},{"expression":{"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24974:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4605,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24984:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24974:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4607,"nodeType":"ExpressionStatement","src":"24974:13:17"},{"expression":{"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25002:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4609,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25012:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25002:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4611,"nodeType":"ExpressionStatement","src":"25002:13:17"},{"expression":{"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4612,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25032:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25038:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25058:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25067:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25072:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25067:6:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"25066:8:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25077:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25066:12:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"25058:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4614,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"25042:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25051:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"25042:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25042:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25038:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25032:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4627,"nodeType":"ExpressionStatement","src":"25032:47:17"},{"expression":{"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25094:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4629,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25104:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25094:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4631,"nodeType":"ExpressionStatement","src":"25094:13:17"},{"expression":{"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25122:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4633,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25132:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25122:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4635,"nodeType":"ExpressionStatement","src":"25122:13:17"},{"expression":{"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4636,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25152:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25158:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25178:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25187:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25192:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"25187:6:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"25186:8:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25197:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25186:12:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"25178:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4638,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"25162:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25171:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"25162:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25162:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25158:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25152:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4651,"nodeType":"ExpressionStatement","src":"25152:47:17"},{"expression":{"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25214:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4653,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25224:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25214:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4655,"nodeType":"ExpressionStatement","src":"25214:13:17"},{"expression":{"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25242:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4657,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"25252:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25242:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4659,"nodeType":"ExpressionStatement","src":"25242:13:17"},{"expression":{"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25272:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25298:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25306:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25298:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4661,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"25282:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25291:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"25282:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25282:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25272:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4668,"nodeType":"ExpressionStatement","src":"25272:36:17"}]},{"expression":{"id":4670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25337:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4484,"id":4671,"nodeType":"Return","src":"25330:13:17"}]},"documentation":{"id":4478,"nodeType":"StructuredDocumentation","src":"24146:122:17","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4673,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24283:4:17","nodeType":"FunctionDefinition","parameters":{"id":4481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"value","nameLocation":"24296:5:17","nodeType":"VariableDeclaration","scope":4673,"src":"24288:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4479,"name":"uint256","nodeType":"ElementaryTypeName","src":"24288:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24287:15:17"},"returnParameters":{"id":4484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4673,"src":"24326:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"24326:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24325:9:17"},"scope":5064,"src":"24274:1077:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4706,"nodeType":"Block","src":"25590:180:17","statements":[{"id":4705,"nodeType":"UncheckedBlock","src":"25601:162:17","statements":[{"assignments":[4685],"declarations":[{"constant":false,"id":4685,"mutability":"mutable","name":"result","nameLocation":"25634:6:17","nodeType":"VariableDeclaration","scope":4705,"src":"25626:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4684,"name":"uint256","nodeType":"ElementaryTypeName","src":"25626:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4689,"initialValue":{"arguments":[{"id":4687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"25648:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4686,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4673,4707],"referencedDeclaration":4673,"src":"25643:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25643:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25626:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"25676:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4694,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"25718:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}],"id":4693,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"25701:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3470_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25701:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25731:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"25736:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25731:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"25745:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25731:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25701:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4691,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"25685:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25694:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"25685:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25685:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25676:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4683,"id":4704,"nodeType":"Return","src":"25669:82:17"}]}]},"documentation":{"id":4674,"nodeType":"StructuredDocumentation","src":"25359:145:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4707,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"25519:4:17","nodeType":"FunctionDefinition","parameters":{"id":4680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4676,"mutability":"mutable","name":"value","nameLocation":"25532:5:17","nodeType":"VariableDeclaration","scope":4707,"src":"25524:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4675,"name":"uint256","nodeType":"ElementaryTypeName","src":"25524:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4679,"mutability":"mutable","name":"rounding","nameLocation":"25548:8:17","nodeType":"VariableDeclaration","scope":4707,"src":"25539:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"},"typeName":{"id":4678,"nodeType":"UserDefinedTypeName","pathNode":{"id":4677,"name":"Rounding","nameLocations":["25539:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"25539:8:17"},"referencedDeclaration":3470,"src":"25539:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25523:34:17"},"returnParameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4707,"src":"25581:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"25581:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25580:9:17"},"scope":5064,"src":"25510:260:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4835,"nodeType":"Block","src":"25969:886:17","statements":[{"assignments":[4716],"declarations":[{"constant":false,"id":4716,"mutability":"mutable","name":"result","nameLocation":"25988:6:17","nodeType":"VariableDeclaration","scope":4835,"src":"25980:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4715,"name":"uint256","nodeType":"ElementaryTypeName","src":"25980:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4718,"initialValue":{"hexValue":"30","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25997:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25980:18:17"},{"id":4832,"nodeType":"UncheckedBlock","src":"26009:815:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26038:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26047:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26053:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"26047:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"26038:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4735,"nodeType":"IfStatement","src":"26034:106:17","trueBody":{"id":4734,"nodeType":"Block","src":"26057:83:17","statements":[{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26076:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26085:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26091:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"26085:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"26076:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4729,"nodeType":"ExpressionStatement","src":"26076:17:17"},{"expression":{"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26112:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26122:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"26112:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4733,"nodeType":"ExpressionStatement","src":"26112:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26158:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26167:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26173:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"26167:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"26158:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4752,"nodeType":"IfStatement","src":"26154:106:17","trueBody":{"id":4751,"nodeType":"Block","src":"26177:83:17","statements":[{"expression":{"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26196:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26205:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26211:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"26205:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"26196:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4746,"nodeType":"ExpressionStatement","src":"26196:17:17"},{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26232:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26242:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"26232:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4750,"nodeType":"ExpressionStatement","src":"26232:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26278:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26287:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26293:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"26287:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"26278:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4769,"nodeType":"IfStatement","src":"26274:106:17","trueBody":{"id":4768,"nodeType":"Block","src":"26297:83:17","statements":[{"expression":{"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26316:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26325:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26331:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"26325:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"26316:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4763,"nodeType":"ExpressionStatement","src":"26316:17:17"},{"expression":{"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26352:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26362:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"26352:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4767,"nodeType":"ExpressionStatement","src":"26352:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26398:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26407:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26413:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"26407:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"26398:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4786,"nodeType":"IfStatement","src":"26394:103:17","trueBody":{"id":4785,"nodeType":"Block","src":"26416:81:17","statements":[{"expression":{"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26435:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26444:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26450:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"26444:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"26435:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4780,"nodeType":"ExpressionStatement","src":"26435:16:17"},{"expression":{"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26470:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26480:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"26470:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4784,"nodeType":"ExpressionStatement","src":"26470:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26515:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26524:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26530:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26524:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"26515:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4803,"nodeType":"IfStatement","src":"26511:103:17","trueBody":{"id":4802,"nodeType":"Block","src":"26533:81:17","statements":[{"expression":{"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26552:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26561:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26567:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26561:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"26552:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4797,"nodeType":"ExpressionStatement","src":"26552:16:17"},{"expression":{"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26587:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26597:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26587:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4801,"nodeType":"ExpressionStatement","src":"26587:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26632:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26641:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26647:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26641:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26632:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4820,"nodeType":"IfStatement","src":"26628:103:17","trueBody":{"id":4819,"nodeType":"Block","src":"26650:81:17","statements":[{"expression":{"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26669:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26678:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26684:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26678:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26669:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4814,"nodeType":"ExpressionStatement","src":"26669:16:17"},{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26704:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26714:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26704:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4818,"nodeType":"ExpressionStatement","src":"26704:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26749:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26758:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26764:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26758:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26749:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4831,"nodeType":"IfStatement","src":"26745:68:17","trueBody":{"id":4830,"nodeType":"Block","src":"26767:46:17","statements":[{"expression":{"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4826,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26786:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26796:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26786:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4829,"nodeType":"ExpressionStatement","src":"26786:11:17"}]}}]},{"expression":{"id":4833,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26841:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4714,"id":4834,"nodeType":"Return","src":"26834:13:17"}]},"documentation":{"id":4708,"nodeType":"StructuredDocumentation","src":"25778:123:17","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4836,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25916:5:17","nodeType":"FunctionDefinition","parameters":{"id":4711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4710,"mutability":"mutable","name":"value","nameLocation":"25930:5:17","nodeType":"VariableDeclaration","scope":4836,"src":"25922:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4709,"name":"uint256","nodeType":"ElementaryTypeName","src":"25922:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25921:15:17"},"returnParameters":{"id":4714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4836,"src":"25960:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4712,"name":"uint256","nodeType":"ElementaryTypeName","src":"25960:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25959:9:17"},"scope":5064,"src":"25907:948:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4869,"nodeType":"Block","src":"27096:182:17","statements":[{"id":4868,"nodeType":"UncheckedBlock","src":"27107:164:17","statements":[{"assignments":[4848],"declarations":[{"constant":false,"id":4848,"mutability":"mutable","name":"result","nameLocation":"27140:6:17","nodeType":"VariableDeclaration","scope":4868,"src":"27132:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4847,"name":"uint256","nodeType":"ElementaryTypeName","src":"27132:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4852,"initialValue":{"arguments":[{"id":4850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"27155:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4849,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4836,4870],"referencedDeclaration":4836,"src":"27149:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27149:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27132:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"27183:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4857,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"27225:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}],"id":4856,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"27208:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3470_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27208:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27238:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"27244:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27238:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"27253:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27238:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27208:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4854,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"27192:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27201:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"27192:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27192:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27183:76:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4846,"id":4867,"nodeType":"Return","src":"27176:83:17"}]}]},"documentation":{"id":4837,"nodeType":"StructuredDocumentation","src":"26863:146:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4870,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"27024:5:17","nodeType":"FunctionDefinition","parameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4839,"mutability":"mutable","name":"value","nameLocation":"27038:5:17","nodeType":"VariableDeclaration","scope":4870,"src":"27030:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"27030:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4842,"mutability":"mutable","name":"rounding","nameLocation":"27054:8:17","nodeType":"VariableDeclaration","scope":4870,"src":"27045:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"},"typeName":{"id":4841,"nodeType":"UserDefinedTypeName","pathNode":{"id":4840,"name":"Rounding","nameLocations":["27045:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"27045:8:17"},"referencedDeclaration":3470,"src":"27045:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27029:34:17"},"returnParameters":{"id":4846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4870,"src":"27087:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4844,"name":"uint256","nodeType":"ElementaryTypeName","src":"27087:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27086:9:17"},"scope":5064,"src":"27015:263:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5006,"nodeType":"Block","src":"27606:697:17","statements":[{"assignments":[4879],"declarations":[{"constant":false,"id":4879,"mutability":"mutable","name":"result","nameLocation":"27625:6:17","nodeType":"VariableDeclaration","scope":5006,"src":"27617:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"27617:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4881,"initialValue":{"hexValue":"30","id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27634:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"27617:18:17"},{"assignments":[4883],"declarations":[{"constant":false,"id":4883,"mutability":"mutable","name":"isGt","nameLocation":"27654:4:17","nodeType":"VariableDeclaration","scope":5006,"src":"27646:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"27646:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4884,"nodeType":"VariableDeclarationStatement","src":"27646:12:17"},{"id":5003,"nodeType":"UncheckedBlock","src":"27669:603:17","statements":[{"expression":{"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4885,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27694:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27717:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27726:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27731:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27726:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27725:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27738:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27725:14:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27717:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4886,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"27701:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27710:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"27701:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27701:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27694:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4898,"nodeType":"ExpressionStatement","src":"27694:46:17"},{"expression":{"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27755:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4900,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27765:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27772:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27765:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27755:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4904,"nodeType":"ExpressionStatement","src":"27755:20:17"},{"expression":{"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"27790:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4906,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27800:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27807:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27800:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27790:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4910,"nodeType":"ExpressionStatement","src":"27790:19:17"},{"expression":{"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4911,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27826:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27849:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27858:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27863:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27858:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27857:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27869:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27857:13:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27849:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4912,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"27833:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27842:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"27833:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27833:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27826:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4924,"nodeType":"ExpressionStatement","src":"27826:45:17"},{"expression":{"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27886:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27896:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27903:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27896:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27886:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4930,"nodeType":"ExpressionStatement","src":"27886:19:17"},{"expression":{"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"27920:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4932,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27930:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27937:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27930:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27920:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4936,"nodeType":"ExpressionStatement","src":"27920:18:17"},{"expression":{"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4937,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27955:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27978:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27987:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27992:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27987:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27986:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27998:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27986:13:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27978:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4938,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"27962:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27971:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"27962:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27962:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27955:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4950,"nodeType":"ExpressionStatement","src":"27955:45:17"},{"expression":{"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"28015:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4952,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"28025:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28032:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"28025:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4956,"nodeType":"ExpressionStatement","src":"28015:19:17"},{"expression":{"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"28049:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4958,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"28059:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28066:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"28059:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28049:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4962,"nodeType":"ExpressionStatement","src":"28049:18:17"},{"expression":{"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4963,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"28084:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"28107:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28116:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28121:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"28116:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"28115:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28127:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28115:13:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"28107:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4964,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"28091:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28100:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"28091:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28091:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28084:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4976,"nodeType":"ExpressionStatement","src":"28084:45:17"},{"expression":{"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"28144:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"28154:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28161:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"28154:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28144:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4982,"nodeType":"ExpressionStatement","src":"28144:19:17"},{"expression":{"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"28178:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"28188:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28195:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28188:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28178:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4988,"nodeType":"ExpressionStatement","src":"28178:18:17"},{"expression":{"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"28213:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"28239:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28248:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28253:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"28248:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"28247:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28258:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28247:12:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"28239:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4990,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"28223:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28232:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"28223:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28223:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28213:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5002,"nodeType":"ExpressionStatement","src":"28213:47:17"}]},{"expression":{"id":5004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"28289:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4877,"id":5005,"nodeType":"Return","src":"28282:13:17"}]},"documentation":{"id":4871,"nodeType":"StructuredDocumentation","src":"27286:251:17","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5007,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27552:6:17","nodeType":"FunctionDefinition","parameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"value","nameLocation":"27567:5:17","nodeType":"VariableDeclaration","scope":5007,"src":"27559:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"27559:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27558:15:17"},"returnParameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5007,"src":"27597:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4875,"name":"uint256","nodeType":"ElementaryTypeName","src":"27597:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27596:9:17"},"scope":5064,"src":"27543:760:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5043,"nodeType":"Block","src":"28546:189:17","statements":[{"id":5042,"nodeType":"UncheckedBlock","src":"28557:171:17","statements":[{"assignments":[5019],"declarations":[{"constant":false,"id":5019,"mutability":"mutable","name":"result","nameLocation":"28590:6:17","nodeType":"VariableDeclaration","scope":5042,"src":"28582:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5018,"name":"uint256","nodeType":"ElementaryTypeName","src":"28582:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5023,"initialValue":{"arguments":[{"id":5021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"28606:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5020,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5007,5044],"referencedDeclaration":5007,"src":"28599:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28599:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28582:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"28634:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5028,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"28676:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}],"id":5027,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"28659:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3470_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28659:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28689:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"28695:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28705:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28695:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28694:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28689:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"28710:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28689:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28659:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5025,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"28643:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28652:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"28643:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28643:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28634:82:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5017,"id":5041,"nodeType":"Return","src":"28627:89:17"}]}]},"documentation":{"id":5008,"nodeType":"StructuredDocumentation","src":"28311:147:17","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5044,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"28473:6:17","nodeType":"FunctionDefinition","parameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5010,"mutability":"mutable","name":"value","nameLocation":"28488:5:17","nodeType":"VariableDeclaration","scope":5044,"src":"28480:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5009,"name":"uint256","nodeType":"ElementaryTypeName","src":"28480:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5013,"mutability":"mutable","name":"rounding","nameLocation":"28504:8:17","nodeType":"VariableDeclaration","scope":5044,"src":"28495:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"},"typeName":{"id":5012,"nodeType":"UserDefinedTypeName","pathNode":{"id":5011,"name":"Rounding","nameLocations":["28495:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"28495:8:17"},"referencedDeclaration":3470,"src":"28495:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28479:34:17"},"returnParameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5044,"src":"28537:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"28537:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28536:9:17"},"scope":5064,"src":"28464:271:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5062,"nodeType":"Block","src":"28938:50:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5055,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"28962:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}],"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28956:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5053,"name":"uint8","nodeType":"ElementaryTypeName","src":"28956:5:17","typeDescriptions":{}}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28974:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28956:19:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28979:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28956:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5052,"id":5061,"nodeType":"Return","src":"28949:31:17"}]},"documentation":{"id":5045,"nodeType":"StructuredDocumentation","src":"28743:115:17","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5063,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28873:16:17","nodeType":"FunctionDefinition","parameters":{"id":5049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"mutability":"mutable","name":"rounding","nameLocation":"28899:8:17","nodeType":"VariableDeclaration","scope":5063,"src":"28890:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"},"typeName":{"id":5047,"nodeType":"UserDefinedTypeName","pathNode":{"id":5046,"name":"Rounding","nameLocations":["28890:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"28890:8:17"},"referencedDeclaration":3470,"src":"28890:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28889:19:17"},"returnParameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5063,"src":"28932:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5050,"name":"bool","nodeType":"ElementaryTypeName","src":"28932:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28931:6:17"},"scope":5064,"src":"28864:124:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5065,"src":"292:28699:17","usedErrors":[],"usedEvents":[]}],"src":"106:28887:17"},"id":17},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6829]},"id":6830,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5066,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"196:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5067,"nodeType":"StructuredDocumentation","src":"224:561:18","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6829,"linearizedBaseContracts":[6829],"name":"SafeCast","nameLocation":"795:8:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5068,"nodeType":"StructuredDocumentation","src":"811:70:18","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5074,"name":"SafeCastOverflowedUintDowncast","nameLocation":"893:30:18","nodeType":"ErrorDefinition","parameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"bits","nameLocation":"930:4:18","nodeType":"VariableDeclaration","scope":5074,"src":"924:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5069,"name":"uint8","nodeType":"ElementaryTypeName","src":"924:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5072,"mutability":"mutable","name":"value","nameLocation":"944:5:18","nodeType":"VariableDeclaration","scope":5074,"src":"936:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:27:18"},"src":"887:64:18"},{"documentation":{"id":5075,"nodeType":"StructuredDocumentation","src":"959:77:18","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5079,"name":"SafeCastOverflowedIntToUint","nameLocation":"1048:27:18","nodeType":"ErrorDefinition","parameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"value","nameLocation":"1083:5:18","nodeType":"VariableDeclaration","scope":5079,"src":"1076:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5076,"name":"int256","nodeType":"ElementaryTypeName","src":"1076:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1075:14:18"},"src":"1042:48:18"},{"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"1098:69:18","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5086,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1179:29:18","nodeType":"ErrorDefinition","parameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"bits","nameLocation":"1215:4:18","nodeType":"VariableDeclaration","scope":5086,"src":"1209:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5081,"name":"uint8","nodeType":"ElementaryTypeName","src":"1209:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5084,"mutability":"mutable","name":"value","nameLocation":"1228:5:18","nodeType":"VariableDeclaration","scope":5086,"src":"1221:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5083,"name":"int256","nodeType":"ElementaryTypeName","src":"1221:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1208:26:18"},"src":"1173:62:18"},{"documentation":{"id":5087,"nodeType":"StructuredDocumentation","src":"1243:77:18","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5091,"name":"SafeCastOverflowedUintToInt","nameLocation":"1332:27:18","nodeType":"ErrorDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"value","nameLocation":"1368:5:18","nodeType":"VariableDeclaration","scope":5091,"src":"1360:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1359:15:18"},"src":"1326:49:18"},{"body":{"id":5118,"nodeType":"Block","src":"1744:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"1759:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5101,"name":"uint248","nodeType":"ElementaryTypeName","src":"1772:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5100,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1767:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1767:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1781:3:18","memberName":"max","nodeType":"MemberAccess","src":"1767:17:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1759:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5112,"nodeType":"IfStatement","src":"1755:107:18","trueBody":{"id":5111,"nodeType":"Block","src":"1786:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"1844:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5106,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"1808:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5110,"nodeType":"RevertStatement","src":"1801:49:18"}]}},{"expression":{"arguments":[{"id":5115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"1887:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1879:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5113,"name":"uint248","nodeType":"ElementaryTypeName","src":"1879:7:18","typeDescriptions":{}}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5098,"id":5117,"nodeType":"Return","src":"1872:21:18"}]},"documentation":{"id":5092,"nodeType":"StructuredDocumentation","src":"1383:289:18","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5119,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1687:9:18","nodeType":"FunctionDefinition","parameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"value","nameLocation":"1705:5:18","nodeType":"VariableDeclaration","scope":5119,"src":"1697:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"1697:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1696:15:18"},"returnParameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5119,"src":"1735:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5096,"name":"uint248","nodeType":"ElementaryTypeName","src":"1735:7:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1734:9:18"},"scope":6829,"src":"1678:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5146,"nodeType":"Block","src":"2270:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"2285:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2298:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5129,"name":"uint240","nodeType":"ElementaryTypeName","src":"2298:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5128,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2293:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2307:3:18","memberName":"max","nodeType":"MemberAccess","src":"2293:17:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2285:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5140,"nodeType":"IfStatement","src":"2281:107:18","trueBody":{"id":5139,"nodeType":"Block","src":"2312:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2365:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"2370:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5134,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"2334:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5138,"nodeType":"RevertStatement","src":"2327:49:18"}]}},{"expression":{"arguments":[{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"2413:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2405:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5141,"name":"uint240","nodeType":"ElementaryTypeName","src":"2405:7:18","typeDescriptions":{}}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2405:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5126,"id":5145,"nodeType":"Return","src":"2398:21:18"}]},"documentation":{"id":5120,"nodeType":"StructuredDocumentation","src":"1909:289:18","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5147,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2213:9:18","nodeType":"FunctionDefinition","parameters":{"id":5123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5122,"mutability":"mutable","name":"value","nameLocation":"2231:5:18","nodeType":"VariableDeclaration","scope":5147,"src":"2223:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2222:15:18"},"returnParameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5147,"src":"2261:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5124,"name":"uint240","nodeType":"ElementaryTypeName","src":"2261:7:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2260:9:18"},"scope":6829,"src":"2204:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5174,"nodeType":"Block","src":"2796:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"2811:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2824:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5157,"name":"uint232","nodeType":"ElementaryTypeName","src":"2824:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5156,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2819:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2819:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2833:3:18","memberName":"max","nodeType":"MemberAccess","src":"2819:17:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2811:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5168,"nodeType":"IfStatement","src":"2807:107:18","trueBody":{"id":5167,"nodeType":"Block","src":"2838:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2891:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"2896:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5162,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"2860:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5166,"nodeType":"RevertStatement","src":"2853:49:18"}]}},{"expression":{"arguments":[{"id":5171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"2939:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2931:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5169,"name":"uint232","nodeType":"ElementaryTypeName","src":"2931:7:18","typeDescriptions":{}}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2931:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5154,"id":5173,"nodeType":"Return","src":"2924:21:18"}]},"documentation":{"id":5148,"nodeType":"StructuredDocumentation","src":"2435:289:18","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5175,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2739:9:18","nodeType":"FunctionDefinition","parameters":{"id":5151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5150,"mutability":"mutable","name":"value","nameLocation":"2757:5:18","nodeType":"VariableDeclaration","scope":5175,"src":"2749:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2748:15:18"},"returnParameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5175,"src":"2787:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5152,"name":"uint232","nodeType":"ElementaryTypeName","src":"2787:7:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2786:9:18"},"scope":6829,"src":"2730:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5202,"nodeType":"Block","src":"3322:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"3337:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3350:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5185,"name":"uint224","nodeType":"ElementaryTypeName","src":"3350:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5184,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3345:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3359:3:18","memberName":"max","nodeType":"MemberAccess","src":"3345:17:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3337:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5196,"nodeType":"IfStatement","src":"3333:107:18","trueBody":{"id":5195,"nodeType":"Block","src":"3364:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3417:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"3422:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5190,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"3386:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5194,"nodeType":"RevertStatement","src":"3379:49:18"}]}},{"expression":{"arguments":[{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"3465:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3457:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5197,"name":"uint224","nodeType":"ElementaryTypeName","src":"3457:7:18","typeDescriptions":{}}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3457:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5182,"id":5201,"nodeType":"Return","src":"3450:21:18"}]},"documentation":{"id":5176,"nodeType":"StructuredDocumentation","src":"2961:289:18","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5203,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3265:9:18","nodeType":"FunctionDefinition","parameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"value","nameLocation":"3283:5:18","nodeType":"VariableDeclaration","scope":5203,"src":"3275:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5177,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3274:15:18"},"returnParameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5203,"src":"3313:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5180,"name":"uint224","nodeType":"ElementaryTypeName","src":"3313:7:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3312:9:18"},"scope":6829,"src":"3256:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5230,"nodeType":"Block","src":"3848:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"3863:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3876:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5213,"name":"uint216","nodeType":"ElementaryTypeName","src":"3876:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5212,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3871:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3885:3:18","memberName":"max","nodeType":"MemberAccess","src":"3871:17:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3863:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5224,"nodeType":"IfStatement","src":"3859:107:18","trueBody":{"id":5223,"nodeType":"Block","src":"3890:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3943:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"3948:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5218,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"3912:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5222,"nodeType":"RevertStatement","src":"3905:49:18"}]}},{"expression":{"arguments":[{"id":5227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"3991:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3983:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5225,"name":"uint216","nodeType":"ElementaryTypeName","src":"3983:7:18","typeDescriptions":{}}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3983:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5210,"id":5229,"nodeType":"Return","src":"3976:21:18"}]},"documentation":{"id":5204,"nodeType":"StructuredDocumentation","src":"3487:289:18","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5231,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3791:9:18","nodeType":"FunctionDefinition","parameters":{"id":5207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5206,"mutability":"mutable","name":"value","nameLocation":"3809:5:18","nodeType":"VariableDeclaration","scope":5231,"src":"3801:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3801:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:15:18"},"returnParameters":{"id":5210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5231,"src":"3839:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5208,"name":"uint216","nodeType":"ElementaryTypeName","src":"3839:7:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3838:9:18"},"scope":6829,"src":"3782:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5258,"nodeType":"Block","src":"4374:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"4389:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4402:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5241,"name":"uint208","nodeType":"ElementaryTypeName","src":"4402:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5240,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4397:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4397:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4411:3:18","memberName":"max","nodeType":"MemberAccess","src":"4397:17:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4389:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5252,"nodeType":"IfStatement","src":"4385:107:18","trueBody":{"id":5251,"nodeType":"Block","src":"4416:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4469:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"4474:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5246,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"4438:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5250,"nodeType":"RevertStatement","src":"4431:49:18"}]}},{"expression":{"arguments":[{"id":5255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"4517:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4509:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5253,"name":"uint208","nodeType":"ElementaryTypeName","src":"4509:7:18","typeDescriptions":{}}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4509:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5238,"id":5257,"nodeType":"Return","src":"4502:21:18"}]},"documentation":{"id":5232,"nodeType":"StructuredDocumentation","src":"4013:289:18","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5259,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4317:9:18","nodeType":"FunctionDefinition","parameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"value","nameLocation":"4335:5:18","nodeType":"VariableDeclaration","scope":5259,"src":"4327:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4326:15:18"},"returnParameters":{"id":5238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5259,"src":"4365:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5236,"name":"uint208","nodeType":"ElementaryTypeName","src":"4365:7:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4364:9:18"},"scope":6829,"src":"4308:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5286,"nodeType":"Block","src":"4900:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"4915:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4928:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5269,"name":"uint200","nodeType":"ElementaryTypeName","src":"4928:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5268,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4923:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4923:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4937:3:18","memberName":"max","nodeType":"MemberAccess","src":"4923:17:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4915:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5280,"nodeType":"IfStatement","src":"4911:107:18","trueBody":{"id":5279,"nodeType":"Block","src":"4942:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4995:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"5000:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5274,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"4964:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4964:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5278,"nodeType":"RevertStatement","src":"4957:49:18"}]}},{"expression":{"arguments":[{"id":5283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"5043:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5035:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5281,"name":"uint200","nodeType":"ElementaryTypeName","src":"5035:7:18","typeDescriptions":{}}},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5266,"id":5285,"nodeType":"Return","src":"5028:21:18"}]},"documentation":{"id":5260,"nodeType":"StructuredDocumentation","src":"4539:289:18","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5287,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4843:9:18","nodeType":"FunctionDefinition","parameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"value","nameLocation":"4861:5:18","nodeType":"VariableDeclaration","scope":5287,"src":"4853:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5261,"name":"uint256","nodeType":"ElementaryTypeName","src":"4853:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4852:15:18"},"returnParameters":{"id":5266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5287,"src":"4891:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5264,"name":"uint200","nodeType":"ElementaryTypeName","src":"4891:7:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4890:9:18"},"scope":6829,"src":"4834:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5314,"nodeType":"Block","src":"5426:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"5441:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5454:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5297,"name":"uint192","nodeType":"ElementaryTypeName","src":"5454:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5296,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5449:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5449:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5463:3:18","memberName":"max","nodeType":"MemberAccess","src":"5449:17:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5441:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5308,"nodeType":"IfStatement","src":"5437:107:18","trueBody":{"id":5307,"nodeType":"Block","src":"5468:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5521:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"5526:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5302,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"5490:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5490:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5306,"nodeType":"RevertStatement","src":"5483:49:18"}]}},{"expression":{"arguments":[{"id":5311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"5569:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5561:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5309,"name":"uint192","nodeType":"ElementaryTypeName","src":"5561:7:18","typeDescriptions":{}}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5561:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5294,"id":5313,"nodeType":"Return","src":"5554:21:18"}]},"documentation":{"id":5288,"nodeType":"StructuredDocumentation","src":"5065:289:18","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5315,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5369:9:18","nodeType":"FunctionDefinition","parameters":{"id":5291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5290,"mutability":"mutable","name":"value","nameLocation":"5387:5:18","nodeType":"VariableDeclaration","scope":5315,"src":"5379:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5289,"name":"uint256","nodeType":"ElementaryTypeName","src":"5379:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5378:15:18"},"returnParameters":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5315,"src":"5417:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5292,"name":"uint192","nodeType":"ElementaryTypeName","src":"5417:7:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5416:9:18"},"scope":6829,"src":"5360:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5342,"nodeType":"Block","src":"5952:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"5967:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5980:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5325,"name":"uint184","nodeType":"ElementaryTypeName","src":"5980:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5324,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5975:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5975:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5989:3:18","memberName":"max","nodeType":"MemberAccess","src":"5975:17:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5967:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5336,"nodeType":"IfStatement","src":"5963:107:18","trueBody":{"id":5335,"nodeType":"Block","src":"5994:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6047:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"6052:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5330,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"6016:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6016:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5334,"nodeType":"RevertStatement","src":"6009:49:18"}]}},{"expression":{"arguments":[{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"6095:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5337,"name":"uint184","nodeType":"ElementaryTypeName","src":"6087:7:18","typeDescriptions":{}}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5322,"id":5341,"nodeType":"Return","src":"6080:21:18"}]},"documentation":{"id":5316,"nodeType":"StructuredDocumentation","src":"5591:289:18","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5343,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5895:9:18","nodeType":"FunctionDefinition","parameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"value","nameLocation":"5913:5:18","nodeType":"VariableDeclaration","scope":5343,"src":"5905:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"5905:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5904:15:18"},"returnParameters":{"id":5322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5343,"src":"5943:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5320,"name":"uint184","nodeType":"ElementaryTypeName","src":"5943:7:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5942:9:18"},"scope":6829,"src":"5886:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5370,"nodeType":"Block","src":"6478:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"6493:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6506:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5353,"name":"uint176","nodeType":"ElementaryTypeName","src":"6506:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5352,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6501:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6501:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6515:3:18","memberName":"max","nodeType":"MemberAccess","src":"6501:17:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6493:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5364,"nodeType":"IfStatement","src":"6489:107:18","trueBody":{"id":5363,"nodeType":"Block","src":"6520:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6573:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"6578:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5358,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"6542:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6542:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5362,"nodeType":"RevertStatement","src":"6535:49:18"}]}},{"expression":{"arguments":[{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"6621:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6613:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5365,"name":"uint176","nodeType":"ElementaryTypeName","src":"6613:7:18","typeDescriptions":{}}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6613:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5350,"id":5369,"nodeType":"Return","src":"6606:21:18"}]},"documentation":{"id":5344,"nodeType":"StructuredDocumentation","src":"6117:289:18","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5371,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6421:9:18","nodeType":"FunctionDefinition","parameters":{"id":5347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5346,"mutability":"mutable","name":"value","nameLocation":"6439:5:18","nodeType":"VariableDeclaration","scope":5371,"src":"6431:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6431:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6430:15:18"},"returnParameters":{"id":5350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5371,"src":"6469:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5348,"name":"uint176","nodeType":"ElementaryTypeName","src":"6469:7:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6468:9:18"},"scope":6829,"src":"6412:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5398,"nodeType":"Block","src":"7004:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"7019:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5381,"name":"uint168","nodeType":"ElementaryTypeName","src":"7032:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5380,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7027:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7027:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7041:3:18","memberName":"max","nodeType":"MemberAccess","src":"7027:17:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"7019:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5392,"nodeType":"IfStatement","src":"7015:107:18","trueBody":{"id":5391,"nodeType":"Block","src":"7046:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7099:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"7104:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5386,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"7068:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7068:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5390,"nodeType":"RevertStatement","src":"7061:49:18"}]}},{"expression":{"arguments":[{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"7147:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7139:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5393,"name":"uint168","nodeType":"ElementaryTypeName","src":"7139:7:18","typeDescriptions":{}}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7139:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5378,"id":5397,"nodeType":"Return","src":"7132:21:18"}]},"documentation":{"id":5372,"nodeType":"StructuredDocumentation","src":"6643:289:18","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5399,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6947:9:18","nodeType":"FunctionDefinition","parameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"value","nameLocation":"6965:5:18","nodeType":"VariableDeclaration","scope":5399,"src":"6957:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5373,"name":"uint256","nodeType":"ElementaryTypeName","src":"6957:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6956:15:18"},"returnParameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5399,"src":"6995:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5376,"name":"uint168","nodeType":"ElementaryTypeName","src":"6995:7:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6994:9:18"},"scope":6829,"src":"6938:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5426,"nodeType":"Block","src":"7530:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"7545:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7558:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5409,"name":"uint160","nodeType":"ElementaryTypeName","src":"7558:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5408,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7553:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7567:3:18","memberName":"max","nodeType":"MemberAccess","src":"7553:17:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7545:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5420,"nodeType":"IfStatement","src":"7541:107:18","trueBody":{"id":5419,"nodeType":"Block","src":"7572:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7625:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"7630:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5414,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"7594:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7594:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5418,"nodeType":"RevertStatement","src":"7587:49:18"}]}},{"expression":{"arguments":[{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"7673:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7665:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5421,"name":"uint160","nodeType":"ElementaryTypeName","src":"7665:7:18","typeDescriptions":{}}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7665:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5406,"id":5425,"nodeType":"Return","src":"7658:21:18"}]},"documentation":{"id":5400,"nodeType":"StructuredDocumentation","src":"7169:289:18","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5427,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7473:9:18","nodeType":"FunctionDefinition","parameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"value","nameLocation":"7491:5:18","nodeType":"VariableDeclaration","scope":5427,"src":"7483:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5401,"name":"uint256","nodeType":"ElementaryTypeName","src":"7483:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7482:15:18"},"returnParameters":{"id":5406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5427,"src":"7521:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5404,"name":"uint160","nodeType":"ElementaryTypeName","src":"7521:7:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7520:9:18"},"scope":6829,"src":"7464:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5454,"nodeType":"Block","src":"8056:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"8071:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8084:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5437,"name":"uint152","nodeType":"ElementaryTypeName","src":"8084:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5436,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8079:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8093:3:18","memberName":"max","nodeType":"MemberAccess","src":"8079:17:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"8071:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5448,"nodeType":"IfStatement","src":"8067:107:18","trueBody":{"id":5447,"nodeType":"Block","src":"8098:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8151:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"8156:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5442,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"8120:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8120:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5446,"nodeType":"RevertStatement","src":"8113:49:18"}]}},{"expression":{"arguments":[{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"8199:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8191:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5449,"name":"uint152","nodeType":"ElementaryTypeName","src":"8191:7:18","typeDescriptions":{}}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8191:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5434,"id":5453,"nodeType":"Return","src":"8184:21:18"}]},"documentation":{"id":5428,"nodeType":"StructuredDocumentation","src":"7695:289:18","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5455,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7999:9:18","nodeType":"FunctionDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"value","nameLocation":"8017:5:18","nodeType":"VariableDeclaration","scope":5455,"src":"8009:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5429,"name":"uint256","nodeType":"ElementaryTypeName","src":"8009:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8008:15:18"},"returnParameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5455,"src":"8047:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5432,"name":"uint152","nodeType":"ElementaryTypeName","src":"8047:7:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"8046:9:18"},"scope":6829,"src":"7990:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5482,"nodeType":"Block","src":"8582:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8597:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8610:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5465,"name":"uint144","nodeType":"ElementaryTypeName","src":"8610:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5464,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8605:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8605:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8619:3:18","memberName":"max","nodeType":"MemberAccess","src":"8605:17:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8597:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5476,"nodeType":"IfStatement","src":"8593:107:18","trueBody":{"id":5475,"nodeType":"Block","src":"8624:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8677:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8682:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5470,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"8646:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8646:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5474,"nodeType":"RevertStatement","src":"8639:49:18"}]}},{"expression":{"arguments":[{"id":5479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8725:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8717:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5477,"name":"uint144","nodeType":"ElementaryTypeName","src":"8717:7:18","typeDescriptions":{}}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8717:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5462,"id":5481,"nodeType":"Return","src":"8710:21:18"}]},"documentation":{"id":5456,"nodeType":"StructuredDocumentation","src":"8221:289:18","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5483,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8525:9:18","nodeType":"FunctionDefinition","parameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"value","nameLocation":"8543:5:18","nodeType":"VariableDeclaration","scope":5483,"src":"8535:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5457,"name":"uint256","nodeType":"ElementaryTypeName","src":"8535:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:15:18"},"returnParameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5483,"src":"8573:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5460,"name":"uint144","nodeType":"ElementaryTypeName","src":"8573:7:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8572:9:18"},"scope":6829,"src":"8516:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5510,"nodeType":"Block","src":"9108:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"9123:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9136:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5493,"name":"uint136","nodeType":"ElementaryTypeName","src":"9136:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5492,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9131:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9145:3:18","memberName":"max","nodeType":"MemberAccess","src":"9131:17:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"9123:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5504,"nodeType":"IfStatement","src":"9119:107:18","trueBody":{"id":5503,"nodeType":"Block","src":"9150:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"9208:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5498,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"9172:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9172:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5502,"nodeType":"RevertStatement","src":"9165:49:18"}]}},{"expression":{"arguments":[{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"9251:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9243:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5505,"name":"uint136","nodeType":"ElementaryTypeName","src":"9243:7:18","typeDescriptions":{}}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9243:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5490,"id":5509,"nodeType":"Return","src":"9236:21:18"}]},"documentation":{"id":5484,"nodeType":"StructuredDocumentation","src":"8747:289:18","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5511,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"9051:9:18","nodeType":"FunctionDefinition","parameters":{"id":5487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5486,"mutability":"mutable","name":"value","nameLocation":"9069:5:18","nodeType":"VariableDeclaration","scope":5511,"src":"9061:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9060:15:18"},"returnParameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5511,"src":"9099:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5488,"name":"uint136","nodeType":"ElementaryTypeName","src":"9099:7:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"9098:9:18"},"scope":6829,"src":"9042:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5538,"nodeType":"Block","src":"9634:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"9649:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9662:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5521,"name":"uint128","nodeType":"ElementaryTypeName","src":"9662:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5520,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9657:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9657:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9671:3:18","memberName":"max","nodeType":"MemberAccess","src":"9657:17:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9649:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5532,"nodeType":"IfStatement","src":"9645:107:18","trueBody":{"id":5531,"nodeType":"Block","src":"9676:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9729:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"9734:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5526,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"9698:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5530,"nodeType":"RevertStatement","src":"9691:49:18"}]}},{"expression":{"arguments":[{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"9777:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9769:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5533,"name":"uint128","nodeType":"ElementaryTypeName","src":"9769:7:18","typeDescriptions":{}}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9769:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5518,"id":5537,"nodeType":"Return","src":"9762:21:18"}]},"documentation":{"id":5512,"nodeType":"StructuredDocumentation","src":"9273:289:18","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5539,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9577:9:18","nodeType":"FunctionDefinition","parameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"value","nameLocation":"9595:5:18","nodeType":"VariableDeclaration","scope":5539,"src":"9587:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5513,"name":"uint256","nodeType":"ElementaryTypeName","src":"9587:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9586:15:18"},"returnParameters":{"id":5518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5539,"src":"9625:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5516,"name":"uint128","nodeType":"ElementaryTypeName","src":"9625:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9624:9:18"},"scope":6829,"src":"9568:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5566,"nodeType":"Block","src":"10160:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"10175:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10188:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5549,"name":"uint120","nodeType":"ElementaryTypeName","src":"10188:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5548,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10183:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10183:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10197:3:18","memberName":"max","nodeType":"MemberAccess","src":"10183:17:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"10175:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5560,"nodeType":"IfStatement","src":"10171:107:18","trueBody":{"id":5559,"nodeType":"Block","src":"10202:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10255:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"10260:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5554,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"10224:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5558,"nodeType":"RevertStatement","src":"10217:49:18"}]}},{"expression":{"arguments":[{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"10303:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10295:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5561,"name":"uint120","nodeType":"ElementaryTypeName","src":"10295:7:18","typeDescriptions":{}}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10295:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5546,"id":5565,"nodeType":"Return","src":"10288:21:18"}]},"documentation":{"id":5540,"nodeType":"StructuredDocumentation","src":"9799:289:18","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5567,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"10103:9:18","nodeType":"FunctionDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"value","nameLocation":"10121:5:18","nodeType":"VariableDeclaration","scope":5567,"src":"10113:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"10113:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10112:15:18"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5567,"src":"10151:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5544,"name":"uint120","nodeType":"ElementaryTypeName","src":"10151:7:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"10150:9:18"},"scope":6829,"src":"10094:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5594,"nodeType":"Block","src":"10686:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"10701:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10714:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5577,"name":"uint112","nodeType":"ElementaryTypeName","src":"10714:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10709:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10709:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10723:3:18","memberName":"max","nodeType":"MemberAccess","src":"10709:17:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10701:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5588,"nodeType":"IfStatement","src":"10697:107:18","trueBody":{"id":5587,"nodeType":"Block","src":"10728:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10781:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"10786:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5582,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"10750:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10750:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5586,"nodeType":"RevertStatement","src":"10743:49:18"}]}},{"expression":{"arguments":[{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"10829:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10821:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5589,"name":"uint112","nodeType":"ElementaryTypeName","src":"10821:7:18","typeDescriptions":{}}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10821:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5574,"id":5593,"nodeType":"Return","src":"10814:21:18"}]},"documentation":{"id":5568,"nodeType":"StructuredDocumentation","src":"10325:289:18","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5595,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10629:9:18","nodeType":"FunctionDefinition","parameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"value","nameLocation":"10647:5:18","nodeType":"VariableDeclaration","scope":5595,"src":"10639:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"10639:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10638:15:18"},"returnParameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5595,"src":"10677:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5572,"name":"uint112","nodeType":"ElementaryTypeName","src":"10677:7:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10676:9:18"},"scope":6829,"src":"10620:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5622,"nodeType":"Block","src":"11212:157:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"11227:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11240:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5605,"name":"uint104","nodeType":"ElementaryTypeName","src":"11240:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5604,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11235:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11235:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11249:3:18","memberName":"max","nodeType":"MemberAccess","src":"11235:17:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"11227:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5616,"nodeType":"IfStatement","src":"11223:107:18","trueBody":{"id":5615,"nodeType":"Block","src":"11254:76:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11307:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"11312:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5610,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"11276:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11276:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5614,"nodeType":"RevertStatement","src":"11269:49:18"}]}},{"expression":{"arguments":[{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"11355:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11347:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5617,"name":"uint104","nodeType":"ElementaryTypeName","src":"11347:7:18","typeDescriptions":{}}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11347:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5602,"id":5621,"nodeType":"Return","src":"11340:21:18"}]},"documentation":{"id":5596,"nodeType":"StructuredDocumentation","src":"10851:289:18","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5623,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"11155:9:18","nodeType":"FunctionDefinition","parameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"value","nameLocation":"11173:5:18","nodeType":"VariableDeclaration","scope":5623,"src":"11165:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"11165:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11164:15:18"},"returnParameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5623,"src":"11203:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5600,"name":"uint104","nodeType":"ElementaryTypeName","src":"11203:7:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"11202:9:18"},"scope":6829,"src":"11146:223:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5650,"nodeType":"Block","src":"11732:154:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"11747:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11760:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5633,"name":"uint96","nodeType":"ElementaryTypeName","src":"11760:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5632,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11755:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11755:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11768:3:18","memberName":"max","nodeType":"MemberAccess","src":"11755:16:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11747:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5644,"nodeType":"IfStatement","src":"11743:105:18","trueBody":{"id":5643,"nodeType":"Block","src":"11773:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11826:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"11830:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5638,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"11795:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11795:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5642,"nodeType":"RevertStatement","src":"11788:48:18"}]}},{"expression":{"arguments":[{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"11872:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11865:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5645,"name":"uint96","nodeType":"ElementaryTypeName","src":"11865:6:18","typeDescriptions":{}}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11865:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5630,"id":5649,"nodeType":"Return","src":"11858:20:18"}]},"documentation":{"id":5624,"nodeType":"StructuredDocumentation","src":"11377:285:18","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5651,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11677:8:18","nodeType":"FunctionDefinition","parameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5626,"mutability":"mutable","name":"value","nameLocation":"11694:5:18","nodeType":"VariableDeclaration","scope":5651,"src":"11686:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5625,"name":"uint256","nodeType":"ElementaryTypeName","src":"11686:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11685:15:18"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5651,"src":"11724:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5628,"name":"uint96","nodeType":"ElementaryTypeName","src":"11724:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11723:8:18"},"scope":6829,"src":"11668:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5678,"nodeType":"Block","src":"12249:154:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"12264:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12277:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5661,"name":"uint88","nodeType":"ElementaryTypeName","src":"12277:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5660,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12272:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12272:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12285:3:18","memberName":"max","nodeType":"MemberAccess","src":"12272:16:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"12264:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5672,"nodeType":"IfStatement","src":"12260:105:18","trueBody":{"id":5671,"nodeType":"Block","src":"12290:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12343:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"12347:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5666,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"12312:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12312:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5670,"nodeType":"RevertStatement","src":"12305:48:18"}]}},{"expression":{"arguments":[{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"12389:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5673,"name":"uint88","nodeType":"ElementaryTypeName","src":"12382:6:18","typeDescriptions":{}}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5658,"id":5677,"nodeType":"Return","src":"12375:20:18"}]},"documentation":{"id":5652,"nodeType":"StructuredDocumentation","src":"11894:285:18","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5679,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"12194:8:18","nodeType":"FunctionDefinition","parameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"value","nameLocation":"12211:5:18","nodeType":"VariableDeclaration","scope":5679,"src":"12203:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5653,"name":"uint256","nodeType":"ElementaryTypeName","src":"12203:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12202:15:18"},"returnParameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"12241:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5656,"name":"uint88","nodeType":"ElementaryTypeName","src":"12241:6:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"12240:8:18"},"scope":6829,"src":"12185:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5706,"nodeType":"Block","src":"12766:154:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"12781:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12794:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5689,"name":"uint80","nodeType":"ElementaryTypeName","src":"12794:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5688,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12789:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12789:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12802:3:18","memberName":"max","nodeType":"MemberAccess","src":"12789:16:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12781:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5700,"nodeType":"IfStatement","src":"12777:105:18","trueBody":{"id":5699,"nodeType":"Block","src":"12807:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12860:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"12864:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5694,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"12829:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12829:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5698,"nodeType":"RevertStatement","src":"12822:48:18"}]}},{"expression":{"arguments":[{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"12906:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12899:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5701,"name":"uint80","nodeType":"ElementaryTypeName","src":"12899:6:18","typeDescriptions":{}}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12899:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5686,"id":5705,"nodeType":"Return","src":"12892:20:18"}]},"documentation":{"id":5680,"nodeType":"StructuredDocumentation","src":"12411:285:18","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5707,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12711:8:18","nodeType":"FunctionDefinition","parameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"value","nameLocation":"12728:5:18","nodeType":"VariableDeclaration","scope":5707,"src":"12720:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12719:15:18"},"returnParameters":{"id":5686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5707,"src":"12758:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5684,"name":"uint80","nodeType":"ElementaryTypeName","src":"12758:6:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12757:8:18"},"scope":6829,"src":"12702:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5734,"nodeType":"Block","src":"13283:154:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"13298:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13311:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5717,"name":"uint72","nodeType":"ElementaryTypeName","src":"13311:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5716,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13306:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13306:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13319:3:18","memberName":"max","nodeType":"MemberAccess","src":"13306:16:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"13298:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5728,"nodeType":"IfStatement","src":"13294:105:18","trueBody":{"id":5727,"nodeType":"Block","src":"13324:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13377:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"13381:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5722,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"13346:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13346:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5726,"nodeType":"RevertStatement","src":"13339:48:18"}]}},{"expression":{"arguments":[{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"13423:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13416:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5729,"name":"uint72","nodeType":"ElementaryTypeName","src":"13416:6:18","typeDescriptions":{}}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5714,"id":5733,"nodeType":"Return","src":"13409:20:18"}]},"documentation":{"id":5708,"nodeType":"StructuredDocumentation","src":"12928:285:18","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5735,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"13228:8:18","nodeType":"FunctionDefinition","parameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"value","nameLocation":"13245:5:18","nodeType":"VariableDeclaration","scope":5735,"src":"13237:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5709,"name":"uint256","nodeType":"ElementaryTypeName","src":"13237:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13236:15:18"},"returnParameters":{"id":5714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5735,"src":"13275:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5712,"name":"uint72","nodeType":"ElementaryTypeName","src":"13275:6:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"13274:8:18"},"scope":6829,"src":"13219:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5762,"nodeType":"Block","src":"13800:154:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"13815:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13828:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5745,"name":"uint64","nodeType":"ElementaryTypeName","src":"13828:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5744,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13823:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13823:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13836:3:18","memberName":"max","nodeType":"MemberAccess","src":"13823:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13815:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5756,"nodeType":"IfStatement","src":"13811:105:18","trueBody":{"id":5755,"nodeType":"Block","src":"13841:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13894:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"13898:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5750,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"13863:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13863:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5754,"nodeType":"RevertStatement","src":"13856:48:18"}]}},{"expression":{"arguments":[{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"13940:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13933:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5757,"name":"uint64","nodeType":"ElementaryTypeName","src":"13933:6:18","typeDescriptions":{}}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13933:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5742,"id":5761,"nodeType":"Return","src":"13926:20:18"}]},"documentation":{"id":5736,"nodeType":"StructuredDocumentation","src":"13445:285:18","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5763,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13745:8:18","nodeType":"FunctionDefinition","parameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"value","nameLocation":"13762:5:18","nodeType":"VariableDeclaration","scope":5763,"src":"13754:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5737,"name":"uint256","nodeType":"ElementaryTypeName","src":"13754:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13753:15:18"},"returnParameters":{"id":5742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5763,"src":"13792:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5740,"name":"uint64","nodeType":"ElementaryTypeName","src":"13792:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13791:8:18"},"scope":6829,"src":"13736:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5790,"nodeType":"Block","src":"14317:154:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"14332:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14345:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5773,"name":"uint56","nodeType":"ElementaryTypeName","src":"14345:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5772,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14340:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14340:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14353:3:18","memberName":"max","nodeType":"MemberAccess","src":"14340:16:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"14332:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5784,"nodeType":"IfStatement","src":"14328:105:18","trueBody":{"id":5783,"nodeType":"Block","src":"14358:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14411:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"14415:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5778,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"14380:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14380:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5782,"nodeType":"RevertStatement","src":"14373:48:18"}]}},{"expression":{"arguments":[{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"14457:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14450:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5785,"name":"uint56","nodeType":"ElementaryTypeName","src":"14450:6:18","typeDescriptions":{}}},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14450:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5770,"id":5789,"nodeType":"Return","src":"14443:20:18"}]},"documentation":{"id":5764,"nodeType":"StructuredDocumentation","src":"13962:285:18","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5791,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"14262:8:18","nodeType":"FunctionDefinition","parameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"value","nameLocation":"14279:5:18","nodeType":"VariableDeclaration","scope":5791,"src":"14271:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5765,"name":"uint256","nodeType":"ElementaryTypeName","src":"14271:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14270:15:18"},"returnParameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5791,"src":"14309:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5768,"name":"uint56","nodeType":"ElementaryTypeName","src":"14309:6:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"14308:8:18"},"scope":6829,"src":"14253:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5818,"nodeType":"Block","src":"14834:154:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"14849:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14862:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5801,"name":"uint48","nodeType":"ElementaryTypeName","src":"14862:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5800,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14857:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14857:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14870:3:18","memberName":"max","nodeType":"MemberAccess","src":"14857:16:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14849:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5812,"nodeType":"IfStatement","src":"14845:105:18","trueBody":{"id":5811,"nodeType":"Block","src":"14875:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14928:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"14932:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5806,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"14897:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14897:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5810,"nodeType":"RevertStatement","src":"14890:48:18"}]}},{"expression":{"arguments":[{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"14974:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14967:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5813,"name":"uint48","nodeType":"ElementaryTypeName","src":"14967:6:18","typeDescriptions":{}}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14967:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5798,"id":5817,"nodeType":"Return","src":"14960:20:18"}]},"documentation":{"id":5792,"nodeType":"StructuredDocumentation","src":"14479:285:18","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5819,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14779:8:18","nodeType":"FunctionDefinition","parameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5794,"mutability":"mutable","name":"value","nameLocation":"14796:5:18","nodeType":"VariableDeclaration","scope":5819,"src":"14788:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5793,"name":"uint256","nodeType":"ElementaryTypeName","src":"14788:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14787:15:18"},"returnParameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5819,"src":"14826:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5796,"name":"uint48","nodeType":"ElementaryTypeName","src":"14826:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14825:8:18"},"scope":6829,"src":"14770:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5846,"nodeType":"Block","src":"15351:154:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"15366:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15379:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5829,"name":"uint40","nodeType":"ElementaryTypeName","src":"15379:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5828,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15374:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15374:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15387:3:18","memberName":"max","nodeType":"MemberAccess","src":"15374:16:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"15366:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5840,"nodeType":"IfStatement","src":"15362:105:18","trueBody":{"id":5839,"nodeType":"Block","src":"15392:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15445:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"15449:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5834,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"15414:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15414:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5838,"nodeType":"RevertStatement","src":"15407:48:18"}]}},{"expression":{"arguments":[{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"15491:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5841,"name":"uint40","nodeType":"ElementaryTypeName","src":"15484:6:18","typeDescriptions":{}}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5826,"id":5845,"nodeType":"Return","src":"15477:20:18"}]},"documentation":{"id":5820,"nodeType":"StructuredDocumentation","src":"14996:285:18","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5847,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"15296:8:18","nodeType":"FunctionDefinition","parameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"value","nameLocation":"15313:5:18","nodeType":"VariableDeclaration","scope":5847,"src":"15305:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5821,"name":"uint256","nodeType":"ElementaryTypeName","src":"15305:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15304:15:18"},"returnParameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5847,"src":"15343:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5824,"name":"uint40","nodeType":"ElementaryTypeName","src":"15343:6:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"15342:8:18"},"scope":6829,"src":"15287:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5874,"nodeType":"Block","src":"15868:154:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"15883:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15896:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5857,"name":"uint32","nodeType":"ElementaryTypeName","src":"15896:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5856,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15891:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15891:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15904:3:18","memberName":"max","nodeType":"MemberAccess","src":"15891:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15883:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5868,"nodeType":"IfStatement","src":"15879:105:18","trueBody":{"id":5867,"nodeType":"Block","src":"15909:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15962:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"15966:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5862,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"15931:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15931:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5866,"nodeType":"RevertStatement","src":"15924:48:18"}]}},{"expression":{"arguments":[{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"16008:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16001:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5869,"name":"uint32","nodeType":"ElementaryTypeName","src":"16001:6:18","typeDescriptions":{}}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16001:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5854,"id":5873,"nodeType":"Return","src":"15994:20:18"}]},"documentation":{"id":5848,"nodeType":"StructuredDocumentation","src":"15513:285:18","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5875,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15813:8:18","nodeType":"FunctionDefinition","parameters":{"id":5851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5850,"mutability":"mutable","name":"value","nameLocation":"15830:5:18","nodeType":"VariableDeclaration","scope":5875,"src":"15822:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5849,"name":"uint256","nodeType":"ElementaryTypeName","src":"15822:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15821:15:18"},"returnParameters":{"id":5854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5875,"src":"15860:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5852,"name":"uint32","nodeType":"ElementaryTypeName","src":"15860:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15859:8:18"},"scope":6829,"src":"15804:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5902,"nodeType":"Block","src":"16385:154:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"16400:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16413:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5885,"name":"uint24","nodeType":"ElementaryTypeName","src":"16413:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5884,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16408:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16408:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16421:3:18","memberName":"max","nodeType":"MemberAccess","src":"16408:16:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"16400:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5896,"nodeType":"IfStatement","src":"16396:105:18","trueBody":{"id":5895,"nodeType":"Block","src":"16426:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16479:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"16483:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5890,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"16448:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16448:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5894,"nodeType":"RevertStatement","src":"16441:48:18"}]}},{"expression":{"arguments":[{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"16525:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16518:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5897,"name":"uint24","nodeType":"ElementaryTypeName","src":"16518:6:18","typeDescriptions":{}}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16518:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5882,"id":5901,"nodeType":"Return","src":"16511:20:18"}]},"documentation":{"id":5876,"nodeType":"StructuredDocumentation","src":"16030:285:18","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5903,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"16330:8:18","nodeType":"FunctionDefinition","parameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"value","nameLocation":"16347:5:18","nodeType":"VariableDeclaration","scope":5903,"src":"16339:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5877,"name":"uint256","nodeType":"ElementaryTypeName","src":"16339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16338:15:18"},"returnParameters":{"id":5882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5903,"src":"16377:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5880,"name":"uint24","nodeType":"ElementaryTypeName","src":"16377:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"16376:8:18"},"scope":6829,"src":"16321:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5930,"nodeType":"Block","src":"16902:154:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"16917:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16930:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5913,"name":"uint16","nodeType":"ElementaryTypeName","src":"16930:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5912,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16925:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16925:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16938:3:18","memberName":"max","nodeType":"MemberAccess","src":"16925:16:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16917:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5924,"nodeType":"IfStatement","src":"16913:105:18","trueBody":{"id":5923,"nodeType":"Block","src":"16943:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16996:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"17000:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5918,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"16965:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16965:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5922,"nodeType":"RevertStatement","src":"16958:48:18"}]}},{"expression":{"arguments":[{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"17042:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17035:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5925,"name":"uint16","nodeType":"ElementaryTypeName","src":"17035:6:18","typeDescriptions":{}}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17035:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5910,"id":5929,"nodeType":"Return","src":"17028:20:18"}]},"documentation":{"id":5904,"nodeType":"StructuredDocumentation","src":"16547:285:18","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5931,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16847:8:18","nodeType":"FunctionDefinition","parameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"value","nameLocation":"16864:5:18","nodeType":"VariableDeclaration","scope":5931,"src":"16856:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5905,"name":"uint256","nodeType":"ElementaryTypeName","src":"16856:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16855:15:18"},"returnParameters":{"id":5910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5931,"src":"16894:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5908,"name":"uint16","nodeType":"ElementaryTypeName","src":"16894:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16893:8:18"},"scope":6829,"src":"16838:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5958,"nodeType":"Block","src":"17413:151:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"17428:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17441:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5941,"name":"uint8","nodeType":"ElementaryTypeName","src":"17441:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5940,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17436:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17436:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17448:3:18","memberName":"max","nodeType":"MemberAccess","src":"17436:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17428:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5952,"nodeType":"IfStatement","src":"17424:103:18","trueBody":{"id":5951,"nodeType":"Block","src":"17453:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17506:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"17509:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5946,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"17475:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17475:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5950,"nodeType":"RevertStatement","src":"17468:47:18"}]}},{"expression":{"arguments":[{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"17550:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17544:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5953,"name":"uint8","nodeType":"ElementaryTypeName","src":"17544:5:18","typeDescriptions":{}}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17544:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5938,"id":5957,"nodeType":"Return","src":"17537:19:18"}]},"documentation":{"id":5932,"nodeType":"StructuredDocumentation","src":"17064:281:18","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5959,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"17360:7:18","nodeType":"FunctionDefinition","parameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"value","nameLocation":"17376:5:18","nodeType":"VariableDeclaration","scope":5959,"src":"17368:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"17368:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17367:15:18"},"returnParameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5959,"src":"17406:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5936,"name":"uint8","nodeType":"ElementaryTypeName","src":"17406:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"17405:7:18"},"scope":6829,"src":"17351:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5981,"nodeType":"Block","src":"17809:133:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"17824:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17832:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17824:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5975,"nodeType":"IfStatement","src":"17820:83:18","trueBody":{"id":5974,"nodeType":"Block","src":"17835:68:18","statements":[{"errorCall":{"arguments":[{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"17885:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5970,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"17857:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17857:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5973,"nodeType":"RevertStatement","src":"17850:41:18"}]}},{"expression":{"arguments":[{"id":5978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"17928:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17920:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5976,"name":"uint256","nodeType":"ElementaryTypeName","src":"17920:7:18","typeDescriptions":{}}},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17920:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5966,"id":5980,"nodeType":"Return","src":"17913:21:18"}]},"documentation":{"id":5960,"nodeType":"StructuredDocumentation","src":"17572:166:18","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5982,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17753:9:18","nodeType":"FunctionDefinition","parameters":{"id":5963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"value","nameLocation":"17770:5:18","nodeType":"VariableDeclaration","scope":5982,"src":"17763:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5961,"name":"int256","nodeType":"ElementaryTypeName","src":"17763:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17762:14:18"},"returnParameters":{"id":5966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5982,"src":"17800:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5964,"name":"uint256","nodeType":"ElementaryTypeName","src":"17800:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17799:9:18"},"scope":6829,"src":"17744:198:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6007,"nodeType":"Block","src":"18352:155:18","statements":[{"expression":{"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"18363:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"18383:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18376:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5991,"name":"int248","nodeType":"ElementaryTypeName","src":"18376:6:18","typeDescriptions":{}}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18376:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"18363:26:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5996,"nodeType":"ExpressionStatement","src":"18363:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"18404:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"18418:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18404:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6006,"nodeType":"IfStatement","src":"18400:100:18","trueBody":{"id":6005,"nodeType":"Block","src":"18425:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18477:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"18482:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6000,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"18447:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18447:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6004,"nodeType":"RevertStatement","src":"18440:48:18"}]}}]},"documentation":{"id":5983,"nodeType":"StructuredDocumentation","src":"17950:322:18","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6008,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"18287:8:18","nodeType":"FunctionDefinition","parameters":{"id":5986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5985,"mutability":"mutable","name":"value","nameLocation":"18303:5:18","nodeType":"VariableDeclaration","scope":6008,"src":"18296:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5984,"name":"int256","nodeType":"ElementaryTypeName","src":"18296:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18295:14:18"},"returnParameters":{"id":5989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5988,"mutability":"mutable","name":"downcasted","nameLocation":"18340:10:18","nodeType":"VariableDeclaration","scope":6008,"src":"18333:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5987,"name":"int248","nodeType":"ElementaryTypeName","src":"18333:6:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"18332:19:18"},"scope":6829,"src":"18278:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6033,"nodeType":"Block","src":"18917:155:18","statements":[{"expression":{"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6016,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"18928:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"18948:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18941:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6017,"name":"int240","nodeType":"ElementaryTypeName","src":"18941:6:18","typeDescriptions":{}}},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18941:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18928:26:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6022,"nodeType":"ExpressionStatement","src":"18928:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"18969:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"18983:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18969:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6032,"nodeType":"IfStatement","src":"18965:100:18","trueBody":{"id":6031,"nodeType":"Block","src":"18990:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19042:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"19047:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6026,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"19012:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19012:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6030,"nodeType":"RevertStatement","src":"19005:48:18"}]}}]},"documentation":{"id":6009,"nodeType":"StructuredDocumentation","src":"18515:322:18","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6034,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18852:8:18","nodeType":"FunctionDefinition","parameters":{"id":6012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6011,"mutability":"mutable","name":"value","nameLocation":"18868:5:18","nodeType":"VariableDeclaration","scope":6034,"src":"18861:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6010,"name":"int256","nodeType":"ElementaryTypeName","src":"18861:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18860:14:18"},"returnParameters":{"id":6015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6014,"mutability":"mutable","name":"downcasted","nameLocation":"18905:10:18","nodeType":"VariableDeclaration","scope":6034,"src":"18898:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6013,"name":"int240","nodeType":"ElementaryTypeName","src":"18898:6:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18897:19:18"},"scope":6829,"src":"18843:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6059,"nodeType":"Block","src":"19482:155:18","statements":[{"expression":{"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6042,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"19493:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"19513:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19506:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6043,"name":"int232","nodeType":"ElementaryTypeName","src":"19506:6:18","typeDescriptions":{}}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19506:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"19493:26:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6048,"nodeType":"ExpressionStatement","src":"19493:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"19534:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"19548:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19534:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6058,"nodeType":"IfStatement","src":"19530:100:18","trueBody":{"id":6057,"nodeType":"Block","src":"19555:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19607:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"19612:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6052,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"19577:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19577:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6056,"nodeType":"RevertStatement","src":"19570:48:18"}]}}]},"documentation":{"id":6035,"nodeType":"StructuredDocumentation","src":"19080:322:18","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6060,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"19417:8:18","nodeType":"FunctionDefinition","parameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"value","nameLocation":"19433:5:18","nodeType":"VariableDeclaration","scope":6060,"src":"19426:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6036,"name":"int256","nodeType":"ElementaryTypeName","src":"19426:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19425:14:18"},"returnParameters":{"id":6041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6040,"mutability":"mutable","name":"downcasted","nameLocation":"19470:10:18","nodeType":"VariableDeclaration","scope":6060,"src":"19463:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6039,"name":"int232","nodeType":"ElementaryTypeName","src":"19463:6:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"19462:19:18"},"scope":6829,"src":"19408:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6085,"nodeType":"Block","src":"20047:155:18","statements":[{"expression":{"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6068,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"20058:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"20078:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20071:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6069,"name":"int224","nodeType":"ElementaryTypeName","src":"20071:6:18","typeDescriptions":{}}},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20071:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"20058:26:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6074,"nodeType":"ExpressionStatement","src":"20058:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"20099:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"20113:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20099:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6084,"nodeType":"IfStatement","src":"20095:100:18","trueBody":{"id":6083,"nodeType":"Block","src":"20120:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20172:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"20177:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6078,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"20142:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20142:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6082,"nodeType":"RevertStatement","src":"20135:48:18"}]}}]},"documentation":{"id":6061,"nodeType":"StructuredDocumentation","src":"19645:322:18","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6086,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19982:8:18","nodeType":"FunctionDefinition","parameters":{"id":6064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6063,"mutability":"mutable","name":"value","nameLocation":"19998:5:18","nodeType":"VariableDeclaration","scope":6086,"src":"19991:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6062,"name":"int256","nodeType":"ElementaryTypeName","src":"19991:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19990:14:18"},"returnParameters":{"id":6067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6066,"mutability":"mutable","name":"downcasted","nameLocation":"20035:10:18","nodeType":"VariableDeclaration","scope":6086,"src":"20028:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6065,"name":"int224","nodeType":"ElementaryTypeName","src":"20028:6:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"20027:19:18"},"scope":6829,"src":"19973:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6111,"nodeType":"Block","src":"20612:155:18","statements":[{"expression":{"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6094,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"20623:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"20643:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20636:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6095,"name":"int216","nodeType":"ElementaryTypeName","src":"20636:6:18","typeDescriptions":{}}},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20636:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20623:26:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6100,"nodeType":"ExpressionStatement","src":"20623:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"20664:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"20678:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20664:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6110,"nodeType":"IfStatement","src":"20660:100:18","trueBody":{"id":6109,"nodeType":"Block","src":"20685:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20737:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"20742:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6104,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"20707:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20707:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6108,"nodeType":"RevertStatement","src":"20700:48:18"}]}}]},"documentation":{"id":6087,"nodeType":"StructuredDocumentation","src":"20210:322:18","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6112,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"20547:8:18","nodeType":"FunctionDefinition","parameters":{"id":6090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6089,"mutability":"mutable","name":"value","nameLocation":"20563:5:18","nodeType":"VariableDeclaration","scope":6112,"src":"20556:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6088,"name":"int256","nodeType":"ElementaryTypeName","src":"20556:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20555:14:18"},"returnParameters":{"id":6093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6092,"mutability":"mutable","name":"downcasted","nameLocation":"20600:10:18","nodeType":"VariableDeclaration","scope":6112,"src":"20593:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6091,"name":"int216","nodeType":"ElementaryTypeName","src":"20593:6:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20592:19:18"},"scope":6829,"src":"20538:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6137,"nodeType":"Block","src":"21177:155:18","statements":[{"expression":{"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"21188:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"21208:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21201:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6121,"name":"int208","nodeType":"ElementaryTypeName","src":"21201:6:18","typeDescriptions":{}}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21201:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"21188:26:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6126,"nodeType":"ExpressionStatement","src":"21188:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6127,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"21229:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"21243:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21229:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6136,"nodeType":"IfStatement","src":"21225:100:18","trueBody":{"id":6135,"nodeType":"Block","src":"21250:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21302:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"21307:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6130,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"21272:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21272:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6134,"nodeType":"RevertStatement","src":"21265:48:18"}]}}]},"documentation":{"id":6113,"nodeType":"StructuredDocumentation","src":"20775:322:18","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6138,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"21112:8:18","nodeType":"FunctionDefinition","parameters":{"id":6116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"mutability":"mutable","name":"value","nameLocation":"21128:5:18","nodeType":"VariableDeclaration","scope":6138,"src":"21121:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6114,"name":"int256","nodeType":"ElementaryTypeName","src":"21121:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21120:14:18"},"returnParameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"downcasted","nameLocation":"21165:10:18","nodeType":"VariableDeclaration","scope":6138,"src":"21158:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6117,"name":"int208","nodeType":"ElementaryTypeName","src":"21158:6:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"21157:19:18"},"scope":6829,"src":"21103:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6163,"nodeType":"Block","src":"21742:155:18","statements":[{"expression":{"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6146,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"21753:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"21773:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21766:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6147,"name":"int200","nodeType":"ElementaryTypeName","src":"21766:6:18","typeDescriptions":{}}},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21766:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21753:26:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6152,"nodeType":"ExpressionStatement","src":"21753:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"21794:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"21808:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21794:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6162,"nodeType":"IfStatement","src":"21790:100:18","trueBody":{"id":6161,"nodeType":"Block","src":"21815:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21867:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"21872:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6156,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"21837:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21837:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6160,"nodeType":"RevertStatement","src":"21830:48:18"}]}}]},"documentation":{"id":6139,"nodeType":"StructuredDocumentation","src":"21340:322:18","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6164,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21677:8:18","nodeType":"FunctionDefinition","parameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"mutability":"mutable","name":"value","nameLocation":"21693:5:18","nodeType":"VariableDeclaration","scope":6164,"src":"21686:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6140,"name":"int256","nodeType":"ElementaryTypeName","src":"21686:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21685:14:18"},"returnParameters":{"id":6145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6144,"mutability":"mutable","name":"downcasted","nameLocation":"21730:10:18","nodeType":"VariableDeclaration","scope":6164,"src":"21723:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6143,"name":"int200","nodeType":"ElementaryTypeName","src":"21723:6:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21722:19:18"},"scope":6829,"src":"21668:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6189,"nodeType":"Block","src":"22307:155:18","statements":[{"expression":{"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6172,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"22318:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"22338:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22331:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6173,"name":"int192","nodeType":"ElementaryTypeName","src":"22331:6:18","typeDescriptions":{}}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22331:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"22318:26:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6178,"nodeType":"ExpressionStatement","src":"22318:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"22359:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"22373:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22359:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6188,"nodeType":"IfStatement","src":"22355:100:18","trueBody":{"id":6187,"nodeType":"Block","src":"22380:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22432:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"22437:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6182,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"22402:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22402:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6186,"nodeType":"RevertStatement","src":"22395:48:18"}]}}]},"documentation":{"id":6165,"nodeType":"StructuredDocumentation","src":"21905:322:18","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6190,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"22242:8:18","nodeType":"FunctionDefinition","parameters":{"id":6168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6167,"mutability":"mutable","name":"value","nameLocation":"22258:5:18","nodeType":"VariableDeclaration","scope":6190,"src":"22251:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6166,"name":"int256","nodeType":"ElementaryTypeName","src":"22251:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22250:14:18"},"returnParameters":{"id":6171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"downcasted","nameLocation":"22295:10:18","nodeType":"VariableDeclaration","scope":6190,"src":"22288:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6169,"name":"int192","nodeType":"ElementaryTypeName","src":"22288:6:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"22287:19:18"},"scope":6829,"src":"22233:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6215,"nodeType":"Block","src":"22872:155:18","statements":[{"expression":{"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6198,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"22883:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"22903:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22896:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6199,"name":"int184","nodeType":"ElementaryTypeName","src":"22896:6:18","typeDescriptions":{}}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22896:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22883:26:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6204,"nodeType":"ExpressionStatement","src":"22883:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"22924:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"22938:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22924:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6214,"nodeType":"IfStatement","src":"22920:100:18","trueBody":{"id":6213,"nodeType":"Block","src":"22945:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22997:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"23002:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6208,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"22967:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22967:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6212,"nodeType":"RevertStatement","src":"22960:48:18"}]}}]},"documentation":{"id":6191,"nodeType":"StructuredDocumentation","src":"22470:322:18","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6216,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22807:8:18","nodeType":"FunctionDefinition","parameters":{"id":6194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6193,"mutability":"mutable","name":"value","nameLocation":"22823:5:18","nodeType":"VariableDeclaration","scope":6216,"src":"22816:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6192,"name":"int256","nodeType":"ElementaryTypeName","src":"22816:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22815:14:18"},"returnParameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"downcasted","nameLocation":"22860:10:18","nodeType":"VariableDeclaration","scope":6216,"src":"22853:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6195,"name":"int184","nodeType":"ElementaryTypeName","src":"22853:6:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22852:19:18"},"scope":6829,"src":"22798:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6241,"nodeType":"Block","src":"23437:155:18","statements":[{"expression":{"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6224,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"23448:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"23468:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23461:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6225,"name":"int176","nodeType":"ElementaryTypeName","src":"23461:6:18","typeDescriptions":{}}},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23461:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"23448:26:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6230,"nodeType":"ExpressionStatement","src":"23448:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6231,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"23489:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"23503:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23489:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6240,"nodeType":"IfStatement","src":"23485:100:18","trueBody":{"id":6239,"nodeType":"Block","src":"23510:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23562:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"23567:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6234,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"23532:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23532:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6238,"nodeType":"RevertStatement","src":"23525:48:18"}]}}]},"documentation":{"id":6217,"nodeType":"StructuredDocumentation","src":"23035:322:18","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6242,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"23372:8:18","nodeType":"FunctionDefinition","parameters":{"id":6220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6219,"mutability":"mutable","name":"value","nameLocation":"23388:5:18","nodeType":"VariableDeclaration","scope":6242,"src":"23381:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6218,"name":"int256","nodeType":"ElementaryTypeName","src":"23381:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23380:14:18"},"returnParameters":{"id":6223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6222,"mutability":"mutable","name":"downcasted","nameLocation":"23425:10:18","nodeType":"VariableDeclaration","scope":6242,"src":"23418:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6221,"name":"int176","nodeType":"ElementaryTypeName","src":"23418:6:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"23417:19:18"},"scope":6829,"src":"23363:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6267,"nodeType":"Block","src":"24002:155:18","statements":[{"expression":{"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6250,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"24013:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"24033:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24026:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6251,"name":"int168","nodeType":"ElementaryTypeName","src":"24026:6:18","typeDescriptions":{}}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24026:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"24013:26:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6256,"nodeType":"ExpressionStatement","src":"24013:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6257,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"24054:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"24068:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24054:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6266,"nodeType":"IfStatement","src":"24050:100:18","trueBody":{"id":6265,"nodeType":"Block","src":"24075:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24127:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"24132:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6260,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"24097:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24097:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6264,"nodeType":"RevertStatement","src":"24090:48:18"}]}}]},"documentation":{"id":6243,"nodeType":"StructuredDocumentation","src":"23600:322:18","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6268,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23937:8:18","nodeType":"FunctionDefinition","parameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6245,"mutability":"mutable","name":"value","nameLocation":"23953:5:18","nodeType":"VariableDeclaration","scope":6268,"src":"23946:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6244,"name":"int256","nodeType":"ElementaryTypeName","src":"23946:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23945:14:18"},"returnParameters":{"id":6249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6248,"mutability":"mutable","name":"downcasted","nameLocation":"23990:10:18","nodeType":"VariableDeclaration","scope":6268,"src":"23983:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6247,"name":"int168","nodeType":"ElementaryTypeName","src":"23983:6:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23982:19:18"},"scope":6829,"src":"23928:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6293,"nodeType":"Block","src":"24567:155:18","statements":[{"expression":{"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"24578:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"24598:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24591:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6277,"name":"int160","nodeType":"ElementaryTypeName","src":"24591:6:18","typeDescriptions":{}}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24591:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24578:26:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6282,"nodeType":"ExpressionStatement","src":"24578:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"24619:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"24633:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24619:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6292,"nodeType":"IfStatement","src":"24615:100:18","trueBody":{"id":6291,"nodeType":"Block","src":"24640:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24692:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"24697:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6286,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"24662:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24662:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6290,"nodeType":"RevertStatement","src":"24655:48:18"}]}}]},"documentation":{"id":6269,"nodeType":"StructuredDocumentation","src":"24165:322:18","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6294,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"24502:8:18","nodeType":"FunctionDefinition","parameters":{"id":6272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6271,"mutability":"mutable","name":"value","nameLocation":"24518:5:18","nodeType":"VariableDeclaration","scope":6294,"src":"24511:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6270,"name":"int256","nodeType":"ElementaryTypeName","src":"24511:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24510:14:18"},"returnParameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6274,"mutability":"mutable","name":"downcasted","nameLocation":"24555:10:18","nodeType":"VariableDeclaration","scope":6294,"src":"24548:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6273,"name":"int160","nodeType":"ElementaryTypeName","src":"24548:6:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"24547:19:18"},"scope":6829,"src":"24493:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6319,"nodeType":"Block","src":"25132:155:18","statements":[{"expression":{"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6302,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"25143:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"25163:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25156:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6303,"name":"int152","nodeType":"ElementaryTypeName","src":"25156:6:18","typeDescriptions":{}}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25156:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"25143:26:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6308,"nodeType":"ExpressionStatement","src":"25143:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6309,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"25184:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"25198:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25184:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6318,"nodeType":"IfStatement","src":"25180:100:18","trueBody":{"id":6317,"nodeType":"Block","src":"25205:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25257:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"25262:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6312,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"25227:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25227:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6316,"nodeType":"RevertStatement","src":"25220:48:18"}]}}]},"documentation":{"id":6295,"nodeType":"StructuredDocumentation","src":"24730:322:18","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6320,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"25067:8:18","nodeType":"FunctionDefinition","parameters":{"id":6298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"value","nameLocation":"25083:5:18","nodeType":"VariableDeclaration","scope":6320,"src":"25076:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6296,"name":"int256","nodeType":"ElementaryTypeName","src":"25076:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25075:14:18"},"returnParameters":{"id":6301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6300,"mutability":"mutable","name":"downcasted","nameLocation":"25120:10:18","nodeType":"VariableDeclaration","scope":6320,"src":"25113:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6299,"name":"int152","nodeType":"ElementaryTypeName","src":"25113:6:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"25112:19:18"},"scope":6829,"src":"25058:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6345,"nodeType":"Block","src":"25697:155:18","statements":[{"expression":{"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6328,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"25708:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"25728:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25721:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6329,"name":"int144","nodeType":"ElementaryTypeName","src":"25721:6:18","typeDescriptions":{}}},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25721:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25708:26:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6334,"nodeType":"ExpressionStatement","src":"25708:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6335,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"25749:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"25763:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25749:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6344,"nodeType":"IfStatement","src":"25745:100:18","trueBody":{"id":6343,"nodeType":"Block","src":"25770:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25822:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"25827:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6338,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"25792:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25792:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6342,"nodeType":"RevertStatement","src":"25785:48:18"}]}}]},"documentation":{"id":6321,"nodeType":"StructuredDocumentation","src":"25295:322:18","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6346,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"25632:8:18","nodeType":"FunctionDefinition","parameters":{"id":6324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6323,"mutability":"mutable","name":"value","nameLocation":"25648:5:18","nodeType":"VariableDeclaration","scope":6346,"src":"25641:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6322,"name":"int256","nodeType":"ElementaryTypeName","src":"25641:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25640:14:18"},"returnParameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"downcasted","nameLocation":"25685:10:18","nodeType":"VariableDeclaration","scope":6346,"src":"25678:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6325,"name":"int144","nodeType":"ElementaryTypeName","src":"25678:6:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25677:19:18"},"scope":6829,"src":"25623:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6371,"nodeType":"Block","src":"26262:155:18","statements":[{"expression":{"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6354,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"26273:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"26293:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26286:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6355,"name":"int136","nodeType":"ElementaryTypeName","src":"26286:6:18","typeDescriptions":{}}},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26286:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"26273:26:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6360,"nodeType":"ExpressionStatement","src":"26273:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6361,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"26314:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"26328:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26314:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6370,"nodeType":"IfStatement","src":"26310:100:18","trueBody":{"id":6369,"nodeType":"Block","src":"26335:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"26392:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6364,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"26357:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26357:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6368,"nodeType":"RevertStatement","src":"26350:48:18"}]}}]},"documentation":{"id":6347,"nodeType":"StructuredDocumentation","src":"25860:322:18","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6372,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"26197:8:18","nodeType":"FunctionDefinition","parameters":{"id":6350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6349,"mutability":"mutable","name":"value","nameLocation":"26213:5:18","nodeType":"VariableDeclaration","scope":6372,"src":"26206:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6348,"name":"int256","nodeType":"ElementaryTypeName","src":"26206:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26205:14:18"},"returnParameters":{"id":6353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"downcasted","nameLocation":"26250:10:18","nodeType":"VariableDeclaration","scope":6372,"src":"26243:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6351,"name":"int136","nodeType":"ElementaryTypeName","src":"26243:6:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"26242:19:18"},"scope":6829,"src":"26188:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6397,"nodeType":"Block","src":"26827:155:18","statements":[{"expression":{"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6380,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"26838:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"26858:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26851:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6381,"name":"int128","nodeType":"ElementaryTypeName","src":"26851:6:18","typeDescriptions":{}}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26851:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26838:26:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6386,"nodeType":"ExpressionStatement","src":"26838:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6387,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"26879:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"26893:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26879:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6396,"nodeType":"IfStatement","src":"26875:100:18","trueBody":{"id":6395,"nodeType":"Block","src":"26900:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26952:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"26957:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6390,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"26922:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26922:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6394,"nodeType":"RevertStatement","src":"26915:48:18"}]}}]},"documentation":{"id":6373,"nodeType":"StructuredDocumentation","src":"26425:322:18","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6398,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26762:8:18","nodeType":"FunctionDefinition","parameters":{"id":6376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6375,"mutability":"mutable","name":"value","nameLocation":"26778:5:18","nodeType":"VariableDeclaration","scope":6398,"src":"26771:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6374,"name":"int256","nodeType":"ElementaryTypeName","src":"26771:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26770:14:18"},"returnParameters":{"id":6379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6378,"mutability":"mutable","name":"downcasted","nameLocation":"26815:10:18","nodeType":"VariableDeclaration","scope":6398,"src":"26808:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6377,"name":"int128","nodeType":"ElementaryTypeName","src":"26808:6:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26807:19:18"},"scope":6829,"src":"26753:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6423,"nodeType":"Block","src":"27392:155:18","statements":[{"expression":{"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"27403:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"27423:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27416:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6407,"name":"int120","nodeType":"ElementaryTypeName","src":"27416:6:18","typeDescriptions":{}}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27416:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"27403:26:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6412,"nodeType":"ExpressionStatement","src":"27403:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6413,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"27444:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"27458:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27444:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6422,"nodeType":"IfStatement","src":"27440:100:18","trueBody":{"id":6421,"nodeType":"Block","src":"27465:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27517:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"27522:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6416,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"27487:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27487:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6420,"nodeType":"RevertStatement","src":"27480:48:18"}]}}]},"documentation":{"id":6399,"nodeType":"StructuredDocumentation","src":"26990:322:18","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6424,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"27327:8:18","nodeType":"FunctionDefinition","parameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"value","nameLocation":"27343:5:18","nodeType":"VariableDeclaration","scope":6424,"src":"27336:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6400,"name":"int256","nodeType":"ElementaryTypeName","src":"27336:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27335:14:18"},"returnParameters":{"id":6405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"downcasted","nameLocation":"27380:10:18","nodeType":"VariableDeclaration","scope":6424,"src":"27373:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6403,"name":"int120","nodeType":"ElementaryTypeName","src":"27373:6:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"27372:19:18"},"scope":6829,"src":"27318:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6449,"nodeType":"Block","src":"27957:155:18","statements":[{"expression":{"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6432,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"27968:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"27988:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27981:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6433,"name":"int112","nodeType":"ElementaryTypeName","src":"27981:6:18","typeDescriptions":{}}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27981:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27968:26:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6438,"nodeType":"ExpressionStatement","src":"27968:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6439,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"28009:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"28023:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28009:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6448,"nodeType":"IfStatement","src":"28005:100:18","trueBody":{"id":6447,"nodeType":"Block","src":"28030:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28082:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"28087:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6442,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"28052:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28052:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6446,"nodeType":"RevertStatement","src":"28045:48:18"}]}}]},"documentation":{"id":6425,"nodeType":"StructuredDocumentation","src":"27555:322:18","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6450,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27892:8:18","nodeType":"FunctionDefinition","parameters":{"id":6428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6427,"mutability":"mutable","name":"value","nameLocation":"27908:5:18","nodeType":"VariableDeclaration","scope":6450,"src":"27901:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6426,"name":"int256","nodeType":"ElementaryTypeName","src":"27901:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27900:14:18"},"returnParameters":{"id":6431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6430,"mutability":"mutable","name":"downcasted","nameLocation":"27945:10:18","nodeType":"VariableDeclaration","scope":6450,"src":"27938:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6429,"name":"int112","nodeType":"ElementaryTypeName","src":"27938:6:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27937:19:18"},"scope":6829,"src":"27883:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6475,"nodeType":"Block","src":"28522:155:18","statements":[{"expression":{"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6458,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"28533:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"28553:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28546:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6459,"name":"int104","nodeType":"ElementaryTypeName","src":"28546:6:18","typeDescriptions":{}}},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28546:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28533:26:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6464,"nodeType":"ExpressionStatement","src":"28533:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6465,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"28574:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"28588:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28574:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6474,"nodeType":"IfStatement","src":"28570:100:18","trueBody":{"id":6473,"nodeType":"Block","src":"28595:75:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28647:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"28652:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6468,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"28617:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28617:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6472,"nodeType":"RevertStatement","src":"28610:48:18"}]}}]},"documentation":{"id":6451,"nodeType":"StructuredDocumentation","src":"28120:322:18","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6476,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"28457:8:18","nodeType":"FunctionDefinition","parameters":{"id":6454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6453,"mutability":"mutable","name":"value","nameLocation":"28473:5:18","nodeType":"VariableDeclaration","scope":6476,"src":"28466:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6452,"name":"int256","nodeType":"ElementaryTypeName","src":"28466:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28465:14:18"},"returnParameters":{"id":6457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6456,"mutability":"mutable","name":"downcasted","nameLocation":"28510:10:18","nodeType":"VariableDeclaration","scope":6476,"src":"28503:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6455,"name":"int104","nodeType":"ElementaryTypeName","src":"28503:6:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"28502:19:18"},"scope":6829,"src":"28448:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6501,"nodeType":"Block","src":"29080:153:18","statements":[{"expression":{"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6484,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"29091:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"29110:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29104:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6485,"name":"int96","nodeType":"ElementaryTypeName","src":"29104:5:18","typeDescriptions":{}}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29104:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"29091:25:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6490,"nodeType":"ExpressionStatement","src":"29091:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6491,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"29131:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"29145:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29131:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6500,"nodeType":"IfStatement","src":"29127:99:18","trueBody":{"id":6499,"nodeType":"Block","src":"29152:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29204:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"29208:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6494,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"29174:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29174:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6498,"nodeType":"RevertStatement","src":"29167:47:18"}]}}]},"documentation":{"id":6477,"nodeType":"StructuredDocumentation","src":"28685:317:18","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6502,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"29017:7:18","nodeType":"FunctionDefinition","parameters":{"id":6480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6479,"mutability":"mutable","name":"value","nameLocation":"29032:5:18","nodeType":"VariableDeclaration","scope":6502,"src":"29025:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6478,"name":"int256","nodeType":"ElementaryTypeName","src":"29025:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29024:14:18"},"returnParameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"downcasted","nameLocation":"29068:10:18","nodeType":"VariableDeclaration","scope":6502,"src":"29062:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6481,"name":"int96","nodeType":"ElementaryTypeName","src":"29062:5:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"29061:18:18"},"scope":6829,"src":"29008:225:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6527,"nodeType":"Block","src":"29636:153:18","statements":[{"expression":{"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6510,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"29647:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"29666:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29660:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6511,"name":"int88","nodeType":"ElementaryTypeName","src":"29660:5:18","typeDescriptions":{}}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29660:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29647:25:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6516,"nodeType":"ExpressionStatement","src":"29647:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6517,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"29687:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"29701:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29687:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6526,"nodeType":"IfStatement","src":"29683:99:18","trueBody":{"id":6525,"nodeType":"Block","src":"29708:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29760:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"29764:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6520,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"29730:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29730:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6524,"nodeType":"RevertStatement","src":"29723:47:18"}]}}]},"documentation":{"id":6503,"nodeType":"StructuredDocumentation","src":"29241:317:18","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6528,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"29573:7:18","nodeType":"FunctionDefinition","parameters":{"id":6506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6505,"mutability":"mutable","name":"value","nameLocation":"29588:5:18","nodeType":"VariableDeclaration","scope":6528,"src":"29581:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6504,"name":"int256","nodeType":"ElementaryTypeName","src":"29581:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29580:14:18"},"returnParameters":{"id":6509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6508,"mutability":"mutable","name":"downcasted","nameLocation":"29624:10:18","nodeType":"VariableDeclaration","scope":6528,"src":"29618:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6507,"name":"int88","nodeType":"ElementaryTypeName","src":"29618:5:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"29617:18:18"},"scope":6829,"src":"29564:225:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6553,"nodeType":"Block","src":"30192:153:18","statements":[{"expression":{"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6536,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"30203:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"30222:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30216:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6537,"name":"int80","nodeType":"ElementaryTypeName","src":"30216:5:18","typeDescriptions":{}}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30216:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"30203:25:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6542,"nodeType":"ExpressionStatement","src":"30203:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6543,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"30243:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"30257:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30243:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6552,"nodeType":"IfStatement","src":"30239:99:18","trueBody":{"id":6551,"nodeType":"Block","src":"30264:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30316:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"30320:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6546,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"30286:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30286:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6550,"nodeType":"RevertStatement","src":"30279:47:18"}]}}]},"documentation":{"id":6529,"nodeType":"StructuredDocumentation","src":"29797:317:18","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6554,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"30129:7:18","nodeType":"FunctionDefinition","parameters":{"id":6532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"mutability":"mutable","name":"value","nameLocation":"30144:5:18","nodeType":"VariableDeclaration","scope":6554,"src":"30137:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6530,"name":"int256","nodeType":"ElementaryTypeName","src":"30137:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30136:14:18"},"returnParameters":{"id":6535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"downcasted","nameLocation":"30180:10:18","nodeType":"VariableDeclaration","scope":6554,"src":"30174:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6533,"name":"int80","nodeType":"ElementaryTypeName","src":"30174:5:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"30173:18:18"},"scope":6829,"src":"30120:225:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6579,"nodeType":"Block","src":"30748:153:18","statements":[{"expression":{"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6562,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"30759:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"30778:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30772:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6563,"name":"int72","nodeType":"ElementaryTypeName","src":"30772:5:18","typeDescriptions":{}}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30772:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30759:25:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6568,"nodeType":"ExpressionStatement","src":"30759:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6569,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"30799:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"30813:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30799:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6578,"nodeType":"IfStatement","src":"30795:99:18","trueBody":{"id":6577,"nodeType":"Block","src":"30820:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30872:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"30876:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6572,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"30842:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30842:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6576,"nodeType":"RevertStatement","src":"30835:47:18"}]}}]},"documentation":{"id":6555,"nodeType":"StructuredDocumentation","src":"30353:317:18","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6580,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"30685:7:18","nodeType":"FunctionDefinition","parameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6557,"mutability":"mutable","name":"value","nameLocation":"30700:5:18","nodeType":"VariableDeclaration","scope":6580,"src":"30693:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6556,"name":"int256","nodeType":"ElementaryTypeName","src":"30693:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30692:14:18"},"returnParameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"mutability":"mutable","name":"downcasted","nameLocation":"30736:10:18","nodeType":"VariableDeclaration","scope":6580,"src":"30730:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6559,"name":"int72","nodeType":"ElementaryTypeName","src":"30730:5:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30729:18:18"},"scope":6829,"src":"30676:225:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6605,"nodeType":"Block","src":"31304:153:18","statements":[{"expression":{"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6588,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"31315:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"31334:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31328:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6589,"name":"int64","nodeType":"ElementaryTypeName","src":"31328:5:18","typeDescriptions":{}}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31328:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"31315:25:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6594,"nodeType":"ExpressionStatement","src":"31315:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6595,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"31355:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"31369:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31355:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6604,"nodeType":"IfStatement","src":"31351:99:18","trueBody":{"id":6603,"nodeType":"Block","src":"31376:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31428:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"31432:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6598,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"31398:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6602,"nodeType":"RevertStatement","src":"31391:47:18"}]}}]},"documentation":{"id":6581,"nodeType":"StructuredDocumentation","src":"30909:317:18","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6606,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"31241:7:18","nodeType":"FunctionDefinition","parameters":{"id":6584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6583,"mutability":"mutable","name":"value","nameLocation":"31256:5:18","nodeType":"VariableDeclaration","scope":6606,"src":"31249:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6582,"name":"int256","nodeType":"ElementaryTypeName","src":"31249:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31248:14:18"},"returnParameters":{"id":6587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6586,"mutability":"mutable","name":"downcasted","nameLocation":"31292:10:18","nodeType":"VariableDeclaration","scope":6606,"src":"31286:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6585,"name":"int64","nodeType":"ElementaryTypeName","src":"31286:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"31285:18:18"},"scope":6829,"src":"31232:225:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6631,"nodeType":"Block","src":"31860:153:18","statements":[{"expression":{"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6614,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"31871:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"31890:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31884:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6615,"name":"int56","nodeType":"ElementaryTypeName","src":"31884:5:18","typeDescriptions":{}}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31884:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31871:25:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6620,"nodeType":"ExpressionStatement","src":"31871:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6621,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"31911:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"31925:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31911:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6630,"nodeType":"IfStatement","src":"31907:99:18","trueBody":{"id":6629,"nodeType":"Block","src":"31932:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31984:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"31988:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6624,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"31954:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31954:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6628,"nodeType":"RevertStatement","src":"31947:47:18"}]}}]},"documentation":{"id":6607,"nodeType":"StructuredDocumentation","src":"31465:317:18","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6632,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31797:7:18","nodeType":"FunctionDefinition","parameters":{"id":6610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6609,"mutability":"mutable","name":"value","nameLocation":"31812:5:18","nodeType":"VariableDeclaration","scope":6632,"src":"31805:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6608,"name":"int256","nodeType":"ElementaryTypeName","src":"31805:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31804:14:18"},"returnParameters":{"id":6613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6612,"mutability":"mutable","name":"downcasted","nameLocation":"31848:10:18","nodeType":"VariableDeclaration","scope":6632,"src":"31842:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6611,"name":"int56","nodeType":"ElementaryTypeName","src":"31842:5:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31841:18:18"},"scope":6829,"src":"31788:225:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6657,"nodeType":"Block","src":"32416:153:18","statements":[{"expression":{"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6640,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"32427:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"32446:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32440:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6641,"name":"int48","nodeType":"ElementaryTypeName","src":"32440:5:18","typeDescriptions":{}}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32440:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32427:25:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6646,"nodeType":"ExpressionStatement","src":"32427:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6647,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"32467:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"32481:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32467:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6656,"nodeType":"IfStatement","src":"32463:99:18","trueBody":{"id":6655,"nodeType":"Block","src":"32488:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32540:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"32544:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6650,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"32510:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32510:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6654,"nodeType":"RevertStatement","src":"32503:47:18"}]}}]},"documentation":{"id":6633,"nodeType":"StructuredDocumentation","src":"32021:317:18","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6658,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"32353:7:18","nodeType":"FunctionDefinition","parameters":{"id":6636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"value","nameLocation":"32368:5:18","nodeType":"VariableDeclaration","scope":6658,"src":"32361:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6634,"name":"int256","nodeType":"ElementaryTypeName","src":"32361:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32360:14:18"},"returnParameters":{"id":6639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6638,"mutability":"mutable","name":"downcasted","nameLocation":"32404:10:18","nodeType":"VariableDeclaration","scope":6658,"src":"32398:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6637,"name":"int48","nodeType":"ElementaryTypeName","src":"32398:5:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"32397:18:18"},"scope":6829,"src":"32344:225:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6683,"nodeType":"Block","src":"32972:153:18","statements":[{"expression":{"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6666,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"32983:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"33002:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32996:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6667,"name":"int40","nodeType":"ElementaryTypeName","src":"32996:5:18","typeDescriptions":{}}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32996:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32983:25:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6672,"nodeType":"ExpressionStatement","src":"32983:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6673,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"33023:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"33037:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33023:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6682,"nodeType":"IfStatement","src":"33019:99:18","trueBody":{"id":6681,"nodeType":"Block","src":"33044:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33096:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"33100:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6676,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"33066:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33066:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6680,"nodeType":"RevertStatement","src":"33059:47:18"}]}}]},"documentation":{"id":6659,"nodeType":"StructuredDocumentation","src":"32577:317:18","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6684,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32909:7:18","nodeType":"FunctionDefinition","parameters":{"id":6662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6661,"mutability":"mutable","name":"value","nameLocation":"32924:5:18","nodeType":"VariableDeclaration","scope":6684,"src":"32917:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6660,"name":"int256","nodeType":"ElementaryTypeName","src":"32917:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32916:14:18"},"returnParameters":{"id":6665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6664,"mutability":"mutable","name":"downcasted","nameLocation":"32960:10:18","nodeType":"VariableDeclaration","scope":6684,"src":"32954:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6663,"name":"int40","nodeType":"ElementaryTypeName","src":"32954:5:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32953:18:18"},"scope":6829,"src":"32900:225:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6709,"nodeType":"Block","src":"33528:153:18","statements":[{"expression":{"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6692,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"33539:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"33558:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33552:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6693,"name":"int32","nodeType":"ElementaryTypeName","src":"33552:5:18","typeDescriptions":{}}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33552:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33539:25:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6698,"nodeType":"ExpressionStatement","src":"33539:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6699,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"33579:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"33593:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33579:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6708,"nodeType":"IfStatement","src":"33575:99:18","trueBody":{"id":6707,"nodeType":"Block","src":"33600:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33652:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"33656:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6702,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"33622:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33622:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6706,"nodeType":"RevertStatement","src":"33615:47:18"}]}}]},"documentation":{"id":6685,"nodeType":"StructuredDocumentation","src":"33133:317:18","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6710,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"33465:7:18","nodeType":"FunctionDefinition","parameters":{"id":6688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6687,"mutability":"mutable","name":"value","nameLocation":"33480:5:18","nodeType":"VariableDeclaration","scope":6710,"src":"33473:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6686,"name":"int256","nodeType":"ElementaryTypeName","src":"33473:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33472:14:18"},"returnParameters":{"id":6691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6690,"mutability":"mutable","name":"downcasted","nameLocation":"33516:10:18","nodeType":"VariableDeclaration","scope":6710,"src":"33510:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6689,"name":"int32","nodeType":"ElementaryTypeName","src":"33510:5:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"33509:18:18"},"scope":6829,"src":"33456:225:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6735,"nodeType":"Block","src":"34084:153:18","statements":[{"expression":{"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6718,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"34095:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"34114:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34108:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6719,"name":"int24","nodeType":"ElementaryTypeName","src":"34108:5:18","typeDescriptions":{}}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34108:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"34095:25:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6724,"nodeType":"ExpressionStatement","src":"34095:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6725,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"34135:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"34149:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34135:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6734,"nodeType":"IfStatement","src":"34131:99:18","trueBody":{"id":6733,"nodeType":"Block","src":"34156:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34208:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"34212:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6728,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"34178:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34178:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6732,"nodeType":"RevertStatement","src":"34171:47:18"}]}}]},"documentation":{"id":6711,"nodeType":"StructuredDocumentation","src":"33689:317:18","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6736,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"34021:7:18","nodeType":"FunctionDefinition","parameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"value","nameLocation":"34036:5:18","nodeType":"VariableDeclaration","scope":6736,"src":"34029:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6712,"name":"int256","nodeType":"ElementaryTypeName","src":"34029:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34028:14:18"},"returnParameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6716,"mutability":"mutable","name":"downcasted","nameLocation":"34072:10:18","nodeType":"VariableDeclaration","scope":6736,"src":"34066:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6715,"name":"int24","nodeType":"ElementaryTypeName","src":"34066:5:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"34065:18:18"},"scope":6829,"src":"34012:225:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6761,"nodeType":"Block","src":"34640:153:18","statements":[{"expression":{"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6744,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"34651:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"34670:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34664:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6745,"name":"int16","nodeType":"ElementaryTypeName","src":"34664:5:18","typeDescriptions":{}}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34664:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34651:25:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6750,"nodeType":"ExpressionStatement","src":"34651:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6751,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"34691:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"34705:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34691:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6760,"nodeType":"IfStatement","src":"34687:99:18","trueBody":{"id":6759,"nodeType":"Block","src":"34712:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34764:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"34768:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6754,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"34734:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34734:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6758,"nodeType":"RevertStatement","src":"34727:47:18"}]}}]},"documentation":{"id":6737,"nodeType":"StructuredDocumentation","src":"34245:317:18","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6762,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"34577:7:18","nodeType":"FunctionDefinition","parameters":{"id":6740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6739,"mutability":"mutable","name":"value","nameLocation":"34592:5:18","nodeType":"VariableDeclaration","scope":6762,"src":"34585:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6738,"name":"int256","nodeType":"ElementaryTypeName","src":"34585:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34584:14:18"},"returnParameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6742,"mutability":"mutable","name":"downcasted","nameLocation":"34628:10:18","nodeType":"VariableDeclaration","scope":6762,"src":"34622:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6741,"name":"int16","nodeType":"ElementaryTypeName","src":"34622:5:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"34621:18:18"},"scope":6829,"src":"34568:225:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6787,"nodeType":"Block","src":"35189:151:18","statements":[{"expression":{"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6770,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"35200:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6765,"src":"35218:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35213:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6771,"name":"int8","nodeType":"ElementaryTypeName","src":"35213:4:18","typeDescriptions":{}}},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35213:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"35200:24:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6776,"nodeType":"ExpressionStatement","src":"35200:24:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6777,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"35239:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6765,"src":"35253:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"35239:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6786,"nodeType":"IfStatement","src":"35235:98:18","trueBody":{"id":6785,"nodeType":"Block","src":"35260:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35312:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6765,"src":"35315:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6780,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"35282:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35282:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6784,"nodeType":"RevertStatement","src":"35275:46:18"}]}}]},"documentation":{"id":6763,"nodeType":"StructuredDocumentation","src":"34801:312:18","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6788,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"35128:6:18","nodeType":"FunctionDefinition","parameters":{"id":6766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6765,"mutability":"mutable","name":"value","nameLocation":"35142:5:18","nodeType":"VariableDeclaration","scope":6788,"src":"35135:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6764,"name":"int256","nodeType":"ElementaryTypeName","src":"35135:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35134:14:18"},"returnParameters":{"id":6769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6768,"mutability":"mutable","name":"downcasted","nameLocation":"35177:10:18","nodeType":"VariableDeclaration","scope":6788,"src":"35172:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6767,"name":"int8","nodeType":"ElementaryTypeName","src":"35172:4:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"35171:17:18"},"scope":6829,"src":"35119:221:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6817,"nodeType":"Block","src":"35589:256:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"35704:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35725:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6800,"name":"int256","nodeType":"ElementaryTypeName","src":"35725:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6799,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"35720:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35720:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35733:3:18","memberName":"max","nodeType":"MemberAccess","src":"35720:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35712:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6797,"name":"uint256","nodeType":"ElementaryTypeName","src":"35712:7:18","typeDescriptions":{}}},"id":6804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35712:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35704:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6811,"nodeType":"IfStatement","src":"35700:107:18","trueBody":{"id":6810,"nodeType":"Block","src":"35739:68:18","statements":[{"errorCall":{"arguments":[{"id":6807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"35789:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6806,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"35761:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35761:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6809,"nodeType":"RevertStatement","src":"35754:41:18"}]}},{"expression":{"arguments":[{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"35831:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35824:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6812,"name":"int256","nodeType":"ElementaryTypeName","src":"35824:6:18","typeDescriptions":{}}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35824:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6795,"id":6816,"nodeType":"Return","src":"35817:20:18"}]},"documentation":{"id":6789,"nodeType":"StructuredDocumentation","src":"35348:171:18","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6818,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"35534:8:18","nodeType":"FunctionDefinition","parameters":{"id":6792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6791,"mutability":"mutable","name":"value","nameLocation":"35551:5:18","nodeType":"VariableDeclaration","scope":6818,"src":"35543:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6790,"name":"uint256","nodeType":"ElementaryTypeName","src":"35543:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35542:15:18"},"returnParameters":{"id":6795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6818,"src":"35581:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6793,"name":"int256","nodeType":"ElementaryTypeName","src":"35581:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35580:8:18"},"scope":6829,"src":"35525:320:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6827,"nodeType":"Block","src":"36009:91:18","statements":[{"AST":{"nativeSrc":"36045:48:18","nodeType":"YulBlock","src":"36045:48:18","statements":[{"nativeSrc":"36060:22:18","nodeType":"YulAssignment","src":"36060:22:18","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"36079:1:18","nodeType":"YulIdentifier","src":"36079:1:18"}],"functionName":{"name":"iszero","nativeSrc":"36072:6:18","nodeType":"YulIdentifier","src":"36072:6:18"},"nativeSrc":"36072:9:18","nodeType":"YulFunctionCall","src":"36072:9:18"}],"functionName":{"name":"iszero","nativeSrc":"36065:6:18","nodeType":"YulIdentifier","src":"36065:6:18"},"nativeSrc":"36065:17:18","nodeType":"YulFunctionCall","src":"36065:17:18"},"variableNames":[{"name":"u","nativeSrc":"36060:1:18","nodeType":"YulIdentifier","src":"36060:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6821,"isOffset":false,"isSlot":false,"src":"36079:1:18","valueSize":1},{"declaration":6824,"isOffset":false,"isSlot":false,"src":"36060:1:18","valueSize":1}],"flags":["memory-safe"],"id":6826,"nodeType":"InlineAssembly","src":"36020:73:18"}]},"documentation":{"id":6819,"nodeType":"StructuredDocumentation","src":"35853:92:18","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6828,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"35960:6:18","nodeType":"FunctionDefinition","parameters":{"id":6822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6821,"mutability":"mutable","name":"b","nameLocation":"35972:1:18","nodeType":"VariableDeclaration","scope":6828,"src":"35967:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6820,"name":"bool","nodeType":"ElementaryTypeName","src":"35967:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35966:8:18"},"returnParameters":{"id":6825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6824,"mutability":"mutable","name":"u","nameLocation":"36006:1:18","nodeType":"VariableDeclaration","scope":6828,"src":"35998:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6823,"name":"uint256","nodeType":"ElementaryTypeName","src":"35998:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35997:11:18"},"scope":6829,"src":"35951:149:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6830,"src":"787:35316:18","usedErrors":[5074,5079,5086,5091],"usedEvents":[]}],"src":"196:35909:18"},"id":18},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6829],"SignedMath":[6973]},"id":6974,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6831,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6974,"sourceUnit":6830,"src":"140:40:19","symbolAliases":[{"foreign":{"id":6832,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"148:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6834,"nodeType":"StructuredDocumentation","src":"184:82:19","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6973,"linearizedBaseContracts":[6973],"name":"SignedMath","nameLocation":"276:10:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":6863,"nodeType":"Block","src":"764:222:19","statements":[{"id":6862,"nodeType":"UncheckedBlock","src":"775:204:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6846,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"917:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"923:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6848,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"927:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"923:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"922:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6855,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"955:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6853,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"939:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"948:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"939:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"939:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"932:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6851,"name":"int256","nodeType":"ElementaryTypeName","src":"932:6:19","typeDescriptions":{}}},"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"922:44:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"921:46:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"917:50:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6845,"id":6861,"nodeType":"Return","src":"910:57:19"}]}]},"documentation":{"id":6835,"nodeType":"StructuredDocumentation","src":"294:380:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6864,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"689:7:19","nodeType":"FunctionDefinition","parameters":{"id":6842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6837,"mutability":"mutable","name":"condition","nameLocation":"702:9:19","nodeType":"VariableDeclaration","scope":6864,"src":"697:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6836,"name":"bool","nodeType":"ElementaryTypeName","src":"697:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6839,"mutability":"mutable","name":"a","nameLocation":"720:1:19","nodeType":"VariableDeclaration","scope":6864,"src":"713:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6838,"name":"int256","nodeType":"ElementaryTypeName","src":"713:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6841,"mutability":"mutable","name":"b","nameLocation":"730:1:19","nodeType":"VariableDeclaration","scope":6864,"src":"723:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6840,"name":"int256","nodeType":"ElementaryTypeName","src":"723:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"696:36:19"},"returnParameters":{"id":6845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6864,"src":"756:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6843,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"755:8:19"},"scope":6973,"src":"680:306:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6882,"nodeType":"Block","src":"1132:46:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6875,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"1158:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6876,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"1162:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1158:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"1165:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6879,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"1168:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6874,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"1150:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1150:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6873,"id":6881,"nodeType":"Return","src":"1143:27:19"}]},"documentation":{"id":6865,"nodeType":"StructuredDocumentation","src":"994:68:19","text":" @dev Returns the largest of two signed numbers."},"id":6883,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1077:3:19","nodeType":"FunctionDefinition","parameters":{"id":6870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6867,"mutability":"mutable","name":"a","nameLocation":"1088:1:19","nodeType":"VariableDeclaration","scope":6883,"src":"1081:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6866,"name":"int256","nodeType":"ElementaryTypeName","src":"1081:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6869,"mutability":"mutable","name":"b","nameLocation":"1098:1:19","nodeType":"VariableDeclaration","scope":6883,"src":"1091:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6868,"name":"int256","nodeType":"ElementaryTypeName","src":"1091:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1080:20:19"},"returnParameters":{"id":6873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6883,"src":"1124:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6871,"name":"int256","nodeType":"ElementaryTypeName","src":"1124:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1123:8:19"},"scope":6973,"src":"1068:110:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6901,"nodeType":"Block","src":"1325:46:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"1351:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6888,"src":"1355:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1351:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"1358:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6898,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6888,"src":"1361:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6893,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"1343:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1343:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6892,"id":6900,"nodeType":"Return","src":"1336:27:19"}]},"documentation":{"id":6884,"nodeType":"StructuredDocumentation","src":"1186:69:19","text":" @dev Returns the smallest of two signed numbers."},"id":6902,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1270:3:19","nodeType":"FunctionDefinition","parameters":{"id":6889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6886,"mutability":"mutable","name":"a","nameLocation":"1281:1:19","nodeType":"VariableDeclaration","scope":6902,"src":"1274:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6885,"name":"int256","nodeType":"ElementaryTypeName","src":"1274:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6888,"mutability":"mutable","name":"b","nameLocation":"1291:1:19","nodeType":"VariableDeclaration","scope":6902,"src":"1284:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6887,"name":"int256","nodeType":"ElementaryTypeName","src":"1284:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1273:20:19"},"returnParameters":{"id":6892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6902,"src":"1317:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6890,"name":"int256","nodeType":"ElementaryTypeName","src":"1317:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1316:8:19"},"scope":6973,"src":"1261:110:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6945,"nodeType":"Block","src":"1582:166:19","statements":[{"assignments":[6913],"declarations":[{"constant":false,"id":6913,"mutability":"mutable","name":"x","nameLocation":"1653:1:19","nodeType":"VariableDeclaration","scope":6945,"src":"1646:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6912,"name":"int256","nodeType":"ElementaryTypeName","src":"1646:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6926,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6914,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"1658:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6915,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"1662:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1658:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1657:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"1669:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"1673:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1669:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1668:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1679:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1668:12:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1667:14:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1657:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1646:35:19"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6927,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"1699:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6932,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"1719:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1711:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:19","typeDescriptions":{}}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1711:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1725:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1711:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1704:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6928,"name":"int256","nodeType":"ElementaryTypeName","src":"1704:6:19","typeDescriptions":{}}},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1704:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6937,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"1733:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6938,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"1737:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1733:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1732:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1704:35:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1703:37:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1699:41:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6911,"id":6944,"nodeType":"Return","src":"1692:48:19"}]},"documentation":{"id":6903,"nodeType":"StructuredDocumentation","src":"1379:129:19","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6946,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1523:7:19","nodeType":"FunctionDefinition","parameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6905,"mutability":"mutable","name":"a","nameLocation":"1538:1:19","nodeType":"VariableDeclaration","scope":6946,"src":"1531:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6904,"name":"int256","nodeType":"ElementaryTypeName","src":"1531:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6907,"mutability":"mutable","name":"b","nameLocation":"1548:1:19","nodeType":"VariableDeclaration","scope":6946,"src":"1541:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6906,"name":"int256","nodeType":"ElementaryTypeName","src":"1541:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1530:20:19"},"returnParameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6946,"src":"1574:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6909,"name":"int256","nodeType":"ElementaryTypeName","src":"1574:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1573:8:19"},"scope":6973,"src":"1514:234:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6971,"nodeType":"Block","src":"1897:779:19","statements":[{"id":6970,"nodeType":"UncheckedBlock","src":"1908:761:19","statements":[{"assignments":[6955],"declarations":[{"constant":false,"id":6955,"mutability":"mutable","name":"mask","nameLocation":"2485:4:19","nodeType":"VariableDeclaration","scope":6970,"src":"2478:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6954,"name":"int256","nodeType":"ElementaryTypeName","src":"2478:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6959,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6956,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"2492:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2497:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2492:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2478:22:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6962,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"2640:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6963,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"2644:4:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2640:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2639:10:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6966,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"2652:4:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2639:17:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2631:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:19","typeDescriptions":{}}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6953,"id":6969,"nodeType":"Return","src":"2624:33:19"}]}]},"documentation":{"id":6947,"nodeType":"StructuredDocumentation","src":"1756:80:19","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6972,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1851:3:19","nodeType":"FunctionDefinition","parameters":{"id":6950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6949,"mutability":"mutable","name":"n","nameLocation":"1862:1:19","nodeType":"VariableDeclaration","scope":6972,"src":"1855:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6948,"name":"int256","nodeType":"ElementaryTypeName","src":"1855:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1854:10:19"},"returnParameters":{"id":6953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6972,"src":"1888:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6951,"name":"uint256","nodeType":"ElementaryTypeName","src":"1888:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1887:9:19"},"scope":6973,"src":"1842:834:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6974,"src":"268:2411:19","usedErrors":[],"usedEvents":[]}],"src":"112:2569:19"},"id":19},"contracts/CampusToken.sol":{"ast":{"absolutePath":"contracts/CampusToken.sol","exportedSymbols":{"CampusToken":[7066],"ERC20":[824],"ERC20Permit":[1056],"Ownable":[147]},"id":7067,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6975,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"83:24:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7067,"sourceUnit":825,"src":"111:68:20","symbolAliases":[{"foreign":{"id":6976,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"119:5:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":6979,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7067,"sourceUnit":1057,"src":"181:91:20","symbolAliases":[{"foreign":{"id":6978,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"189:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6981,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7067,"sourceUnit":148,"src":"274:67:20","symbolAliases":[{"foreign":{"id":6980,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"282:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6982,"name":"ERC20","nameLocations":["369:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"369:5:20"},"id":6983,"nodeType":"InheritanceSpecifier","src":"369:5:20"},{"baseName":{"id":6984,"name":"Ownable","nameLocations":["376:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"376:7:20"},"id":6985,"nodeType":"InheritanceSpecifier","src":"376:7:20"},{"baseName":{"id":6986,"name":"ERC20Permit","nameLocations":["385:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"385:11:20"},"id":6987,"nodeType":"InheritanceSpecifier","src":"385:11:20"}],"canonicalName":"CampusToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7066,"linearizedBaseContracts":[7066,1056,1216,3384,172,1118,147,824,214,1082,902,1148],"name":"CampusToken","nameLocation":"354:11:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":7014,"nodeType":"Block","src":"569:66:20","statements":[{"expression":{"arguments":[{"id":7005,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"586:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":7006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"600:7:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"610:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7008,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"616:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"616:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"610:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"600:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7004,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"580:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"580:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7013,"nodeType":"ExpressionStatement","src":"580:47:20"}]},"id":7015,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"43616d707573546f6b656e","id":6994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"473:13:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc75c0b0eab3fa758d03626f85229c174577db5a7ee24b0eda88ca0651ba958b","typeString":"literal_string \"CampusToken\""},"value":"CampusToken"},{"hexValue":"4249545347","id":6995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"488:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3187b00d5b03e3991c16966072e104a32ff1d28b9dfe0c700816a2347ddb2768","typeString":"literal_string \"BITSG\""},"value":"BITSG"}],"id":6996,"kind":"baseConstructorSpecifier","modifierName":{"id":6993,"name":"ERC20","nameLocations":["467:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"467:5:20"},"nodeType":"ModifierInvocation","src":"467:29:20"},{"arguments":[{"id":6998,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"514:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6999,"kind":"baseConstructorSpecifier","modifierName":{"id":6997,"name":"Ownable","nameLocations":["506:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"506:7:20"},"nodeType":"ModifierInvocation","src":"506:21:20"},{"arguments":[{"hexValue":"43616d707573546f6b656e","id":7001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"549:13:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc75c0b0eab3fa758d03626f85229c174577db5a7ee24b0eda88ca0651ba958b","typeString":"literal_string \"CampusToken\""},"value":"CampusToken"}],"id":7002,"kind":"baseConstructorSpecifier","modifierName":{"id":7000,"name":"ERC20Permit","nameLocations":["537:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"537:11:20"},"nodeType":"ModifierInvocation","src":"537:26:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6989,"mutability":"mutable","name":"recipient","nameLocation":"424:9:20","nodeType":"VariableDeclaration","scope":7015,"src":"416:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6988,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6991,"mutability":"mutable","name":"initialOwner","nameLocation":"444:12:20","nodeType":"VariableDeclaration","scope":7015,"src":"436:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6990,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"415:42:20"},"returnParameters":{"id":7003,"nodeType":"ParameterList","parameters":[],"src":"569:0:20"},"scope":7066,"src":"404:231:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7029,"nodeType":"Block","src":"702:36:20","statements":[{"expression":{"arguments":[{"id":7025,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"719:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7026,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"723:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7024,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"713:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"713:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7028,"nodeType":"ExpressionStatement","src":"713:17:20"}]},"functionSelector":"40c10f19","id":7030,"implemented":true,"kind":"function","modifiers":[{"id":7022,"kind":"modifierInvocation","modifierName":{"id":7021,"name":"onlyOwner","nameLocations":["692:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"692:9:20"},"nodeType":"ModifierInvocation","src":"692:9:20"}],"name":"mint","nameLocation":"652:4:20","nodeType":"FunctionDefinition","parameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7017,"mutability":"mutable","name":"to","nameLocation":"665:2:20","nodeType":"VariableDeclaration","scope":7030,"src":"657:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7016,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7019,"mutability":"mutable","name":"amount","nameLocation":"677:6:20","nodeType":"VariableDeclaration","scope":7030,"src":"669:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7018,"name":"uint256","nodeType":"ElementaryTypeName","src":"669:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:28:20"},"returnParameters":{"id":7023,"nodeType":"ParameterList","parameters":[],"src":"702:0:20"},"scope":7066,"src":"643:95:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7051,"nodeType":"Block","src":"1119:107:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7039,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"1148:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7038,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"1138:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1138:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7041,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"1157:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1138:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":7043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1165:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":7037,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1130:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1130:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7045,"nodeType":"ExpressionStatement","src":"1130:58:20"},{"expression":{"arguments":[{"id":7047,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"1205:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7048,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"1211:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7046,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"1199:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1199:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7050,"nodeType":"ExpressionStatement","src":"1199:19:20"}]},"functionSelector":"0d1118ce","id":7052,"implemented":true,"kind":"function","modifiers":[],"name":"burnTokens","nameLocation":"1069:10:20","nodeType":"FunctionDefinition","parameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7032,"mutability":"mutable","name":"user","nameLocation":"1088:4:20","nodeType":"VariableDeclaration","scope":7052,"src":"1080:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7031,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7034,"mutability":"mutable","name":"amount","nameLocation":"1102:6:20","nodeType":"VariableDeclaration","scope":7052,"src":"1094:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1079:30:20"},"returnParameters":{"id":7036,"nodeType":"ParameterList","parameters":[],"src":"1119:0:20"},"scope":7066,"src":"1060:166:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7064,"nodeType":"Block","src":"1296:38:20","statements":[{"expression":{"arguments":[{"id":7060,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"1313:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7061,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"1319:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7059,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"1307:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1307:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7063,"nodeType":"ExpressionStatement","src":"1307:19:20"}]},"functionSelector":"81a4af15","id":7065,"implemented":true,"kind":"function","modifiers":[],"name":"rewardTokens","nameLocation":"1243:12:20","nodeType":"FunctionDefinition","parameters":{"id":7057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7054,"mutability":"mutable","name":"user","nameLocation":"1264:4:20","nodeType":"VariableDeclaration","scope":7065,"src":"1256:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7053,"name":"address","nodeType":"ElementaryTypeName","src":"1256:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7056,"mutability":"mutable","name":"amount","nameLocation":"1278:6:20","nodeType":"VariableDeclaration","scope":7065,"src":"1270:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7055,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1255:30:20"},"returnParameters":{"id":7058,"nodeType":"ParameterList","parameters":[],"src":"1296:0:20"},"scope":7066,"src":"1234:100:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7067,"src":"345:996:20","usedErrors":[13,18,184,189,194,203,208,213,933,940,1158,1282,1284,2820,2825,2830],"usedEvents":[24,152,836,845]}],"src":"83:1266:20"},"id":20},"contracts/participate.sol":{"ast":{"absolutePath":"contracts/participate.sol","exportedSymbols":{"CampusToken":[7066],"ERC20":[824],"ERC20Permit":[1056],"Ownable":[147],"participate":[7674]},"id":7675,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7068,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"33:24:21"},{"absolutePath":"contracts/CampusToken.sol","file":"./CampusToken.sol","id":7069,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7675,"sourceUnit":7067,"src":"61:27:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"participate","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7674,"linearizedBaseContracts":[7674],"name":"participate","nameLocation":"101:11:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fc0c546a","id":7072,"mutability":"mutable","name":"token","nameLocation":"139:5:21","nodeType":"VariableDeclaration","scope":7674,"src":"120:24:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"},"typeName":{"id":7071,"nodeType":"UserDefinedTypeName","pathNode":{"id":7070,"name":"CampusToken","nameLocations":["120:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":7066,"src":"120:11:21"},"referencedDeclaration":7066,"src":"120:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"visibility":"public"},{"constant":true,"functionSelector":"5ff2c42c","id":7079,"mutability":"constant","name":"REPORT_STAKE","nameLocation":"249:12:21","nodeType":"VariableDeclaration","scope":7674,"src":"225:53:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7073,"name":"uint256","nodeType":"ElementaryTypeName","src":"225:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"},"id":7078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":7074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"264:3:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"270:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"276:2:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"270:8:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"264:14:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"ed1957d9","id":7086,"mutability":"constant","name":"VALIDATE_STAKE","nameLocation":"353:14:21","nodeType":"VariableDeclaration","scope":7674,"src":"329:54:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7080,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_50000000000000000000_by_1","typeString":"int_const 50000000000000000000"},"id":7085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3530","id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"370:2:21","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"381:2:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"375:8:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"370:13:21","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000000_by_1","typeString":"int_const 50000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"b12f55eb","id":7093,"mutability":"constant","name":"REPORT_REWARD","nameLocation":"414:13:21","nodeType":"VariableDeclaration","scope":7674,"src":"390:52:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7087,"name":"uint256","nodeType":"ElementaryTypeName","src":"390:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_5000000000000000000_by_1","typeString":"int_const 5000000000000000000"},"id":7092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"35","id":7088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"430:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"434:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"440:2:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"434:8:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"430:12:21","typeDescriptions":{"typeIdentifier":"t_rational_5000000000000000000_by_1","typeString":"int_const 5000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"5790411e","id":7100,"mutability":"constant","name":"VALIDATE_REWARD","nameLocation":"473:15:21","nodeType":"VariableDeclaration","scope":7674,"src":"449:55:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7094,"name":"uint256","nodeType":"ElementaryTypeName","src":"449:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"},"id":7099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"491:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"496:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"502:2:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"496:8:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"491:13:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"}},"visibility":"public"},{"canonicalName":"participate.Report","id":7116,"members":[{"constant":false,"id":7102,"mutability":"mutable","name":"id","nameLocation":"546:2:21","nodeType":"VariableDeclaration","scope":7116,"src":"538:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7101,"name":"uint256","nodeType":"ElementaryTypeName","src":"538:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7104,"mutability":"mutable","name":"uploader","nameLocation":"567:8:21","nodeType":"VariableDeclaration","scope":7116,"src":"559:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7103,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7106,"mutability":"mutable","name":"net_votes","nameLocation":"593:9:21","nodeType":"VariableDeclaration","scope":7116,"src":"586:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7105,"name":"int256","nodeType":"ElementaryTypeName","src":"586:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7108,"mutability":"mutable","name":"validated","nameLocation":"636:9:21","nodeType":"VariableDeclaration","scope":7116,"src":"631:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7107,"name":"bool","nodeType":"ElementaryTypeName","src":"631:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7111,"mutability":"mutable","name":"validators","nameLocation":"666:10:21","nodeType":"VariableDeclaration","scope":7116,"src":"656:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7109,"name":"address","nodeType":"ElementaryTypeName","src":"656:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7110,"nodeType":"ArrayTypeName","src":"656:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7115,"mutability":"mutable","name":"votes","nameLocation":"732:5:21","nodeType":"VariableDeclaration","scope":7116,"src":"707:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int8_$","typeString":"mapping(address => int8)"},"typeName":{"id":7114,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7112,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"707:24:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int8_$","typeString":"mapping(address => int8)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7113,"name":"int8","nodeType":"ElementaryTypeName","src":"726:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}}},"visibility":"internal"}],"name":"Report","nameLocation":"520:6:21","nodeType":"StructDefinition","scope":7674,"src":"513:313:21","visibility":"public"},{"constant":false,"functionSelector":"185c6f84","id":7119,"mutability":"mutable","name":"reportCount","nameLocation":"849:11:21","nodeType":"VariableDeclaration","scope":7674,"src":"834:30:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7117,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":7118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"863:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"c942adf7","id":7124,"mutability":"mutable","name":"reports","nameLocation":"905:7:21","nodeType":"VariableDeclaration","scope":7674,"src":"871:41:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Report_$7116_storage_$","typeString":"mapping(uint256 => struct participate.Report)"},"typeName":{"id":7123,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7120,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"871:26:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Report_$7116_storage_$","typeString":"mapping(uint256 => struct participate.Report)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7122,"nodeType":"UserDefinedTypeName","pathNode":{"id":7121,"name":"Report","nameLocations":["890:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":7116,"src":"890:6:21"},"referencedDeclaration":7116,"src":"890:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"}}},"visibility":"public"},{"constant":false,"functionSelector":"a5b39cfb","id":7128,"mutability":"mutable","name":"stakedTokens","nameLocation":"1016:12:21","nodeType":"VariableDeclaration","scope":7674,"src":"981:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7127,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7125,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"981:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":7139,"nodeType":"Block","src":"1156:52:21","statements":[{"expression":{"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7133,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1167:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7135,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"1187:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7134,"name":"CampusToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"1175:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CampusToken_$7066_$","typeString":"type(contract CampusToken)"}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1175:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"src":"1167:33:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"id":7138,"nodeType":"ExpressionStatement","src":"1167:33:21"}]},"id":7140,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7130,"mutability":"mutable","name":"tokenAddress","nameLocation":"1142:12:21","nodeType":"VariableDeclaration","scope":7140,"src":"1134:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7129,"name":"address","nodeType":"ElementaryTypeName","src":"1134:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1133:22:21"},"returnParameters":{"id":7132,"nodeType":"ParameterList","parameters":[],"src":"1156:0:21"},"scope":7674,"src":"1122:86:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7206,"nodeType":"Block","src":"1292:625:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":7148,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1375:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1379:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1375:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7146,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1359:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1365:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":410,"src":"1359:15:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1359:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7151,"name":"REPORT_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"1390:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1359:43:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207374616b65","id":7153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1404:20:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b","typeString":"literal_string \"Insufficient stake\""},"value":"Insufficient stake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b","typeString":"literal_string \"Insufficient stake\""}],"id":7145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1351:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1351:74:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7155,"nodeType":"ExpressionStatement","src":"1351:74:21"},{"expression":{"arguments":[{"expression":{"id":7159,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1489:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1493:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1489:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7161,"name":"REPORT_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"1501:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7156,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1472:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:10:21","memberName":"burnTokens","nodeType":"MemberAccess","referencedDeclaration":7052,"src":"1472:16:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1472:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7163,"nodeType":"ExpressionStatement","src":"1472:42:21"},{"expression":{"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7164,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"1581:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7167,"indexExpression":{"expression":{"id":7165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1594:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1598:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1594:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1581:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7168,"name":"REPORT_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"1609:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1581:40:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7170,"nodeType":"ExpressionStatement","src":"1581:40:21"},{"expression":{"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1659:13:21","subExpression":{"id":7171,"name":"reportCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"1659:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7173,"nodeType":"ExpressionStatement","src":"1659:13:21"},{"assignments":[7176],"declarations":[{"constant":false,"id":7176,"mutability":"mutable","name":"newReport","nameLocation":"1732:9:21","nodeType":"VariableDeclaration","scope":7206,"src":"1717:24:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"},"typeName":{"id":7175,"nodeType":"UserDefinedTypeName","pathNode":{"id":7174,"name":"Report","nameLocations":["1717:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":7116,"src":"1717:6:21"},"referencedDeclaration":7116,"src":"1717:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"}},"visibility":"internal"}],"id":7180,"initialValue":{"baseExpression":{"id":7177,"name":"reports","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"1744:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Report_$7116_storage_$","typeString":"mapping(uint256 => struct participate.Report storage ref)"}},"id":7179,"indexExpression":{"id":7178,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"1752:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1744:17:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage","typeString":"struct participate.Report storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1717:44:21"},{"expression":{"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7181,"name":"newReport","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"1772:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1782:2:21","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7102,"src":"1772:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7184,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"1787:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1772:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7186,"nodeType":"ExpressionStatement","src":"1772:23:21"},{"expression":{"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7187,"name":"newReport","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"1806:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1816:8:21","memberName":"uploader","nodeType":"MemberAccess","referencedDeclaration":7104,"src":"1806:18:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7190,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1827:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1831:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1827:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1806:31:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7193,"nodeType":"ExpressionStatement","src":"1806:31:21"},{"expression":{"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7194,"name":"newReport","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"1848:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1858:9:21","memberName":"net_votes","nodeType":"MemberAccess","referencedDeclaration":7106,"src":"1848:19:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1870:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1848:23:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7199,"nodeType":"ExpressionStatement","src":"1848:23:21"},{"expression":{"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7200,"name":"newReport","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"1882:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1892:9:21","memberName":"validated","nodeType":"MemberAccess","referencedDeclaration":7108,"src":"1882:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1904:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1882:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7205,"nodeType":"ExpressionStatement","src":"1882:27:21"}]},"functionSelector":"f26eb277","id":7207,"implemented":true,"kind":"function","modifiers":[],"name":"submitReport","nameLocation":"1252:12:21","nodeType":"FunctionDefinition","parameters":{"id":7143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7142,"mutability":"mutable","name":"reportId","nameLocation":"1273:8:21","nodeType":"VariableDeclaration","scope":7207,"src":"1265:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1265:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1264:18:21"},"returnParameters":{"id":7144,"nodeType":"ParameterList","parameters":[],"src":"1292:0:21"},"scope":7674,"src":"1243:674:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7309,"nodeType":"Block","src":"1981:944:21","statements":[{"assignments":[7216],"declarations":[{"constant":false,"id":7216,"mutability":"mutable","name":"reportData","nameLocation":"2073:10:21","nodeType":"VariableDeclaration","scope":7309,"src":"2058:25:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"},"typeName":{"id":7215,"nodeType":"UserDefinedTypeName","pathNode":{"id":7214,"name":"Report","nameLocations":["2058:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":7116,"src":"2058:6:21"},"referencedDeclaration":7116,"src":"2058:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"}},"visibility":"internal"}],"id":7220,"initialValue":{"baseExpression":{"id":7217,"name":"reports","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"2086:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Report_$7116_storage_$","typeString":"mapping(uint256 => struct participate.Report storage ref)"}},"id":7219,"indexExpression":{"id":7218,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"2094:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2086:17:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage","typeString":"struct participate.Report storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2058:45:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":7224,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2176:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2180:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2176:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7222,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"2160:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2166:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":410,"src":"2160:15:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2160:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7227,"name":"VALIDATE_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"2191:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2160:45:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207374616b65","id":7229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2207:20:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b","typeString":"literal_string \"Insufficient stake\""},"value":"Insufficient stake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b","typeString":"literal_string \"Insufficient stake\""}],"id":7221,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2152:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7231,"nodeType":"ExpressionStatement","src":"2152:76:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7233,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7211,"src":"2281:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2289:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7236,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7211,"src":"2294:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2302:2:21","subExpression":{"hexValue":"31","id":7237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2303:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"src":"2294:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2281:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420766f7465","id":7241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2306:14:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8","typeString":"literal_string \"Invalid vote\""},"value":"Invalid vote"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8","typeString":"literal_string \"Invalid vote\""}],"id":7232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2273:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7243,"nodeType":"ExpressionStatement","src":"2273:48:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":7245,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"2364:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2375:5:21","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"2364:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int8_$","typeString":"mapping(address => int8)"}},"id":7249,"indexExpression":{"expression":{"id":7247,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2381:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2385:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2381:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2364:28:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2396:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920766f746564","id":7252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2399:15:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6","typeString":"literal_string \"Already voted\""},"value":"Already voted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6","typeString":"literal_string \"Already voted\""}],"id":7244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2356:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:59:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7254,"nodeType":"ExpressionStatement","src":"2356:59:21"},{"expression":{"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7255,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"2480:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7258,"indexExpression":{"expression":{"id":7256,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2493:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2493:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2480:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7259,"name":"VALIDATE_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"2508:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2480:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7261,"nodeType":"ExpressionStatement","src":"2480:42:21"},{"expression":{"arguments":[{"expression":{"id":7265,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2550:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2554:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2550:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7267,"name":"VALIDATE_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"2562:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7262,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"2533:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2539:10:21","memberName":"burnTokens","nodeType":"MemberAccess","referencedDeclaration":7052,"src":"2533:16:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7269,"nodeType":"ExpressionStatement","src":"2533:44:21"},{"assignments":[7271],"declarations":[{"constant":false,"id":7271,"mutability":"mutable","name":"weight","nameLocation":"2644:6:21","nodeType":"VariableDeclaration","scope":7309,"src":"2636:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7270,"name":"uint256","nodeType":"ElementaryTypeName","src":"2636:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7276,"initialValue":{"arguments":[{"expression":{"id":7273,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2667:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2671:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2667:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7272,"name":"getVoteWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"2653:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2636:42:21"},{"expression":{"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7277,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"2689:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2700:9:21","memberName":"net_votes","nodeType":"MemberAccess","referencedDeclaration":7106,"src":"2689:20:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7282,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7211,"src":"2720:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":7285,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"2734:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2727:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7283,"name":"int256","nodeType":"ElementaryTypeName","src":"2727:6:21","typeDescriptions":{}}},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2727:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2720:21:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2713:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7280,"name":"int256","nodeType":"ElementaryTypeName","src":"2713:6:21","typeDescriptions":{}}},"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2689:53:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7290,"nodeType":"ExpressionStatement","src":"2689:53:21"},{"expression":{"id":7298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7291,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"2795:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2806:5:21","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"2795:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int8_$","typeString":"mapping(address => int8)"}},"id":7296,"indexExpression":{"expression":{"id":7293,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2812:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2816:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2812:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2795:28:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7297,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7211,"src":"2826:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"2795:35:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7299,"nodeType":"ExpressionStatement","src":"2795:35:21"},{"expression":{"arguments":[{"expression":{"id":7305,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2906:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2910:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2906:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":7300,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"2879:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2890:10:21","memberName":"validators","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"2879:21:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2901:4:21","memberName":"push","nodeType":"MemberAccess","src":"2879:26:21","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2879:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7308,"nodeType":"ExpressionStatement","src":"2879:38:21"}]},"functionSelector":"42530abd","id":7310,"implemented":true,"kind":"function","modifiers":[],"name":"validate","nameLocation":"1934:8:21","nodeType":"FunctionDefinition","parameters":{"id":7212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7209,"mutability":"mutable","name":"reportId","nameLocation":"1951:8:21","nodeType":"VariableDeclaration","scope":7310,"src":"1943:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7208,"name":"uint256","nodeType":"ElementaryTypeName","src":"1943:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7211,"mutability":"mutable","name":"vote","nameLocation":"1966:4:21","nodeType":"VariableDeclaration","scope":7310,"src":"1961:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7210,"name":"int8","nodeType":"ElementaryTypeName","src":"1961:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"1942:29:21"},"returnParameters":{"id":7213,"nodeType":"ParameterList","parameters":[],"src":"1981:0:21"},"scope":7674,"src":"1925:1000:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7349,"nodeType":"Block","src":"3000:319:21","statements":[{"assignments":[7318],"declarations":[{"constant":false,"id":7318,"mutability":"mutable","name":"balance","nameLocation":"3019:7:21","nodeType":"VariableDeclaration","scope":7349,"src":"3011:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7317,"name":"uint256","nodeType":"ElementaryTypeName","src":"3011:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7323,"initialValue":{"arguments":[{"id":7321,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"3045:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7319,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"3029:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3035:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":410,"src":"3029:15:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3029:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3011:39:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7324,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"3067:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"},"id":7329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030","id":7325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3077:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3084:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3090:2:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3084:8:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"3077:15:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"}},"src":"3067:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7334,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"3173:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_500000000000000000000_by_1","typeString":"int_const 500000000000000000000"},"id":7339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"353030","id":7335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3183:3:21","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3189:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3195:2:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3189:8:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"3183:14:21","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000000_by_1","typeString":"int_const 500000000000000000000"}},"src":"3173:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7346,"nodeType":"Block","src":"3260:52:21","statements":[{"expression":{"hexValue":"31","id":7344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3282:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":7316,"id":7345,"nodeType":"Return","src":"3275:8:21"}]},"id":7347,"nodeType":"IfStatement","src":"3169:143:21","trueBody":{"id":7343,"nodeType":"Block","src":"3199:55:21","statements":[{"expression":{"hexValue":"31","id":7341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3221:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":7316,"id":7342,"nodeType":"Return","src":"3214:8:21"}]}},"id":7348,"nodeType":"IfStatement","src":"3063:249:21","trueBody":{"id":7333,"nodeType":"Block","src":"3094:69:21","statements":[{"expression":{"hexValue":"33","id":7331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3116:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"functionReturnParameters":7316,"id":7332,"nodeType":"Return","src":"3109:8:21"}]}}]},"functionSelector":"a730117e","id":7350,"implemented":true,"kind":"function","modifiers":[],"name":"getVoteWeight","nameLocation":"2942:13:21","nodeType":"FunctionDefinition","parameters":{"id":7313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7312,"mutability":"mutable","name":"user","nameLocation":"2964:4:21","nodeType":"VariableDeclaration","scope":7350,"src":"2956:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7311,"name":"address","nodeType":"ElementaryTypeName","src":"2956:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2955:14:21"},"returnParameters":{"id":7316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7350,"src":"2991:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2990:9:21"},"scope":7674,"src":"2933:386:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7416,"nodeType":"Block","src":"3375:600:21","statements":[{"assignments":[7357],"declarations":[{"constant":false,"id":7357,"mutability":"mutable","name":"reportData","nameLocation":"3401:10:21","nodeType":"VariableDeclaration","scope":7416,"src":"3386:25:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"},"typeName":{"id":7356,"nodeType":"UserDefinedTypeName","pathNode":{"id":7355,"name":"Report","nameLocations":["3386:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":7116,"src":"3386:6:21"},"referencedDeclaration":7116,"src":"3386:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"}},"visibility":"internal"}],"id":7361,"initialValue":{"baseExpression":{"id":7358,"name":"reports","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"3414:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Report_$7116_storage_$","typeString":"mapping(uint256 => struct participate.Report storage ref)"}},"id":7360,"indexExpression":{"id":7359,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"3422:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3414:17:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage","typeString":"struct participate.Report storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3386:45:21"},{"expression":{"arguments":[{"expression":{"id":7365,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"3499:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3510:8:21","memberName":"uploader","nodeType":"MemberAccess","referencedDeclaration":7104,"src":"3499:19:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":7367,"name":"REPORT_REWARD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"3520:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7368,"name":"REPORT_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"3536:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3520:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7362,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"3480:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3486:12:21","memberName":"rewardTokens","nodeType":"MemberAccess","referencedDeclaration":7065,"src":"3480:18:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3480:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7371,"nodeType":"ExpressionStatement","src":"3480:69:21"},{"body":{"id":7414,"nodeType":"Block","src":"3685:277:21","statements":[{"assignments":[7385],"declarations":[{"constant":false,"id":7385,"mutability":"mutable","name":"validator","nameLocation":"3708:9:21","nodeType":"VariableDeclaration","scope":7414,"src":"3700:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7384,"name":"address","nodeType":"ElementaryTypeName","src":"3700:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7390,"initialValue":{"baseExpression":{"expression":{"id":7386,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"3720:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3731:10:21","memberName":"validators","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"3720:21:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7389,"indexExpression":{"id":7388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"3742:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3720:24:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3700:44:21"},{"condition":{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":7391,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"3763:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3774:5:21","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"3763:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int8_$","typeString":"mapping(address => int8)"}},"id":7394,"indexExpression":{"id":7393,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"3780:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3763:27:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3794:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3763:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7407,"nodeType":"IfStatement","src":"3759:136:21","trueBody":{"id":7406,"nodeType":"Block","src":"3797:98:21","statements":[{"expression":{"arguments":[{"id":7400,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"3835:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":7401,"name":"VALIDATE_REWARD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"3846:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7402,"name":"VALIDATE_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"3864:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3846:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7397,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"3816:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3822:12:21","memberName":"rewardTokens","nodeType":"MemberAccess","referencedDeclaration":7065,"src":"3816:18:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3816:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7405,"nodeType":"ExpressionStatement","src":"3816:63:21"}]}},{"expression":{"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7408,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"3909:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7410,"indexExpression":{"id":7409,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"3922:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3909:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7411,"name":"VALIDATE_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"3936:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3909:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7413,"nodeType":"ExpressionStatement","src":"3909:41:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7376,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"3646:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":7377,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"3650:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3661:10:21","memberName":"validators","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"3650:21:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3672:6:21","memberName":"length","nodeType":"MemberAccess","src":"3650:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3646:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7415,"initializationExpression":{"assignments":[7373],"declarations":[{"constant":false,"id":7373,"mutability":"mutable","name":"i","nameLocation":"3639:1:21","nodeType":"VariableDeclaration","scope":7415,"src":"3631:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7372,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7375,"initialValue":{"hexValue":"30","id":7374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3643:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3631:13:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3680:3:21","subExpression":{"id":7381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"3680:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7383,"nodeType":"ExpressionStatement","src":"3680:3:21"},"nodeType":"ForStatement","src":"3626:336:21"}]},"id":7417,"implemented":true,"kind":"function","modifiers":[],"name":"_posoutcome","nameLocation":"3336:11:21","nodeType":"FunctionDefinition","parameters":{"id":7353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7352,"mutability":"mutable","name":"reportId","nameLocation":"3356:8:21","nodeType":"VariableDeclaration","scope":7417,"src":"3348:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3348:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3347:18:21"},"returnParameters":{"id":7354,"nodeType":"ParameterList","parameters":[],"src":"3375:0:21"},"scope":7674,"src":"3327:648:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7474,"nodeType":"Block","src":"4031:493:21","statements":[{"assignments":[7424],"declarations":[{"constant":false,"id":7424,"mutability":"mutable","name":"reportData","nameLocation":"4057:10:21","nodeType":"VariableDeclaration","scope":7474,"src":"4042:25:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"},"typeName":{"id":7423,"nodeType":"UserDefinedTypeName","pathNode":{"id":7422,"name":"Report","nameLocations":["4042:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":7116,"src":"4042:6:21"},"referencedDeclaration":7116,"src":"4042:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"}},"visibility":"internal"}],"id":7428,"initialValue":{"baseExpression":{"id":7425,"name":"reports","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"4070:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Report_$7116_storage_$","typeString":"mapping(uint256 => struct participate.Report storage ref)"}},"id":7427,"indexExpression":{"id":7426,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"4078:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4070:17:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage","typeString":"struct participate.Report storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4042:45:21"},{"body":{"id":7472,"nodeType":"Block","src":"4235:278:21","statements":[{"assignments":[7442],"declarations":[{"constant":false,"id":7442,"mutability":"mutable","name":"validator","nameLocation":"4258:9:21","nodeType":"VariableDeclaration","scope":7472,"src":"4250:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7441,"name":"address","nodeType":"ElementaryTypeName","src":"4250:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7447,"initialValue":{"baseExpression":{"expression":{"id":7443,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"4270:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4281:10:21","memberName":"validators","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"4270:21:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7446,"indexExpression":{"id":7445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"4292:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4270:24:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4250:44:21"},{"condition":{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":7448,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"4313:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4324:5:21","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"4313:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int8_$","typeString":"mapping(address => int8)"}},"id":7451,"indexExpression":{"id":7450,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7442,"src":"4330:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4313:27:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"4344:2:21","subExpression":{"hexValue":"31","id":7452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4345:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"src":"4313:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7465,"nodeType":"IfStatement","src":"4309:137:21","trueBody":{"id":7464,"nodeType":"Block","src":"4348:98:21","statements":[{"expression":{"arguments":[{"id":7458,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7442,"src":"4386:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":7459,"name":"VALIDATE_REWARD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"4397:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7460,"name":"VALIDATE_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"4415:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7455,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"4367:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4373:12:21","memberName":"rewardTokens","nodeType":"MemberAccess","referencedDeclaration":7065,"src":"4367:18:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7463,"nodeType":"ExpressionStatement","src":"4367:63:21"}]}},{"expression":{"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7466,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"4460:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7468,"indexExpression":{"id":7467,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7442,"src":"4473:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4460:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7469,"name":"VALIDATE_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"4487:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4460:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7471,"nodeType":"ExpressionStatement","src":"4460:41:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7433,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"4196:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":7434,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"4200:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4211:10:21","memberName":"validators","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"4200:21:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:6:21","memberName":"length","nodeType":"MemberAccess","src":"4200:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4196:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7473,"initializationExpression":{"assignments":[7430],"declarations":[{"constant":false,"id":7430,"mutability":"mutable","name":"i","nameLocation":"4189:1:21","nodeType":"VariableDeclaration","scope":7473,"src":"4181:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7429,"name":"uint256","nodeType":"ElementaryTypeName","src":"4181:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7432,"initialValue":{"hexValue":"30","id":7431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4193:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4181:13:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4230:3:21","subExpression":{"id":7438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"4230:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7440,"nodeType":"ExpressionStatement","src":"4230:3:21"},"nodeType":"ForStatement","src":"4176:337:21"}]},"id":7475,"implemented":true,"kind":"function","modifiers":[],"name":"_negoutcome","nameLocation":"3992:11:21","nodeType":"FunctionDefinition","parameters":{"id":7420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7419,"mutability":"mutable","name":"reportId","nameLocation":"4012:8:21","nodeType":"VariableDeclaration","scope":7475,"src":"4004:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7418,"name":"uint256","nodeType":"ElementaryTypeName","src":"4004:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4003:18:21"},"returnParameters":{"id":7421,"nodeType":"ParameterList","parameters":[],"src":"4031:0:21"},"scope":7674,"src":"3983:541:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7522,"nodeType":"Block","src":"4591:581:21","statements":[{"assignments":[7482],"declarations":[{"constant":false,"id":7482,"mutability":"mutable","name":"reportData","nameLocation":"4639:10:21","nodeType":"VariableDeclaration","scope":7522,"src":"4624:25:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"},"typeName":{"id":7481,"nodeType":"UserDefinedTypeName","pathNode":{"id":7480,"name":"Report","nameLocations":["4624:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":7116,"src":"4624:6:21"},"referencedDeclaration":7116,"src":"4624:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"}},"visibility":"internal"}],"id":7486,"initialValue":{"baseExpression":{"id":7483,"name":"reports","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"4652:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Report_$7116_storage_$","typeString":"mapping(uint256 => struct participate.Report storage ref)"}},"id":7485,"indexExpression":{"id":7484,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"4660:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4652:17:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage","typeString":"struct participate.Report storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4624:45:21"},{"expression":{"arguments":[{"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4730:21:21","subExpression":{"expression":{"id":7488,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"4731:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4742:9:21","memberName":"validated","nodeType":"MemberAccess","referencedDeclaration":7108,"src":"4731:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792076616c696461746564","id":7491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4753:19:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913","typeString":"literal_string \"Already validated\""},"value":"Already validated"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913","typeString":"literal_string \"Already validated\""}],"id":7487,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4722:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4722:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7493,"nodeType":"ExpressionStatement","src":"4722:51:21"},{"expression":{"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7494,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"4784:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4795:9:21","memberName":"validated","nodeType":"MemberAccess","referencedDeclaration":7108,"src":"4784:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4807:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4784:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7499,"nodeType":"ExpressionStatement","src":"4784:27:21"},{"expression":{"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7500,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"4824:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7503,"indexExpression":{"expression":{"id":7501,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"4837:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4848:8:21","memberName":"uploader","nodeType":"MemberAccess","referencedDeclaration":7104,"src":"4837:19:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4824:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7504,"name":"REPORT_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"4861:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4824:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7506,"nodeType":"ExpressionStatement","src":"4824:49:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7507,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"4888:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4899:9:21","memberName":"net_votes","nodeType":"MemberAccess","referencedDeclaration":7106,"src":"4888:20:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4911:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4888:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7520,"nodeType":"Block","src":"5059:104:21","statements":[{"expression":{"arguments":[{"id":7517,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"5086:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7516,"name":"_negoutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"5074:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5074:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7519,"nodeType":"ExpressionStatement","src":"5074:21:21"}]},"id":7521,"nodeType":"IfStatement","src":"4884:279:21","trueBody":{"id":7515,"nodeType":"Block","src":"4914:139:21","statements":[{"expression":{"arguments":[{"id":7512,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"4969:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7511,"name":"_posoutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"4957:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4957:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7514,"nodeType":"ExpressionStatement","src":"4957:21:21"}]}}]},"functionSelector":"fa9c48b7","id":7523,"implemented":true,"kind":"function","modifiers":[],"name":"finalizeReport","nameLocation":"4546:14:21","nodeType":"FunctionDefinition","parameters":{"id":7478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7477,"mutability":"mutable","name":"reportId","nameLocation":"4569:8:21","nodeType":"VariableDeclaration","scope":7523,"src":"4561:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7476,"name":"uint256","nodeType":"ElementaryTypeName","src":"4561:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4560:18:21"},"returnParameters":{"id":7479,"nodeType":"ParameterList","parameters":[],"src":"4591:0:21"},"scope":7674,"src":"4537:635:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7605,"nodeType":"Block","src":"5228:627:21","statements":[{"assignments":[7530],"declarations":[{"constant":false,"id":7530,"mutability":"mutable","name":"reportData","nameLocation":"5254:10:21","nodeType":"VariableDeclaration","scope":7605,"src":"5239:25:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"},"typeName":{"id":7529,"nodeType":"UserDefinedTypeName","pathNode":{"id":7528,"name":"Report","nameLocations":["5239:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":7116,"src":"5239:6:21"},"referencedDeclaration":7116,"src":"5239:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"}},"visibility":"internal"}],"id":7534,"initialValue":{"baseExpression":{"id":7531,"name":"reports","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"5267:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Report_$7116_storage_$","typeString":"mapping(uint256 => struct participate.Report storage ref)"}},"id":7533,"indexExpression":{"id":7532,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"5275:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5267:17:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage","typeString":"struct participate.Report storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5239:45:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int8","typeString":"int8"},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":7536,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7530,"src":"5305:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5316:5:21","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"5305:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int8_$","typeString":"mapping(address => int8)"}},"id":7540,"indexExpression":{"expression":{"id":7538,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5322:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5326:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5322:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5305:28:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5337:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5305:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752068617665206e6f7420766f746564206f7220616c7265616479207265766f6b6564","id":7543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5340:39:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f","typeString":"literal_string \"You have not voted or already revoked\""},"value":"You have not voted or already revoked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f","typeString":"literal_string \"You have not voted or already revoked\""}],"id":7535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5297:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5297:83:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7545,"nodeType":"ExpressionStatement","src":"5297:83:21"},{"assignments":[7547],"declarations":[{"constant":false,"id":7547,"mutability":"mutable","name":"userVote","nameLocation":"5398:8:21","nodeType":"VariableDeclaration","scope":7605,"src":"5393:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7546,"name":"int8","nodeType":"ElementaryTypeName","src":"5393:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"id":7553,"initialValue":{"baseExpression":{"expression":{"id":7548,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7530,"src":"5409:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5420:5:21","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"5409:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int8_$","typeString":"mapping(address => int8)"}},"id":7552,"indexExpression":{"expression":{"id":7550,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5426:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5430:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5426:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5409:28:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"VariableDeclarationStatement","src":"5393:44:21"},{"expression":{"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7554,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"5492:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7557,"indexExpression":{"expression":{"id":7555,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5505:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5509:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5505:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5492:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7558,"name":"VALIDATE_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"5520:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5492:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7560,"nodeType":"ExpressionStatement","src":"5492:42:21"},{"expression":{"arguments":[{"expression":{"id":7564,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5564:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5568:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5564:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7566,"name":"VALIDATE_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"5576:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7561,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"5545:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5551:12:21","memberName":"rewardTokens","nodeType":"MemberAccess","referencedDeclaration":7065,"src":"5545:18:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5545:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7568,"nodeType":"ExpressionStatement","src":"5545:46:21"},{"assignments":[7570],"declarations":[{"constant":false,"id":7570,"mutability":"mutable","name":"weight","nameLocation":"5651:6:21","nodeType":"VariableDeclaration","scope":7605,"src":"5643:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7569,"name":"uint256","nodeType":"ElementaryTypeName","src":"5643:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7575,"initialValue":{"arguments":[{"expression":{"id":7572,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5674:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5678:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5674:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7571,"name":"getVoteWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"5660:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5660:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5643:42:21"},{"expression":{"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7576,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7530,"src":"5696:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5707:9:21","memberName":"net_votes","nodeType":"MemberAccess","referencedDeclaration":7106,"src":"5696:20:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7581,"name":"userVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7547,"src":"5727:8:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":7584,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"5745:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5738:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7582,"name":"int256","nodeType":"ElementaryTypeName","src":"5738:6:21","typeDescriptions":{}}},"id":7585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5738:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5727:25:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5720:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7579,"name":"int256","nodeType":"ElementaryTypeName","src":"5720:6:21","typeDescriptions":{}}},"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5696:57:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7589,"nodeType":"ExpressionStatement","src":"5696:57:21"},{"expression":{"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7590,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7530,"src":"5764:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5775:5:21","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"5764:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_int8_$","typeString":"mapping(address => int8)"}},"id":7595,"indexExpression":{"expression":{"id":7592,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5781:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5785:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5781:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5764:28:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5795:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5764:32:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7598,"nodeType":"ExpressionStatement","src":"5764:32:21"},{"eventCall":{"arguments":[{"id":7600,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"5826:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7601,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5836:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5840:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5836:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7599,"name":"VoteRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"5814:11:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5814:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7604,"nodeType":"EmitStatement","src":"5809:38:21"}]},"functionSelector":"6b38516f","id":7606,"implemented":true,"kind":"function","modifiers":[],"name":"revoke_vote","nameLocation":"5189:11:21","nodeType":"FunctionDefinition","parameters":{"id":7526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7525,"mutability":"mutable","name":"reportId","nameLocation":"5209:8:21","nodeType":"VariableDeclaration","scope":7606,"src":"5201:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7524,"name":"uint256","nodeType":"ElementaryTypeName","src":"5201:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5200:18:21"},"returnParameters":{"id":7527,"nodeType":"ParameterList","parameters":[],"src":"5228:0:21"},"scope":7674,"src":"5180:675:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7660,"nodeType":"Block","src":"5913:493:21","statements":[{"assignments":[7613],"declarations":[{"constant":false,"id":7613,"mutability":"mutable","name":"reportData","nameLocation":"5939:10:21","nodeType":"VariableDeclaration","scope":7660,"src":"5924:25:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"},"typeName":{"id":7612,"nodeType":"UserDefinedTypeName","pathNode":{"id":7611,"name":"Report","nameLocations":["5924:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":7116,"src":"5924:6:21"},"referencedDeclaration":7116,"src":"5924:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report"}},"visibility":"internal"}],"id":7617,"initialValue":{"baseExpression":{"id":7614,"name":"reports","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"5952:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Report_$7116_storage_$","typeString":"mapping(uint256 => struct participate.Report storage ref)"}},"id":7616,"indexExpression":{"id":7615,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"5960:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5952:17:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage","typeString":"struct participate.Report storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5924:45:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7619,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5990:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5994:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5990:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7621,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"6004:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6015:8:21","memberName":"uploader","nodeType":"MemberAccess","referencedDeclaration":7104,"src":"6004:19:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5990:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792075706c6f616465722063616e207265766f6b65","id":7624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6025:26:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7","typeString":"literal_string \"Only uploader can revoke\""},"value":"Only uploader can revoke"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7","typeString":"literal_string \"Only uploader can revoke\""}],"id":7618,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5982:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7626,"nodeType":"ExpressionStatement","src":"5982:70:21"},{"expression":{"arguments":[{"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6071:21:21","subExpression":{"expression":{"id":7628,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"6072:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6083:9:21","memberName":"validated","nodeType":"MemberAccess","referencedDeclaration":7108,"src":"6072:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265706f727420616c72656164792066696e616c697a6564","id":7631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6094:26:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac","typeString":"literal_string \"Report already finalized\""},"value":"Report already finalized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac","typeString":"literal_string \"Report already finalized\""}],"id":7627,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6063:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6063:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7633,"nodeType":"ExpressionStatement","src":"6063:58:21"},{"expression":{"arguments":[{"expression":{"id":7637,"name":"reportData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"6193:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage_ptr","typeString":"struct participate.Report storage pointer"}},"id":7638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6204:8:21","memberName":"uploader","nodeType":"MemberAccess","referencedDeclaration":7104,"src":"6193:19:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7639,"name":"REPORT_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"6214:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7634,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"6174:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_CampusToken_$7066","typeString":"contract CampusToken"}},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6180:12:21","memberName":"rewardTokens","nodeType":"MemberAccess","referencedDeclaration":7065,"src":"6174:18:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7641,"nodeType":"ExpressionStatement","src":"6174:53:21"},{"expression":{"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7642,"name":"stakedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"6238:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7645,"indexExpression":{"expression":{"id":7643,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6251:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6255:6:21","memberName":"sender","nodeType":"MemberAccess","src":"6251:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6238:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7646,"name":"REPORT_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"6266:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6238:40:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7648,"nodeType":"ExpressionStatement","src":"6238:40:21"},{"expression":{"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6321:24:21","subExpression":{"baseExpression":{"id":7649,"name":"reports","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"6328:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Report_$7116_storage_$","typeString":"mapping(uint256 => struct participate.Report storage ref)"}},"id":7651,"indexExpression":{"id":7650,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"6336:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6328:17:21","typeDescriptions":{"typeIdentifier":"t_struct$_Report_$7116_storage","typeString":"struct participate.Report storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7653,"nodeType":"ExpressionStatement","src":"6321:24:21"},{"eventCall":{"arguments":[{"id":7655,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"6377:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7656,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6387:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6391:6:21","memberName":"sender","nodeType":"MemberAccess","src":"6387:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7654,"name":"ReportRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"6363:13:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6363:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7659,"nodeType":"EmitStatement","src":"6358:40:21"}]},"functionSelector":"ca93ef19","id":7661,"implemented":true,"kind":"function","modifiers":[],"name":"revoke_report","nameLocation":"5872:13:21","nodeType":"FunctionDefinition","parameters":{"id":7609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7608,"mutability":"mutable","name":"reportId","nameLocation":"5894:8:21","nodeType":"VariableDeclaration","scope":7661,"src":"5886:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7607,"name":"uint256","nodeType":"ElementaryTypeName","src":"5886:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5885:18:21"},"returnParameters":{"id":7610,"nodeType":"ParameterList","parameters":[],"src":"5913:0:21"},"scope":7674,"src":"5863:543:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"b6c537d4d5cd45cf3082c7458c198a25e5e551611604a18df485c806c2125c40","id":7667,"name":"VoteRevoked","nameLocation":"6420:11:21","nodeType":"EventDefinition","parameters":{"id":7666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7663,"indexed":false,"mutability":"mutable","name":"reportId","nameLocation":"6440:8:21","nodeType":"VariableDeclaration","scope":7667,"src":"6432:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7662,"name":"uint256","nodeType":"ElementaryTypeName","src":"6432:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7665,"indexed":false,"mutability":"mutable","name":"voter","nameLocation":"6458:5:21","nodeType":"VariableDeclaration","scope":7667,"src":"6450:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7664,"name":"address","nodeType":"ElementaryTypeName","src":"6450:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6431:33:21"},"src":"6414:51:21"},{"anonymous":false,"eventSelector":"d70d884c5bc88c9a05d6a19993baba89fc62d9c3a7a02925bd6a748b2051d0bf","id":7673,"name":"ReportRevoked","nameLocation":"6477:13:21","nodeType":"EventDefinition","parameters":{"id":7672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7669,"indexed":false,"mutability":"mutable","name":"reportId","nameLocation":"6499:8:21","nodeType":"VariableDeclaration","scope":7673,"src":"6491:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7668,"name":"uint256","nodeType":"ElementaryTypeName","src":"6491:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7671,"indexed":false,"mutability":"mutable","name":"uploader","nameLocation":"6517:8:21","nodeType":"VariableDeclaration","scope":7673,"src":"6509:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7670,"name":"address","nodeType":"ElementaryTypeName","src":"6509:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6490:36:21"},"src":"6471:56:21"}],"scope":7675,"src":"92:6438:21","usedErrors":[],"usedEvents":[7667,7673]}],"src":"33:6499:21"},"id":21}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdd0a585e22b0ee75d9b326c251df05a910d8edccab17e4db3cfd7e00f7169b84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6f23becda6cd87e9d96803e35647b3a8973dadc082b0d7344b0fd3232f83c25\",\"dweb:/ipfs/QmdXggVZu4S5eP7uAvW1STAxtfXnAaiUFB3LDU5ohQv6e9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdd0a585e22b0ee75d9b326c251df05a910d8edccab17e4db3cfd7e00f7169b84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6f23becda6cd87e9d96803e35647b3a8973dadc082b0d7344b0fd3232f83c25\",\"dweb:/ipfs/QmdXggVZu4S5eP7uAvW1STAxtfXnAaiUFB3LDU5ohQv6e9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x75d915918e62946caf04224552ec67cec8761941907c8a144c1ea8167856c430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://165246da467a540613d7ec3b2758eafdb724d87576088dde94483b02e8136353\",\"dweb:/ipfs/QmQp41YPLHyKAdy7MyMmTzBRaZhA6xxXMt1oUmfEss8bmv\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x79ee51693b808ffdb306266b04709183c403b04078211b149794bc11d6c3fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b360520e990c689b887ed508c6f6acff9309dc207c0f05ad8ebcacf4b98cb\",\"dweb:/ipfs/QmeXjWT5Z5X5UzMbiBd3MoEUnfNAtV8HpoasznLkq34JWZ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0xb2ac469a92e3980b87267eacabd4e470df6cf278858efa230f69c723316c138d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ce61d28f35bf80f21d884b285b4061c938e400a0d90d7a8176e2cacf29b5eaf\",\"dweb:/ipfs/Qmar9FHYkwMVvQYtDoeJFETryVwBPTPs1dxhvKG1AMah1c\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x077980096776135bbc9dd792d7bac26933c055854431d5015de62ad756ca86a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e233f83b0dd2c741dae729bbbe1177af49ce7d78185eb89657cae14444525b2a\",\"dweb:/ipfs/QmWR6XzkTNynXjhCFHkYMVTUoM9bjBNv3jorGTzzrgUnXW\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x4698a3b9e053c05db8466bddc85fe5732d4e52eeede6b03769dc0fe099998078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db853b48d7358744ec277afa884a0514c595d90933d497835b75738ade9586b4\",\"dweb:/ipfs/QmTRBWHtor5jHpheZDA3g5Kf5mPqBQi77X25Q1CQRrS2SJ\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbe22c37080f9052e0e18062a527a19f9354703ee48888c71baf0abd747a34a8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb85649fce273c8c19eeba7db292f92b6653263ae39f12e427a066b998c9cec4\",\"dweb:/ipfs/QmRaTEqA15siRJoiPCuvtzK29dgXxQu94n4JBabHUSFXXQ\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x312a8b2d6e47bdeffa1f275e000fd7a58c73a0687706c24f677fd019dfec10fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8f6a3338774e6d948e9ae84534d6bb2125cac94cfb8cf67e980284e5d2a923\",\"dweb:/ipfs/QmNmysmWKYvn1R8jVKhz6GNedzbDbB6G95hvVEJyCuqWDC\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x70d0d56812a450b9295367b992c591f809559673805fc7749ac9e67491c905b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://218fbb6cd38c6eaae3c1a013a0de481b7250a19845df788eeb6604c66e05b435\",\"dweb:/ipfs/QmQETgZDZyc8EimR5h3woEzWPVogKBNsj8Lhw5bQnvRoyg\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x6fc9a48c3d39d70e64acac472509822e001b9ca996653576efb17b19c56b38f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fb4a208e464691b05cc33477e138dc837372e8fe3192efee08094aa5fad4acc\",\"dweb:/ipfs/QmcLuyckN8xRPBNDVV9dqBn1FNQrN9R3GktDJSW3s7r2ts\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x79ee51693b808ffdb306266b04709183c403b04078211b149794bc11d6c3fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b360520e990c689b887ed508c6f6acff9309dc207c0f05ad8ebcacf4b98cb\",\"dweb:/ipfs/QmeXjWT5Z5X5UzMbiBd3MoEUnfNAtV8HpoasznLkq34JWZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0xb2ac469a92e3980b87267eacabd4e470df6cf278858efa230f69c723316c138d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ce61d28f35bf80f21d884b285b4061c938e400a0d90d7a8176e2cacf29b5eaf\",\"dweb:/ipfs/Qmar9FHYkwMVvQYtDoeJFETryVwBPTPs1dxhvKG1AMah1c\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220119f1e613e29bc2f24edded6d82d57af0b5d7d46a398cd9f26e2fbebd62672c164736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SWAP16 0x1E PUSH2 0x3E29 0xBC 0x2F 0x24 0xED 0xDE 0xD6 0xD8 0x2D JUMPI 0xAF SIGNEXTEND TSTORE PUSH30 0x46A398CD9F26E2FBEBD62672C164736F6C634300081C0033000000000000 ","sourceMap":"682:1346:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220119f1e613e29bc2f24edded6d82d57af0b5d7d46a398cd9f26e2fbebd62672c164736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SWAP16 0x1E PUSH2 0x3E29 0xBC 0x2F 0x24 0xED 0xDE 0xD6 0xD8 0x2D JUMPI 0xAF SIGNEXTEND TSTORE PUSH30 0x46A398CD9F26E2FBEBD62672C164736F6C634300081C0033000000000000 ","sourceMap":"682:1346:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122042d3ee0dda0c663e172a0a73efc45bfdd3532a1f7cdbe05150964bad579e019a64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xD3 0xEE 0xD 0xDA 0xC PUSH7 0x3E172A0A73EFC4 JUMPDEST REVERT 0xD3 MSTORE8 0x2A 0x1F PUSH29 0xDBE05150964BAD579E019A64736F6C634300081C003300000000000000 ","sourceMap":"1294:3108:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122042d3ee0dda0c663e172a0a73efc45bfdd3532a1f7cdbe05150964bad579e019a64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xD3 0xEE 0xD 0xDA 0xC PUSH7 0x3E172A0A73EFC4 JUMPDEST REVERT 0xD3 MSTORE8 0x2A 0x1F PUSH29 0xDBE05150964BAD579E019A64736F6C634300081C003300000000000000 ","sourceMap":"1294:3108:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x077980096776135bbc9dd792d7bac26933c055854431d5015de62ad756ca86a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e233f83b0dd2c741dae729bbbe1177af49ce7d78185eb89657cae14444525b2a\",\"dweb:/ipfs/QmWR6XzkTNynXjhCFHkYMVTUoM9bjBNv3jorGTzzrgUnXW\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5350bfca7cac79cd8cf919e509f5781a962e312dc55eba6523dd868541b19ca64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 CALLDATALOAD SIGNEXTEND 0xFC 0xA7 0xCA 0xC7 SWAP13 0xD8 0xCF SWAP2 SWAP15 POP SWAP16 JUMPI DUP2 0xA9 PUSH3 0xE312DC SSTORE 0xEB 0xA6 MSTORE RETURNDATASIZE 0xD8 PUSH9 0x541B19CA64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"1440:2883:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5350bfca7cac79cd8cf919e509f5781a962e312dc55eba6523dd868541b19ca64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 CALLDATALOAD SIGNEXTEND 0xFC 0xA7 0xCA 0xC7 SWAP13 0xD8 0xCF SWAP2 SWAP15 POP SWAP16 JUMPI DUP2 0xA9 PUSH3 0xE312DC SSTORE 0xEB 0xA6 MSTORE RETURNDATASIZE 0xD8 PUSH9 0x541B19CA64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"1440:2883:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122024d2095ffde6527961d44e0a8c7d957594f4097fc9097beebba96d4c33a73f6964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xD2 MULMOD PUSH0 REVERT 0xE6 MSTORE PUSH26 0x61D44E0A8C7D957594F4097FC9097BEEBBA96D4C33A73F696473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"309:16969:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122024d2095ffde6527961d44e0a8c7d957594f4097fc9097beebba96d4c33a73f6964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xD2 MULMOD PUSH0 REVERT 0xE6 MSTORE PUSH26 0x61D44E0A8C7D957594F4097FC9097BEEBBA96D4C33A73F696473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"309:16969:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x4698a3b9e053c05db8466bddc85fe5732d4e52eeede6b03769dc0fe099998078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db853b48d7358744ec277afa884a0514c595d90933d497835b75738ade9586b4\",\"dweb:/ipfs/QmTRBWHtor5jHpheZDA3g5Kf5mPqBQi77X25Q1CQRrS2SJ\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x6fc9a48c3d39d70e64acac472509822e001b9ca996653576efb17b19c56b38f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fb4a208e464691b05cc33477e138dc837372e8fe3192efee08094aa5fad4acc\",\"dweb:/ipfs/QmcLuyckN8xRPBNDVV9dqBn1FNQrN9R3GktDJSW3s7r2ts\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cb6515402887962bd85bc182404740a163fe944b8ab4c1e4d3e579209f0f3fc64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xB6515402887962BD85BC182404 PUSH21 0xA163FE944B8AB4C1E4D3E579209F0F3FC64736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"355:7638:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cb6515402887962bd85bc182404740a163fe944b8ab4c1e4d3e579209f0f3fc64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xB6515402887962BD85BC182404 PUSH21 0xA163FE944B8AB4C1E4D3E579209F0F3FC64736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"355:7638:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbe22c37080f9052e0e18062a527a19f9354703ee48888c71baf0abd747a34a8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb85649fce273c8c19eeba7db292f92b6653263ae39f12e427a066b998c9cec4\",\"dweb:/ipfs/QmRaTEqA15siRJoiPCuvtzK29dgXxQu94n4JBabHUSFXXQ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x077980096776135bbc9dd792d7bac26933c055854431d5015de62ad756ca86a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e233f83b0dd2c741dae729bbbe1177af49ce7d78185eb89657cae14444525b2a\",\"dweb:/ipfs/QmWR6XzkTNynXjhCFHkYMVTUoM9bjBNv3jorGTzzrgUnXW\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x4698a3b9e053c05db8466bddc85fe5732d4e52eeede6b03769dc0fe099998078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db853b48d7358744ec277afa884a0514c595d90933d497835b75738ade9586b4\",\"dweb:/ipfs/QmTRBWHtor5jHpheZDA3g5Kf5mPqBQi77X25Q1CQRrS2SJ\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x312a8b2d6e47bdeffa1f275e000fd7a58c73a0687706c24f677fd019dfec10fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8f6a3338774e6d948e9ae84534d6bb2125cac94cfb8cf67e980284e5d2a923\",\"dweb:/ipfs/QmNmysmWKYvn1R8jVKhz6GNedzbDbB6G95hvVEJyCuqWDC\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x70d0d56812a450b9295367b992c591f809559673805fc7749ac9e67491c905b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://218fbb6cd38c6eaae3c1a013a0de481b7250a19845df788eeb6604c66e05b435\",\"dweb:/ipfs/QmQETgZDZyc8EimR5h3woEzWPVogKBNsj8Lhw5bQnvRoyg\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x6fc9a48c3d39d70e64acac472509822e001b9ca996653576efb17b19c56b38f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fb4a208e464691b05cc33477e138dc837372e8fe3192efee08094aa5fad4acc\",\"dweb:/ipfs/QmcLuyckN8xRPBNDVV9dqBn1FNQrN9R3GktDJSW3s7r2ts\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc9ab1a3fa1a7bd2f630f31dda572ec1bd6d788a063014c181bdb123956a13f564736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC SWAP11 0xB1 LOG3 STATICCALL BYTE PUSH28 0xD2F630F31DDA572EC1BD6D788A063014C181BDB123956A13F564736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"535:3250:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc9ab1a3fa1a7bd2f630f31dda572ec1bd6d788a063014c181bdb123956a13f564736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC SWAP11 0xB1 LOG3 STATICCALL BYTE PUSH28 0xD2F630F31DDA572EC1BD6D788A063014C181BDB123956A13F564736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"535:3250:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x4698a3b9e053c05db8466bddc85fe5732d4e52eeede6b03769dc0fe099998078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db853b48d7358744ec277afa884a0514c595d90933d497835b75738ade9586b4\",\"dweb:/ipfs/QmTRBWHtor5jHpheZDA3g5Kf5mPqBQi77X25Q1CQRrS2SJ\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x70d0d56812a450b9295367b992c591f809559673805fc7749ac9e67491c905b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://218fbb6cd38c6eaae3c1a013a0de481b7250a19845df788eeb6604c66e05b435\",\"dweb:/ipfs/QmQETgZDZyc8EimR5h3woEzWPVogKBNsj8Lhw5bQnvRoyg\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x6fc9a48c3d39d70e64acac472509822e001b9ca996653576efb17b19c56b38f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fb4a208e464691b05cc33477e138dc837372e8fe3192efee08094aa5fad4acc\",\"dweb:/ipfs/QmcLuyckN8xRPBNDVV9dqBn1FNQrN9R3GktDJSW3s7r2ts\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d506b298ab52fe45f494db37429405c7437e1cde87b9dcf9aa5f684c8b4f96be64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 MOD 0xB2 SWAP9 0xAB MSTORE INVALID GASLIMIT DELEGATECALL SWAP5 0xDB CALLDATACOPY TIMESTAMP SWAP5 SDIV 0xC7 NUMBER PUSH31 0x1CDE87B9DCF9AA5F684C8B4F96BE64736F6C634300081C0033000000000000 ","sourceMap":"292:28699:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d506b298ab52fe45f494db37429405c7437e1cde87b9dcf9aa5f684c8b4f96be64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 MOD 0xB2 SWAP9 0xAB MSTORE INVALID GASLIMIT DELEGATECALL SWAP5 0xDB CALLDATACOPY TIMESTAMP SWAP5 SDIV 0xC7 NUMBER PUSH31 0x1CDE87B9DCF9AA5F684C8B4F96BE64736F6C634300081C0033000000000000 ","sourceMap":"292:28699:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x6fc9a48c3d39d70e64acac472509822e001b9ca996653576efb17b19c56b38f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fb4a208e464691b05cc33477e138dc837372e8fe3192efee08094aa5fad4acc\",\"dweb:/ipfs/QmcLuyckN8xRPBNDVV9dqBn1FNQrN9R3GktDJSW3s7r2ts\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023db9f35fdd4e22c1840048d0b3063eb34c45c1b1084e0bd4085c92b3fd7a94d64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xDB SWAP16 CALLDATALOAD REVERT 0xD4 0xE2 0x2C XOR BLOCKHASH DIV DUP14 SIGNEXTEND ADDRESS PUSH4 0xEB34C45C SHL LT DUP5 0xE0 0xBD BLOCKHASH DUP6 0xC9 0x2B EXTCODEHASH 0xD7 0xA9 0x4D PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"787:35316:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023db9f35fdd4e22c1840048d0b3063eb34c45c1b1084e0bd4085c92b3fd7a94d64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xDB SWAP16 CALLDATALOAD REVERT 0xD4 0xE2 0x2C XOR BLOCKHASH DIV DUP14 SIGNEXTEND ADDRESS PUSH4 0xEB34C45C SHL LT DUP5 0xE0 0xBD BLOCKHASH DUP6 0xC9 0x2B EXTCODEHASH 0xD7 0xA9 0x4D PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"787:35316:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b11ce3f52794f5c0c495e7cffbe49e2ad33105bbdb4d50c55b6f23b5567508ce64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SHR 0xE3 CREATE2 0x27 SWAP5 CREATE2 0xC0 0xC4 SWAP6 0xE7 0xCF 0xFB 0xE4 SWAP15 0x2A 0xD3 BALANCE SDIV 0xBB 0xDB 0x4D POP 0xC5 JUMPDEST PUSH16 0x23B5567508CE64736F6C634300081C00 CALLER ","sourceMap":"268:2411:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b11ce3f52794f5c0c495e7cffbe49e2ad33105bbdb4d50c55b6f23b5567508ce64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SHR 0xE3 CREATE2 0x27 SWAP5 CREATE2 0xC0 0xC4 SWAP6 0xE7 0xCF 0xFB 0xE4 SWAP15 0x2A 0xD3 BALANCE SDIV 0xBB 0xDB 0x4D POP 0xC5 JUMPDEST PUSH16 0x23B5567508CE64736F6C634300081C00 CALLER ","sourceMap":"268:2411:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}"}},"contracts/CampusToken.sol":{"CampusToken":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"rewardTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3254":{"entryPoint":null,"id":3254,"parameterSlots":2,"returnSlots":0},"@_361":{"entryPoint":null,"id":361,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7015":{"entryPoint":null,"id":7015,"parameterSlots":2,"returnSlots":0},"@_951":{"entryPoint":null,"id":951,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_3301":{"entryPoint":944,"id":3301,"parameterSlots":0,"returnSlots":1},"@_mint_664":{"entryPoint":1044,"id":664,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":666,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_631":{"entryPoint":1294,"id":631,"parameterSlots":3,"returnSlots":0},"@decimals_388":{"entryPoint":1035,"id":388,"parameterSlots":0,"returnSlots":1},"@getStringSlot_1586":{"entryPoint":1284,"id":1586,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1426":{"entryPoint":864,"id":1426,"parameterSlots":2,"returnSlots":1},"@toShortString_1328":{"entryPoint":1180,"id":1328,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1921,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":1942,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2808,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3368,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3557,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3383,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2823,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3851,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":3398,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3614,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3906,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":3659,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2160,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3648,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2006,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3481,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3799,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2910,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":3217,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2993,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3292,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2457,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1880,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3358,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1848,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2292,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3204,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2422,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":2312,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2598,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3498,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2181,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2111,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2570,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":2302,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2540,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2850,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2064,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2017,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2346,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":3675,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1843,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3540,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2197,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":2897,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2527,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2398,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2210,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2356,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1898,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2393,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:14055:22","nodeType":"YulBlock","src":"0:14055:22","statements":[{"body":{"nativeSrc":"47:35:22","nodeType":"YulBlock","src":"47:35:22","statements":[{"nativeSrc":"57:19:22","nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:22","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:22","nodeType":"YulIdentifier","src":"67:5:22"},"nativeSrc":"67:9:22","nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:22","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:22","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:22","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nativeSrc":"177:28:22","nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:22","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:22","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:22","nodeType":"YulIdentifier","src":"187:6:22"},"nativeSrc":"187:12:22","nodeType":"YulFunctionCall","src":"187:12:22"},"nativeSrc":"187:12:22","nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:22","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nativeSrc":"300:28:22","nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:22","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:22","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:22","nodeType":"YulIdentifier","src":"310:6:22"},"nativeSrc":"310:12:22","nodeType":"YulFunctionCall","src":"310:12:22"},"nativeSrc":"310:12:22","nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:22","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nativeSrc":"379:81:22","nodeType":"YulBlock","src":"379:81:22","statements":[{"nativeSrc":"389:65:22","nodeType":"YulAssignment","src":"389:65:22","value":{"arguments":[{"name":"value","nativeSrc":"404:5:22","nodeType":"YulIdentifier","src":"404:5:22"},{"kind":"number","nativeSrc":"411:42:22","nodeType":"YulLiteral","src":"411:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:22","nodeType":"YulIdentifier","src":"400:3:22"},"nativeSrc":"400:54:22","nodeType":"YulFunctionCall","src":"400:54:22"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:22","nodeType":"YulIdentifier","src":"389:7:22"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:22","nodeType":"YulTypedName","src":"361:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:22","nodeType":"YulTypedName","src":"371:7:22","type":""}],"src":"334:126:22"},{"body":{"nativeSrc":"511:51:22","nodeType":"YulBlock","src":"511:51:22","statements":[{"nativeSrc":"521:35:22","nodeType":"YulAssignment","src":"521:35:22","value":{"arguments":[{"name":"value","nativeSrc":"550:5:22","nodeType":"YulIdentifier","src":"550:5:22"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:22","nodeType":"YulIdentifier","src":"532:17:22"},"nativeSrc":"532:24:22","nodeType":"YulFunctionCall","src":"532:24:22"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:22","nodeType":"YulIdentifier","src":"521:7:22"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:22","nodeType":"YulTypedName","src":"493:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:22","nodeType":"YulTypedName","src":"503:7:22","type":""}],"src":"466:96:22"},{"body":{"nativeSrc":"611:79:22","nodeType":"YulBlock","src":"611:79:22","statements":[{"body":{"nativeSrc":"668:16:22","nodeType":"YulBlock","src":"668:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:22","nodeType":"YulLiteral","src":"677:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:22","nodeType":"YulLiteral","src":"680:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:22","nodeType":"YulIdentifier","src":"670:6:22"},"nativeSrc":"670:12:22","nodeType":"YulFunctionCall","src":"670:12:22"},"nativeSrc":"670:12:22","nodeType":"YulExpressionStatement","src":"670:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:22","nodeType":"YulIdentifier","src":"634:5:22"},{"arguments":[{"name":"value","nativeSrc":"659:5:22","nodeType":"YulIdentifier","src":"659:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:22","nodeType":"YulIdentifier","src":"641:17:22"},"nativeSrc":"641:24:22","nodeType":"YulFunctionCall","src":"641:24:22"}],"functionName":{"name":"eq","nativeSrc":"631:2:22","nodeType":"YulIdentifier","src":"631:2:22"},"nativeSrc":"631:35:22","nodeType":"YulFunctionCall","src":"631:35:22"}],"functionName":{"name":"iszero","nativeSrc":"624:6:22","nodeType":"YulIdentifier","src":"624:6:22"},"nativeSrc":"624:43:22","nodeType":"YulFunctionCall","src":"624:43:22"},"nativeSrc":"621:63:22","nodeType":"YulIf","src":"621:63:22"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:22","nodeType":"YulTypedName","src":"604:5:22","type":""}],"src":"568:122:22"},{"body":{"nativeSrc":"759:80:22","nodeType":"YulBlock","src":"759:80:22","statements":[{"nativeSrc":"769:22:22","nodeType":"YulAssignment","src":"769:22:22","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:22","nodeType":"YulIdentifier","src":"784:6:22"}],"functionName":{"name":"mload","nativeSrc":"778:5:22","nodeType":"YulIdentifier","src":"778:5:22"},"nativeSrc":"778:13:22","nodeType":"YulFunctionCall","src":"778:13:22"},"variableNames":[{"name":"value","nativeSrc":"769:5:22","nodeType":"YulIdentifier","src":"769:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:22","nodeType":"YulIdentifier","src":"827:5:22"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:22","nodeType":"YulIdentifier","src":"800:26:22"},"nativeSrc":"800:33:22","nodeType":"YulFunctionCall","src":"800:33:22"},"nativeSrc":"800:33:22","nodeType":"YulExpressionStatement","src":"800:33:22"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:22","nodeType":"YulTypedName","src":"737:6:22","type":""},{"name":"end","nativeSrc":"745:3:22","nodeType":"YulTypedName","src":"745:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:22","nodeType":"YulTypedName","src":"753:5:22","type":""}],"src":"696:143:22"},{"body":{"nativeSrc":"939:413:22","nodeType":"YulBlock","src":"939:413:22","statements":[{"body":{"nativeSrc":"985:83:22","nodeType":"YulBlock","src":"985:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"987:77:22","nodeType":"YulIdentifier","src":"987:77:22"},"nativeSrc":"987:79:22","nodeType":"YulFunctionCall","src":"987:79:22"},"nativeSrc":"987:79:22","nodeType":"YulExpressionStatement","src":"987:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"960:7:22","nodeType":"YulIdentifier","src":"960:7:22"},{"name":"headStart","nativeSrc":"969:9:22","nodeType":"YulIdentifier","src":"969:9:22"}],"functionName":{"name":"sub","nativeSrc":"956:3:22","nodeType":"YulIdentifier","src":"956:3:22"},"nativeSrc":"956:23:22","nodeType":"YulFunctionCall","src":"956:23:22"},{"kind":"number","nativeSrc":"981:2:22","nodeType":"YulLiteral","src":"981:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"952:3:22","nodeType":"YulIdentifier","src":"952:3:22"},"nativeSrc":"952:32:22","nodeType":"YulFunctionCall","src":"952:32:22"},"nativeSrc":"949:119:22","nodeType":"YulIf","src":"949:119:22"},{"nativeSrc":"1078:128:22","nodeType":"YulBlock","src":"1078:128:22","statements":[{"nativeSrc":"1093:15:22","nodeType":"YulVariableDeclaration","src":"1093:15:22","value":{"kind":"number","nativeSrc":"1107:1:22","nodeType":"YulLiteral","src":"1107:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1097:6:22","nodeType":"YulTypedName","src":"1097:6:22","type":""}]},{"nativeSrc":"1122:74:22","nodeType":"YulAssignment","src":"1122:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1168:9:22","nodeType":"YulIdentifier","src":"1168:9:22"},{"name":"offset","nativeSrc":"1179:6:22","nodeType":"YulIdentifier","src":"1179:6:22"}],"functionName":{"name":"add","nativeSrc":"1164:3:22","nodeType":"YulIdentifier","src":"1164:3:22"},"nativeSrc":"1164:22:22","nodeType":"YulFunctionCall","src":"1164:22:22"},{"name":"dataEnd","nativeSrc":"1188:7:22","nodeType":"YulIdentifier","src":"1188:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1132:31:22","nodeType":"YulIdentifier","src":"1132:31:22"},"nativeSrc":"1132:64:22","nodeType":"YulFunctionCall","src":"1132:64:22"},"variableNames":[{"name":"value0","nativeSrc":"1122:6:22","nodeType":"YulIdentifier","src":"1122:6:22"}]}]},{"nativeSrc":"1216:129:22","nodeType":"YulBlock","src":"1216:129:22","statements":[{"nativeSrc":"1231:16:22","nodeType":"YulVariableDeclaration","src":"1231:16:22","value":{"kind":"number","nativeSrc":"1245:2:22","nodeType":"YulLiteral","src":"1245:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1235:6:22","nodeType":"YulTypedName","src":"1235:6:22","type":""}]},{"nativeSrc":"1261:74:22","nodeType":"YulAssignment","src":"1261:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1307:9:22","nodeType":"YulIdentifier","src":"1307:9:22"},{"name":"offset","nativeSrc":"1318:6:22","nodeType":"YulIdentifier","src":"1318:6:22"}],"functionName":{"name":"add","nativeSrc":"1303:3:22","nodeType":"YulIdentifier","src":"1303:3:22"},"nativeSrc":"1303:22:22","nodeType":"YulFunctionCall","src":"1303:22:22"},{"name":"dataEnd","nativeSrc":"1327:7:22","nodeType":"YulIdentifier","src":"1327:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1271:31:22","nodeType":"YulIdentifier","src":"1271:31:22"},"nativeSrc":"1271:64:22","nodeType":"YulFunctionCall","src":"1271:64:22"},"variableNames":[{"name":"value1","nativeSrc":"1261:6:22","nodeType":"YulIdentifier","src":"1261:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"845:507:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"901:9:22","nodeType":"YulTypedName","src":"901:9:22","type":""},{"name":"dataEnd","nativeSrc":"912:7:22","nodeType":"YulTypedName","src":"912:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"924:6:22","nodeType":"YulTypedName","src":"924:6:22","type":""},{"name":"value1","nativeSrc":"932:6:22","nodeType":"YulTypedName","src":"932:6:22","type":""}],"src":"845:507:22"},{"body":{"nativeSrc":"1417:40:22","nodeType":"YulBlock","src":"1417:40:22","statements":[{"nativeSrc":"1428:22:22","nodeType":"YulAssignment","src":"1428:22:22","value":{"arguments":[{"name":"value","nativeSrc":"1444:5:22","nodeType":"YulIdentifier","src":"1444:5:22"}],"functionName":{"name":"mload","nativeSrc":"1438:5:22","nodeType":"YulIdentifier","src":"1438:5:22"},"nativeSrc":"1438:12:22","nodeType":"YulFunctionCall","src":"1438:12:22"},"variableNames":[{"name":"length","nativeSrc":"1428:6:22","nodeType":"YulIdentifier","src":"1428:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1358:99:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1400:5:22","nodeType":"YulTypedName","src":"1400:5:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1410:6:22","nodeType":"YulTypedName","src":"1410:6:22","type":""}],"src":"1358:99:22"},{"body":{"nativeSrc":"1491:152:22","nodeType":"YulBlock","src":"1491:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1508:1:22","nodeType":"YulLiteral","src":"1508:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1511:77:22","nodeType":"YulLiteral","src":"1511:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1501:6:22","nodeType":"YulIdentifier","src":"1501:6:22"},"nativeSrc":"1501:88:22","nodeType":"YulFunctionCall","src":"1501:88:22"},"nativeSrc":"1501:88:22","nodeType":"YulExpressionStatement","src":"1501:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1605:1:22","nodeType":"YulLiteral","src":"1605:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"1608:4:22","nodeType":"YulLiteral","src":"1608:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1598:6:22","nodeType":"YulIdentifier","src":"1598:6:22"},"nativeSrc":"1598:15:22","nodeType":"YulFunctionCall","src":"1598:15:22"},"nativeSrc":"1598:15:22","nodeType":"YulExpressionStatement","src":"1598:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1629:1:22","nodeType":"YulLiteral","src":"1629:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1632:4:22","nodeType":"YulLiteral","src":"1632:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1622:6:22","nodeType":"YulIdentifier","src":"1622:6:22"},"nativeSrc":"1622:15:22","nodeType":"YulFunctionCall","src":"1622:15:22"},"nativeSrc":"1622:15:22","nodeType":"YulExpressionStatement","src":"1622:15:22"}]},"name":"panic_error_0x41","nativeSrc":"1463:180:22","nodeType":"YulFunctionDefinition","src":"1463:180:22"},{"body":{"nativeSrc":"1677:152:22","nodeType":"YulBlock","src":"1677:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1694:1:22","nodeType":"YulLiteral","src":"1694:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1697:77:22","nodeType":"YulLiteral","src":"1697:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1687:6:22","nodeType":"YulIdentifier","src":"1687:6:22"},"nativeSrc":"1687:88:22","nodeType":"YulFunctionCall","src":"1687:88:22"},"nativeSrc":"1687:88:22","nodeType":"YulExpressionStatement","src":"1687:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1791:1:22","nodeType":"YulLiteral","src":"1791:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"1794:4:22","nodeType":"YulLiteral","src":"1794:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1784:6:22","nodeType":"YulIdentifier","src":"1784:6:22"},"nativeSrc":"1784:15:22","nodeType":"YulFunctionCall","src":"1784:15:22"},"nativeSrc":"1784:15:22","nodeType":"YulExpressionStatement","src":"1784:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1815:1:22","nodeType":"YulLiteral","src":"1815:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1818:4:22","nodeType":"YulLiteral","src":"1818:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1808:6:22","nodeType":"YulIdentifier","src":"1808:6:22"},"nativeSrc":"1808:15:22","nodeType":"YulFunctionCall","src":"1808:15:22"},"nativeSrc":"1808:15:22","nodeType":"YulExpressionStatement","src":"1808:15:22"}]},"name":"panic_error_0x22","nativeSrc":"1649:180:22","nodeType":"YulFunctionDefinition","src":"1649:180:22"},{"body":{"nativeSrc":"1886:269:22","nodeType":"YulBlock","src":"1886:269:22","statements":[{"nativeSrc":"1896:22:22","nodeType":"YulAssignment","src":"1896:22:22","value":{"arguments":[{"name":"data","nativeSrc":"1910:4:22","nodeType":"YulIdentifier","src":"1910:4:22"},{"kind":"number","nativeSrc":"1916:1:22","nodeType":"YulLiteral","src":"1916:1:22","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1906:3:22","nodeType":"YulIdentifier","src":"1906:3:22"},"nativeSrc":"1906:12:22","nodeType":"YulFunctionCall","src":"1906:12:22"},"variableNames":[{"name":"length","nativeSrc":"1896:6:22","nodeType":"YulIdentifier","src":"1896:6:22"}]},{"nativeSrc":"1927:38:22","nodeType":"YulVariableDeclaration","src":"1927:38:22","value":{"arguments":[{"name":"data","nativeSrc":"1957:4:22","nodeType":"YulIdentifier","src":"1957:4:22"},{"kind":"number","nativeSrc":"1963:1:22","nodeType":"YulLiteral","src":"1963:1:22","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1953:3:22","nodeType":"YulIdentifier","src":"1953:3:22"},"nativeSrc":"1953:12:22","nodeType":"YulFunctionCall","src":"1953:12:22"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1931:18:22","nodeType":"YulTypedName","src":"1931:18:22","type":""}]},{"body":{"nativeSrc":"2004:51:22","nodeType":"YulBlock","src":"2004:51:22","statements":[{"nativeSrc":"2018:27:22","nodeType":"YulAssignment","src":"2018:27:22","value":{"arguments":[{"name":"length","nativeSrc":"2032:6:22","nodeType":"YulIdentifier","src":"2032:6:22"},{"kind":"number","nativeSrc":"2040:4:22","nodeType":"YulLiteral","src":"2040:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2028:3:22","nodeType":"YulIdentifier","src":"2028:3:22"},"nativeSrc":"2028:17:22","nodeType":"YulFunctionCall","src":"2028:17:22"},"variableNames":[{"name":"length","nativeSrc":"2018:6:22","nodeType":"YulIdentifier","src":"2018:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1984:18:22","nodeType":"YulIdentifier","src":"1984:18:22"}],"functionName":{"name":"iszero","nativeSrc":"1977:6:22","nodeType":"YulIdentifier","src":"1977:6:22"},"nativeSrc":"1977:26:22","nodeType":"YulFunctionCall","src":"1977:26:22"},"nativeSrc":"1974:81:22","nodeType":"YulIf","src":"1974:81:22"},{"body":{"nativeSrc":"2107:42:22","nodeType":"YulBlock","src":"2107:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"2121:16:22","nodeType":"YulIdentifier","src":"2121:16:22"},"nativeSrc":"2121:18:22","nodeType":"YulFunctionCall","src":"2121:18:22"},"nativeSrc":"2121:18:22","nodeType":"YulExpressionStatement","src":"2121:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2071:18:22","nodeType":"YulIdentifier","src":"2071:18:22"},{"arguments":[{"name":"length","nativeSrc":"2094:6:22","nodeType":"YulIdentifier","src":"2094:6:22"},{"kind":"number","nativeSrc":"2102:2:22","nodeType":"YulLiteral","src":"2102:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2091:2:22","nodeType":"YulIdentifier","src":"2091:2:22"},"nativeSrc":"2091:14:22","nodeType":"YulFunctionCall","src":"2091:14:22"}],"functionName":{"name":"eq","nativeSrc":"2068:2:22","nodeType":"YulIdentifier","src":"2068:2:22"},"nativeSrc":"2068:38:22","nodeType":"YulFunctionCall","src":"2068:38:22"},"nativeSrc":"2065:84:22","nodeType":"YulIf","src":"2065:84:22"}]},"name":"extract_byte_array_length","nativeSrc":"1835:320:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1870:4:22","nodeType":"YulTypedName","src":"1870:4:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1879:6:22","nodeType":"YulTypedName","src":"1879:6:22","type":""}],"src":"1835:320:22"},{"body":{"nativeSrc":"2215:87:22","nodeType":"YulBlock","src":"2215:87:22","statements":[{"nativeSrc":"2225:11:22","nodeType":"YulAssignment","src":"2225:11:22","value":{"name":"ptr","nativeSrc":"2233:3:22","nodeType":"YulIdentifier","src":"2233:3:22"},"variableNames":[{"name":"data","nativeSrc":"2225:4:22","nodeType":"YulIdentifier","src":"2225:4:22"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2253:1:22","nodeType":"YulLiteral","src":"2253:1:22","type":"","value":"0"},{"name":"ptr","nativeSrc":"2256:3:22","nodeType":"YulIdentifier","src":"2256:3:22"}],"functionName":{"name":"mstore","nativeSrc":"2246:6:22","nodeType":"YulIdentifier","src":"2246:6:22"},"nativeSrc":"2246:14:22","nodeType":"YulFunctionCall","src":"2246:14:22"},"nativeSrc":"2246:14:22","nodeType":"YulExpressionStatement","src":"2246:14:22"},{"nativeSrc":"2269:26:22","nodeType":"YulAssignment","src":"2269:26:22","value":{"arguments":[{"kind":"number","nativeSrc":"2287:1:22","nodeType":"YulLiteral","src":"2287:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2290:4:22","nodeType":"YulLiteral","src":"2290:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2277:9:22","nodeType":"YulIdentifier","src":"2277:9:22"},"nativeSrc":"2277:18:22","nodeType":"YulFunctionCall","src":"2277:18:22"},"variableNames":[{"name":"data","nativeSrc":"2269:4:22","nodeType":"YulIdentifier","src":"2269:4:22"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2161:141:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2202:3:22","nodeType":"YulTypedName","src":"2202:3:22","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2210:4:22","nodeType":"YulTypedName","src":"2210:4:22","type":""}],"src":"2161:141:22"},{"body":{"nativeSrc":"2352:49:22","nodeType":"YulBlock","src":"2352:49:22","statements":[{"nativeSrc":"2362:33:22","nodeType":"YulAssignment","src":"2362:33:22","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2380:5:22","nodeType":"YulIdentifier","src":"2380:5:22"},{"kind":"number","nativeSrc":"2387:2:22","nodeType":"YulLiteral","src":"2387:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2376:3:22","nodeType":"YulIdentifier","src":"2376:3:22"},"nativeSrc":"2376:14:22","nodeType":"YulFunctionCall","src":"2376:14:22"},{"kind":"number","nativeSrc":"2392:2:22","nodeType":"YulLiteral","src":"2392:2:22","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2372:3:22","nodeType":"YulIdentifier","src":"2372:3:22"},"nativeSrc":"2372:23:22","nodeType":"YulFunctionCall","src":"2372:23:22"},"variableNames":[{"name":"result","nativeSrc":"2362:6:22","nodeType":"YulIdentifier","src":"2362:6:22"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2308:93:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2335:5:22","nodeType":"YulTypedName","src":"2335:5:22","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2345:6:22","nodeType":"YulTypedName","src":"2345:6:22","type":""}],"src":"2308:93:22"},{"body":{"nativeSrc":"2460:54:22","nodeType":"YulBlock","src":"2460:54:22","statements":[{"nativeSrc":"2470:37:22","nodeType":"YulAssignment","src":"2470:37:22","value":{"arguments":[{"name":"bits","nativeSrc":"2495:4:22","nodeType":"YulIdentifier","src":"2495:4:22"},{"name":"value","nativeSrc":"2501:5:22","nodeType":"YulIdentifier","src":"2501:5:22"}],"functionName":{"name":"shl","nativeSrc":"2491:3:22","nodeType":"YulIdentifier","src":"2491:3:22"},"nativeSrc":"2491:16:22","nodeType":"YulFunctionCall","src":"2491:16:22"},"variableNames":[{"name":"newValue","nativeSrc":"2470:8:22","nodeType":"YulIdentifier","src":"2470:8:22"}]}]},"name":"shift_left_dynamic","nativeSrc":"2407:107:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2435:4:22","nodeType":"YulTypedName","src":"2435:4:22","type":""},{"name":"value","nativeSrc":"2441:5:22","nodeType":"YulTypedName","src":"2441:5:22","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2451:8:22","nodeType":"YulTypedName","src":"2451:8:22","type":""}],"src":"2407:107:22"},{"body":{"nativeSrc":"2596:317:22","nodeType":"YulBlock","src":"2596:317:22","statements":[{"nativeSrc":"2606:35:22","nodeType":"YulVariableDeclaration","src":"2606:35:22","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2627:10:22","nodeType":"YulIdentifier","src":"2627:10:22"},{"kind":"number","nativeSrc":"2639:1:22","nodeType":"YulLiteral","src":"2639:1:22","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2623:3:22","nodeType":"YulIdentifier","src":"2623:3:22"},"nativeSrc":"2623:18:22","nodeType":"YulFunctionCall","src":"2623:18:22"},"variables":[{"name":"shiftBits","nativeSrc":"2610:9:22","nodeType":"YulTypedName","src":"2610:9:22","type":""}]},{"nativeSrc":"2650:109:22","nodeType":"YulVariableDeclaration","src":"2650:109:22","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2681:9:22","nodeType":"YulIdentifier","src":"2681:9:22"},{"kind":"number","nativeSrc":"2692:66:22","nodeType":"YulLiteral","src":"2692:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2662:18:22","nodeType":"YulIdentifier","src":"2662:18:22"},"nativeSrc":"2662:97:22","nodeType":"YulFunctionCall","src":"2662:97:22"},"variables":[{"name":"mask","nativeSrc":"2654:4:22","nodeType":"YulTypedName","src":"2654:4:22","type":""}]},{"nativeSrc":"2768:51:22","nodeType":"YulAssignment","src":"2768:51:22","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2799:9:22","nodeType":"YulIdentifier","src":"2799:9:22"},{"name":"toInsert","nativeSrc":"2810:8:22","nodeType":"YulIdentifier","src":"2810:8:22"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2780:18:22","nodeType":"YulIdentifier","src":"2780:18:22"},"nativeSrc":"2780:39:22","nodeType":"YulFunctionCall","src":"2780:39:22"},"variableNames":[{"name":"toInsert","nativeSrc":"2768:8:22","nodeType":"YulIdentifier","src":"2768:8:22"}]},{"nativeSrc":"2828:30:22","nodeType":"YulAssignment","src":"2828:30:22","value":{"arguments":[{"name":"value","nativeSrc":"2841:5:22","nodeType":"YulIdentifier","src":"2841:5:22"},{"arguments":[{"name":"mask","nativeSrc":"2852:4:22","nodeType":"YulIdentifier","src":"2852:4:22"}],"functionName":{"name":"not","nativeSrc":"2848:3:22","nodeType":"YulIdentifier","src":"2848:3:22"},"nativeSrc":"2848:9:22","nodeType":"YulFunctionCall","src":"2848:9:22"}],"functionName":{"name":"and","nativeSrc":"2837:3:22","nodeType":"YulIdentifier","src":"2837:3:22"},"nativeSrc":"2837:21:22","nodeType":"YulFunctionCall","src":"2837:21:22"},"variableNames":[{"name":"value","nativeSrc":"2828:5:22","nodeType":"YulIdentifier","src":"2828:5:22"}]},{"nativeSrc":"2867:40:22","nodeType":"YulAssignment","src":"2867:40:22","value":{"arguments":[{"name":"value","nativeSrc":"2880:5:22","nodeType":"YulIdentifier","src":"2880:5:22"},{"arguments":[{"name":"toInsert","nativeSrc":"2891:8:22","nodeType":"YulIdentifier","src":"2891:8:22"},{"name":"mask","nativeSrc":"2901:4:22","nodeType":"YulIdentifier","src":"2901:4:22"}],"functionName":{"name":"and","nativeSrc":"2887:3:22","nodeType":"YulIdentifier","src":"2887:3:22"},"nativeSrc":"2887:19:22","nodeType":"YulFunctionCall","src":"2887:19:22"}],"functionName":{"name":"or","nativeSrc":"2877:2:22","nodeType":"YulIdentifier","src":"2877:2:22"},"nativeSrc":"2877:30:22","nodeType":"YulFunctionCall","src":"2877:30:22"},"variableNames":[{"name":"result","nativeSrc":"2867:6:22","nodeType":"YulIdentifier","src":"2867:6:22"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2520:393:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2557:5:22","nodeType":"YulTypedName","src":"2557:5:22","type":""},{"name":"shiftBytes","nativeSrc":"2564:10:22","nodeType":"YulTypedName","src":"2564:10:22","type":""},{"name":"toInsert","nativeSrc":"2576:8:22","nodeType":"YulTypedName","src":"2576:8:22","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2589:6:22","nodeType":"YulTypedName","src":"2589:6:22","type":""}],"src":"2520:393:22"},{"body":{"nativeSrc":"2964:32:22","nodeType":"YulBlock","src":"2964:32:22","statements":[{"nativeSrc":"2974:16:22","nodeType":"YulAssignment","src":"2974:16:22","value":{"name":"value","nativeSrc":"2985:5:22","nodeType":"YulIdentifier","src":"2985:5:22"},"variableNames":[{"name":"cleaned","nativeSrc":"2974:7:22","nodeType":"YulIdentifier","src":"2974:7:22"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2919:77:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2946:5:22","nodeType":"YulTypedName","src":"2946:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2956:7:22","nodeType":"YulTypedName","src":"2956:7:22","type":""}],"src":"2919:77:22"},{"body":{"nativeSrc":"3034:28:22","nodeType":"YulBlock","src":"3034:28:22","statements":[{"nativeSrc":"3044:12:22","nodeType":"YulAssignment","src":"3044:12:22","value":{"name":"value","nativeSrc":"3051:5:22","nodeType":"YulIdentifier","src":"3051:5:22"},"variableNames":[{"name":"ret","nativeSrc":"3044:3:22","nodeType":"YulIdentifier","src":"3044:3:22"}]}]},"name":"identity","nativeSrc":"3002:60:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3020:5:22","nodeType":"YulTypedName","src":"3020:5:22","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3030:3:22","nodeType":"YulTypedName","src":"3030:3:22","type":""}],"src":"3002:60:22"},{"body":{"nativeSrc":"3128:82:22","nodeType":"YulBlock","src":"3128:82:22","statements":[{"nativeSrc":"3138:66:22","nodeType":"YulAssignment","src":"3138:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3196:5:22","nodeType":"YulIdentifier","src":"3196:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3178:17:22","nodeType":"YulIdentifier","src":"3178:17:22"},"nativeSrc":"3178:24:22","nodeType":"YulFunctionCall","src":"3178:24:22"}],"functionName":{"name":"identity","nativeSrc":"3169:8:22","nodeType":"YulIdentifier","src":"3169:8:22"},"nativeSrc":"3169:34:22","nodeType":"YulFunctionCall","src":"3169:34:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3151:17:22","nodeType":"YulIdentifier","src":"3151:17:22"},"nativeSrc":"3151:53:22","nodeType":"YulFunctionCall","src":"3151:53:22"},"variableNames":[{"name":"converted","nativeSrc":"3138:9:22","nodeType":"YulIdentifier","src":"3138:9:22"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3068:142:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3108:5:22","nodeType":"YulTypedName","src":"3108:5:22","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3118:9:22","nodeType":"YulTypedName","src":"3118:9:22","type":""}],"src":"3068:142:22"},{"body":{"nativeSrc":"3263:28:22","nodeType":"YulBlock","src":"3263:28:22","statements":[{"nativeSrc":"3273:12:22","nodeType":"YulAssignment","src":"3273:12:22","value":{"name":"value","nativeSrc":"3280:5:22","nodeType":"YulIdentifier","src":"3280:5:22"},"variableNames":[{"name":"ret","nativeSrc":"3273:3:22","nodeType":"YulIdentifier","src":"3273:3:22"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3216:75:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3249:5:22","nodeType":"YulTypedName","src":"3249:5:22","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3259:3:22","nodeType":"YulTypedName","src":"3259:3:22","type":""}],"src":"3216:75:22"},{"body":{"nativeSrc":"3373:193:22","nodeType":"YulBlock","src":"3373:193:22","statements":[{"nativeSrc":"3383:63:22","nodeType":"YulVariableDeclaration","src":"3383:63:22","value":{"arguments":[{"name":"value_0","nativeSrc":"3438:7:22","nodeType":"YulIdentifier","src":"3438:7:22"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3407:30:22","nodeType":"YulIdentifier","src":"3407:30:22"},"nativeSrc":"3407:39:22","nodeType":"YulFunctionCall","src":"3407:39:22"},"variables":[{"name":"convertedValue_0","nativeSrc":"3387:16:22","nodeType":"YulTypedName","src":"3387:16:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3462:4:22","nodeType":"YulIdentifier","src":"3462:4:22"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3502:4:22","nodeType":"YulIdentifier","src":"3502:4:22"}],"functionName":{"name":"sload","nativeSrc":"3496:5:22","nodeType":"YulIdentifier","src":"3496:5:22"},"nativeSrc":"3496:11:22","nodeType":"YulFunctionCall","src":"3496:11:22"},{"name":"offset","nativeSrc":"3509:6:22","nodeType":"YulIdentifier","src":"3509:6:22"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3541:16:22","nodeType":"YulIdentifier","src":"3541:16:22"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3517:23:22","nodeType":"YulIdentifier","src":"3517:23:22"},"nativeSrc":"3517:41:22","nodeType":"YulFunctionCall","src":"3517:41:22"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3468:27:22","nodeType":"YulIdentifier","src":"3468:27:22"},"nativeSrc":"3468:91:22","nodeType":"YulFunctionCall","src":"3468:91:22"}],"functionName":{"name":"sstore","nativeSrc":"3455:6:22","nodeType":"YulIdentifier","src":"3455:6:22"},"nativeSrc":"3455:105:22","nodeType":"YulFunctionCall","src":"3455:105:22"},"nativeSrc":"3455:105:22","nodeType":"YulExpressionStatement","src":"3455:105:22"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3297:269:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3350:4:22","nodeType":"YulTypedName","src":"3350:4:22","type":""},{"name":"offset","nativeSrc":"3356:6:22","nodeType":"YulTypedName","src":"3356:6:22","type":""},{"name":"value_0","nativeSrc":"3364:7:22","nodeType":"YulTypedName","src":"3364:7:22","type":""}],"src":"3297:269:22"},{"body":{"nativeSrc":"3621:24:22","nodeType":"YulBlock","src":"3621:24:22","statements":[{"nativeSrc":"3631:8:22","nodeType":"YulAssignment","src":"3631:8:22","value":{"kind":"number","nativeSrc":"3638:1:22","nodeType":"YulLiteral","src":"3638:1:22","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3631:3:22","nodeType":"YulIdentifier","src":"3631:3:22"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3572:73:22","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3617:3:22","nodeType":"YulTypedName","src":"3617:3:22","type":""}],"src":"3572:73:22"},{"body":{"nativeSrc":"3704:136:22","nodeType":"YulBlock","src":"3704:136:22","statements":[{"nativeSrc":"3714:46:22","nodeType":"YulVariableDeclaration","src":"3714:46:22","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3728:30:22","nodeType":"YulIdentifier","src":"3728:30:22"},"nativeSrc":"3728:32:22","nodeType":"YulFunctionCall","src":"3728:32:22"},"variables":[{"name":"zero_0","nativeSrc":"3718:6:22","nodeType":"YulTypedName","src":"3718:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3813:4:22","nodeType":"YulIdentifier","src":"3813:4:22"},{"name":"offset","nativeSrc":"3819:6:22","nodeType":"YulIdentifier","src":"3819:6:22"},{"name":"zero_0","nativeSrc":"3827:6:22","nodeType":"YulIdentifier","src":"3827:6:22"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3769:43:22","nodeType":"YulIdentifier","src":"3769:43:22"},"nativeSrc":"3769:65:22","nodeType":"YulFunctionCall","src":"3769:65:22"},"nativeSrc":"3769:65:22","nodeType":"YulExpressionStatement","src":"3769:65:22"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3651:189:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3690:4:22","nodeType":"YulTypedName","src":"3690:4:22","type":""},{"name":"offset","nativeSrc":"3696:6:22","nodeType":"YulTypedName","src":"3696:6:22","type":""}],"src":"3651:189:22"},{"body":{"nativeSrc":"3896:136:22","nodeType":"YulBlock","src":"3896:136:22","statements":[{"body":{"nativeSrc":"3963:63:22","nodeType":"YulBlock","src":"3963:63:22","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"4007:5:22","nodeType":"YulIdentifier","src":"4007:5:22"},{"kind":"number","nativeSrc":"4014:1:22","nodeType":"YulLiteral","src":"4014:1:22","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3977:29:22","nodeType":"YulIdentifier","src":"3977:29:22"},"nativeSrc":"3977:39:22","nodeType":"YulFunctionCall","src":"3977:39:22"},"nativeSrc":"3977:39:22","nodeType":"YulExpressionStatement","src":"3977:39:22"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3916:5:22","nodeType":"YulIdentifier","src":"3916:5:22"},{"name":"end","nativeSrc":"3923:3:22","nodeType":"YulIdentifier","src":"3923:3:22"}],"functionName":{"name":"lt","nativeSrc":"3913:2:22","nodeType":"YulIdentifier","src":"3913:2:22"},"nativeSrc":"3913:14:22","nodeType":"YulFunctionCall","src":"3913:14:22"},"nativeSrc":"3906:120:22","nodeType":"YulForLoop","post":{"nativeSrc":"3928:26:22","nodeType":"YulBlock","src":"3928:26:22","statements":[{"nativeSrc":"3930:22:22","nodeType":"YulAssignment","src":"3930:22:22","value":{"arguments":[{"name":"start","nativeSrc":"3943:5:22","nodeType":"YulIdentifier","src":"3943:5:22"},{"kind":"number","nativeSrc":"3950:1:22","nodeType":"YulLiteral","src":"3950:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3939:3:22","nodeType":"YulIdentifier","src":"3939:3:22"},"nativeSrc":"3939:13:22","nodeType":"YulFunctionCall","src":"3939:13:22"},"variableNames":[{"name":"start","nativeSrc":"3930:5:22","nodeType":"YulIdentifier","src":"3930:5:22"}]}]},"pre":{"nativeSrc":"3910:2:22","nodeType":"YulBlock","src":"3910:2:22","statements":[]},"src":"3906:120:22"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3846:186:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3884:5:22","nodeType":"YulTypedName","src":"3884:5:22","type":""},{"name":"end","nativeSrc":"3891:3:22","nodeType":"YulTypedName","src":"3891:3:22","type":""}],"src":"3846:186:22"},{"body":{"nativeSrc":"4117:464:22","nodeType":"YulBlock","src":"4117:464:22","statements":[{"body":{"nativeSrc":"4143:431:22","nodeType":"YulBlock","src":"4143:431:22","statements":[{"nativeSrc":"4157:54:22","nodeType":"YulVariableDeclaration","src":"4157:54:22","value":{"arguments":[{"name":"array","nativeSrc":"4205:5:22","nodeType":"YulIdentifier","src":"4205:5:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4173:31:22","nodeType":"YulIdentifier","src":"4173:31:22"},"nativeSrc":"4173:38:22","nodeType":"YulFunctionCall","src":"4173:38:22"},"variables":[{"name":"dataArea","nativeSrc":"4161:8:22","nodeType":"YulTypedName","src":"4161:8:22","type":""}]},{"nativeSrc":"4224:63:22","nodeType":"YulVariableDeclaration","src":"4224:63:22","value":{"arguments":[{"name":"dataArea","nativeSrc":"4247:8:22","nodeType":"YulIdentifier","src":"4247:8:22"},{"arguments":[{"name":"startIndex","nativeSrc":"4275:10:22","nodeType":"YulIdentifier","src":"4275:10:22"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4257:17:22","nodeType":"YulIdentifier","src":"4257:17:22"},"nativeSrc":"4257:29:22","nodeType":"YulFunctionCall","src":"4257:29:22"}],"functionName":{"name":"add","nativeSrc":"4243:3:22","nodeType":"YulIdentifier","src":"4243:3:22"},"nativeSrc":"4243:44:22","nodeType":"YulFunctionCall","src":"4243:44:22"},"variables":[{"name":"deleteStart","nativeSrc":"4228:11:22","nodeType":"YulTypedName","src":"4228:11:22","type":""}]},{"body":{"nativeSrc":"4444:27:22","nodeType":"YulBlock","src":"4444:27:22","statements":[{"nativeSrc":"4446:23:22","nodeType":"YulAssignment","src":"4446:23:22","value":{"name":"dataArea","nativeSrc":"4461:8:22","nodeType":"YulIdentifier","src":"4461:8:22"},"variableNames":[{"name":"deleteStart","nativeSrc":"4446:11:22","nodeType":"YulIdentifier","src":"4446:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4428:10:22","nodeType":"YulIdentifier","src":"4428:10:22"},{"kind":"number","nativeSrc":"4440:2:22","nodeType":"YulLiteral","src":"4440:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4425:2:22","nodeType":"YulIdentifier","src":"4425:2:22"},"nativeSrc":"4425:18:22","nodeType":"YulFunctionCall","src":"4425:18:22"},"nativeSrc":"4422:49:22","nodeType":"YulIf","src":"4422:49:22"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4513:11:22","nodeType":"YulIdentifier","src":"4513:11:22"},{"arguments":[{"name":"dataArea","nativeSrc":"4530:8:22","nodeType":"YulIdentifier","src":"4530:8:22"},{"arguments":[{"name":"len","nativeSrc":"4558:3:22","nodeType":"YulIdentifier","src":"4558:3:22"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4540:17:22","nodeType":"YulIdentifier","src":"4540:17:22"},"nativeSrc":"4540:22:22","nodeType":"YulFunctionCall","src":"4540:22:22"}],"functionName":{"name":"add","nativeSrc":"4526:3:22","nodeType":"YulIdentifier","src":"4526:3:22"},"nativeSrc":"4526:37:22","nodeType":"YulFunctionCall","src":"4526:37:22"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4484:28:22","nodeType":"YulIdentifier","src":"4484:28:22"},"nativeSrc":"4484:80:22","nodeType":"YulFunctionCall","src":"4484:80:22"},"nativeSrc":"4484:80:22","nodeType":"YulExpressionStatement","src":"4484:80:22"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4134:3:22","nodeType":"YulIdentifier","src":"4134:3:22"},{"kind":"number","nativeSrc":"4139:2:22","nodeType":"YulLiteral","src":"4139:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4131:2:22","nodeType":"YulIdentifier","src":"4131:2:22"},"nativeSrc":"4131:11:22","nodeType":"YulFunctionCall","src":"4131:11:22"},"nativeSrc":"4128:446:22","nodeType":"YulIf","src":"4128:446:22"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4038:543:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4093:5:22","nodeType":"YulTypedName","src":"4093:5:22","type":""},{"name":"len","nativeSrc":"4100:3:22","nodeType":"YulTypedName","src":"4100:3:22","type":""},{"name":"startIndex","nativeSrc":"4105:10:22","nodeType":"YulTypedName","src":"4105:10:22","type":""}],"src":"4038:543:22"},{"body":{"nativeSrc":"4650:54:22","nodeType":"YulBlock","src":"4650:54:22","statements":[{"nativeSrc":"4660:37:22","nodeType":"YulAssignment","src":"4660:37:22","value":{"arguments":[{"name":"bits","nativeSrc":"4685:4:22","nodeType":"YulIdentifier","src":"4685:4:22"},{"name":"value","nativeSrc":"4691:5:22","nodeType":"YulIdentifier","src":"4691:5:22"}],"functionName":{"name":"shr","nativeSrc":"4681:3:22","nodeType":"YulIdentifier","src":"4681:3:22"},"nativeSrc":"4681:16:22","nodeType":"YulFunctionCall","src":"4681:16:22"},"variableNames":[{"name":"newValue","nativeSrc":"4660:8:22","nodeType":"YulIdentifier","src":"4660:8:22"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4587:117:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4625:4:22","nodeType":"YulTypedName","src":"4625:4:22","type":""},{"name":"value","nativeSrc":"4631:5:22","nodeType":"YulTypedName","src":"4631:5:22","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4641:8:22","nodeType":"YulTypedName","src":"4641:8:22","type":""}],"src":"4587:117:22"},{"body":{"nativeSrc":"4761:118:22","nodeType":"YulBlock","src":"4761:118:22","statements":[{"nativeSrc":"4771:68:22","nodeType":"YulVariableDeclaration","src":"4771:68:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4820:1:22","nodeType":"YulLiteral","src":"4820:1:22","type":"","value":"8"},{"name":"bytes","nativeSrc":"4823:5:22","nodeType":"YulIdentifier","src":"4823:5:22"}],"functionName":{"name":"mul","nativeSrc":"4816:3:22","nodeType":"YulIdentifier","src":"4816:3:22"},"nativeSrc":"4816:13:22","nodeType":"YulFunctionCall","src":"4816:13:22"},{"arguments":[{"kind":"number","nativeSrc":"4835:1:22","nodeType":"YulLiteral","src":"4835:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4831:3:22","nodeType":"YulIdentifier","src":"4831:3:22"},"nativeSrc":"4831:6:22","nodeType":"YulFunctionCall","src":"4831:6:22"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4787:28:22","nodeType":"YulIdentifier","src":"4787:28:22"},"nativeSrc":"4787:51:22","nodeType":"YulFunctionCall","src":"4787:51:22"}],"functionName":{"name":"not","nativeSrc":"4783:3:22","nodeType":"YulIdentifier","src":"4783:3:22"},"nativeSrc":"4783:56:22","nodeType":"YulFunctionCall","src":"4783:56:22"},"variables":[{"name":"mask","nativeSrc":"4775:4:22","nodeType":"YulTypedName","src":"4775:4:22","type":""}]},{"nativeSrc":"4848:25:22","nodeType":"YulAssignment","src":"4848:25:22","value":{"arguments":[{"name":"data","nativeSrc":"4862:4:22","nodeType":"YulIdentifier","src":"4862:4:22"},{"name":"mask","nativeSrc":"4868:4:22","nodeType":"YulIdentifier","src":"4868:4:22"}],"functionName":{"name":"and","nativeSrc":"4858:3:22","nodeType":"YulIdentifier","src":"4858:3:22"},"nativeSrc":"4858:15:22","nodeType":"YulFunctionCall","src":"4858:15:22"},"variableNames":[{"name":"result","nativeSrc":"4848:6:22","nodeType":"YulIdentifier","src":"4848:6:22"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4710:169:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4738:4:22","nodeType":"YulTypedName","src":"4738:4:22","type":""},{"name":"bytes","nativeSrc":"4744:5:22","nodeType":"YulTypedName","src":"4744:5:22","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4754:6:22","nodeType":"YulTypedName","src":"4754:6:22","type":""}],"src":"4710:169:22"},{"body":{"nativeSrc":"4965:214:22","nodeType":"YulBlock","src":"4965:214:22","statements":[{"nativeSrc":"5098:37:22","nodeType":"YulAssignment","src":"5098:37:22","value":{"arguments":[{"name":"data","nativeSrc":"5125:4:22","nodeType":"YulIdentifier","src":"5125:4:22"},{"name":"len","nativeSrc":"5131:3:22","nodeType":"YulIdentifier","src":"5131:3:22"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5106:18:22","nodeType":"YulIdentifier","src":"5106:18:22"},"nativeSrc":"5106:29:22","nodeType":"YulFunctionCall","src":"5106:29:22"},"variableNames":[{"name":"data","nativeSrc":"5098:4:22","nodeType":"YulIdentifier","src":"5098:4:22"}]},{"nativeSrc":"5144:29:22","nodeType":"YulAssignment","src":"5144:29:22","value":{"arguments":[{"name":"data","nativeSrc":"5155:4:22","nodeType":"YulIdentifier","src":"5155:4:22"},{"arguments":[{"kind":"number","nativeSrc":"5165:1:22","nodeType":"YulLiteral","src":"5165:1:22","type":"","value":"2"},{"name":"len","nativeSrc":"5168:3:22","nodeType":"YulIdentifier","src":"5168:3:22"}],"functionName":{"name":"mul","nativeSrc":"5161:3:22","nodeType":"YulIdentifier","src":"5161:3:22"},"nativeSrc":"5161:11:22","nodeType":"YulFunctionCall","src":"5161:11:22"}],"functionName":{"name":"or","nativeSrc":"5152:2:22","nodeType":"YulIdentifier","src":"5152:2:22"},"nativeSrc":"5152:21:22","nodeType":"YulFunctionCall","src":"5152:21:22"},"variableNames":[{"name":"used","nativeSrc":"5144:4:22","nodeType":"YulIdentifier","src":"5144:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4884:295:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4946:4:22","nodeType":"YulTypedName","src":"4946:4:22","type":""},{"name":"len","nativeSrc":"4952:3:22","nodeType":"YulTypedName","src":"4952:3:22","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4960:4:22","nodeType":"YulTypedName","src":"4960:4:22","type":""}],"src":"4884:295:22"},{"body":{"nativeSrc":"5276:1303:22","nodeType":"YulBlock","src":"5276:1303:22","statements":[{"nativeSrc":"5287:51:22","nodeType":"YulVariableDeclaration","src":"5287:51:22","value":{"arguments":[{"name":"src","nativeSrc":"5334:3:22","nodeType":"YulIdentifier","src":"5334:3:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5301:32:22","nodeType":"YulIdentifier","src":"5301:32:22"},"nativeSrc":"5301:37:22","nodeType":"YulFunctionCall","src":"5301:37:22"},"variables":[{"name":"newLen","nativeSrc":"5291:6:22","nodeType":"YulTypedName","src":"5291:6:22","type":""}]},{"body":{"nativeSrc":"5423:22:22","nodeType":"YulBlock","src":"5423:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5425:16:22","nodeType":"YulIdentifier","src":"5425:16:22"},"nativeSrc":"5425:18:22","nodeType":"YulFunctionCall","src":"5425:18:22"},"nativeSrc":"5425:18:22","nodeType":"YulExpressionStatement","src":"5425:18:22"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5395:6:22","nodeType":"YulIdentifier","src":"5395:6:22"},{"kind":"number","nativeSrc":"5403:18:22","nodeType":"YulLiteral","src":"5403:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5392:2:22","nodeType":"YulIdentifier","src":"5392:2:22"},"nativeSrc":"5392:30:22","nodeType":"YulFunctionCall","src":"5392:30:22"},"nativeSrc":"5389:56:22","nodeType":"YulIf","src":"5389:56:22"},{"nativeSrc":"5455:52:22","nodeType":"YulVariableDeclaration","src":"5455:52:22","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5501:4:22","nodeType":"YulIdentifier","src":"5501:4:22"}],"functionName":{"name":"sload","nativeSrc":"5495:5:22","nodeType":"YulIdentifier","src":"5495:5:22"},"nativeSrc":"5495:11:22","nodeType":"YulFunctionCall","src":"5495:11:22"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5469:25:22","nodeType":"YulIdentifier","src":"5469:25:22"},"nativeSrc":"5469:38:22","nodeType":"YulFunctionCall","src":"5469:38:22"},"variables":[{"name":"oldLen","nativeSrc":"5459:6:22","nodeType":"YulTypedName","src":"5459:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5600:4:22","nodeType":"YulIdentifier","src":"5600:4:22"},{"name":"oldLen","nativeSrc":"5606:6:22","nodeType":"YulIdentifier","src":"5606:6:22"},{"name":"newLen","nativeSrc":"5614:6:22","nodeType":"YulIdentifier","src":"5614:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5554:45:22","nodeType":"YulIdentifier","src":"5554:45:22"},"nativeSrc":"5554:67:22","nodeType":"YulFunctionCall","src":"5554:67:22"},"nativeSrc":"5554:67:22","nodeType":"YulExpressionStatement","src":"5554:67:22"},{"nativeSrc":"5631:18:22","nodeType":"YulVariableDeclaration","src":"5631:18:22","value":{"kind":"number","nativeSrc":"5648:1:22","nodeType":"YulLiteral","src":"5648:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5635:9:22","nodeType":"YulTypedName","src":"5635:9:22","type":""}]},{"nativeSrc":"5659:17:22","nodeType":"YulAssignment","src":"5659:17:22","value":{"kind":"number","nativeSrc":"5672:4:22","nodeType":"YulLiteral","src":"5672:4:22","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5659:9:22","nodeType":"YulIdentifier","src":"5659:9:22"}]},{"cases":[{"body":{"nativeSrc":"5723:611:22","nodeType":"YulBlock","src":"5723:611:22","statements":[{"nativeSrc":"5737:37:22","nodeType":"YulVariableDeclaration","src":"5737:37:22","value":{"arguments":[{"name":"newLen","nativeSrc":"5756:6:22","nodeType":"YulIdentifier","src":"5756:6:22"},{"arguments":[{"kind":"number","nativeSrc":"5768:4:22","nodeType":"YulLiteral","src":"5768:4:22","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5764:3:22","nodeType":"YulIdentifier","src":"5764:3:22"},"nativeSrc":"5764:9:22","nodeType":"YulFunctionCall","src":"5764:9:22"}],"functionName":{"name":"and","nativeSrc":"5752:3:22","nodeType":"YulIdentifier","src":"5752:3:22"},"nativeSrc":"5752:22:22","nodeType":"YulFunctionCall","src":"5752:22:22"},"variables":[{"name":"loopEnd","nativeSrc":"5741:7:22","nodeType":"YulTypedName","src":"5741:7:22","type":""}]},{"nativeSrc":"5788:51:22","nodeType":"YulVariableDeclaration","src":"5788:51:22","value":{"arguments":[{"name":"slot","nativeSrc":"5834:4:22","nodeType":"YulIdentifier","src":"5834:4:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5802:31:22","nodeType":"YulIdentifier","src":"5802:31:22"},"nativeSrc":"5802:37:22","nodeType":"YulFunctionCall","src":"5802:37:22"},"variables":[{"name":"dstPtr","nativeSrc":"5792:6:22","nodeType":"YulTypedName","src":"5792:6:22","type":""}]},{"nativeSrc":"5852:10:22","nodeType":"YulVariableDeclaration","src":"5852:10:22","value":{"kind":"number","nativeSrc":"5861:1:22","nodeType":"YulLiteral","src":"5861:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5856:1:22","nodeType":"YulTypedName","src":"5856:1:22","type":""}]},{"body":{"nativeSrc":"5920:163:22","nodeType":"YulBlock","src":"5920:163:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5945:6:22","nodeType":"YulIdentifier","src":"5945:6:22"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5963:3:22","nodeType":"YulIdentifier","src":"5963:3:22"},{"name":"srcOffset","nativeSrc":"5968:9:22","nodeType":"YulIdentifier","src":"5968:9:22"}],"functionName":{"name":"add","nativeSrc":"5959:3:22","nodeType":"YulIdentifier","src":"5959:3:22"},"nativeSrc":"5959:19:22","nodeType":"YulFunctionCall","src":"5959:19:22"}],"functionName":{"name":"mload","nativeSrc":"5953:5:22","nodeType":"YulIdentifier","src":"5953:5:22"},"nativeSrc":"5953:26:22","nodeType":"YulFunctionCall","src":"5953:26:22"}],"functionName":{"name":"sstore","nativeSrc":"5938:6:22","nodeType":"YulIdentifier","src":"5938:6:22"},"nativeSrc":"5938:42:22","nodeType":"YulFunctionCall","src":"5938:42:22"},"nativeSrc":"5938:42:22","nodeType":"YulExpressionStatement","src":"5938:42:22"},{"nativeSrc":"5997:24:22","nodeType":"YulAssignment","src":"5997:24:22","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6011:6:22","nodeType":"YulIdentifier","src":"6011:6:22"},{"kind":"number","nativeSrc":"6019:1:22","nodeType":"YulLiteral","src":"6019:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6007:3:22","nodeType":"YulIdentifier","src":"6007:3:22"},"nativeSrc":"6007:14:22","nodeType":"YulFunctionCall","src":"6007:14:22"},"variableNames":[{"name":"dstPtr","nativeSrc":"5997:6:22","nodeType":"YulIdentifier","src":"5997:6:22"}]},{"nativeSrc":"6038:31:22","nodeType":"YulAssignment","src":"6038:31:22","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6055:9:22","nodeType":"YulIdentifier","src":"6055:9:22"},{"kind":"number","nativeSrc":"6066:2:22","nodeType":"YulLiteral","src":"6066:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6051:3:22","nodeType":"YulIdentifier","src":"6051:3:22"},"nativeSrc":"6051:18:22","nodeType":"YulFunctionCall","src":"6051:18:22"},"variableNames":[{"name":"srcOffset","nativeSrc":"6038:9:22","nodeType":"YulIdentifier","src":"6038:9:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5886:1:22","nodeType":"YulIdentifier","src":"5886:1:22"},{"name":"loopEnd","nativeSrc":"5889:7:22","nodeType":"YulIdentifier","src":"5889:7:22"}],"functionName":{"name":"lt","nativeSrc":"5883:2:22","nodeType":"YulIdentifier","src":"5883:2:22"},"nativeSrc":"5883:14:22","nodeType":"YulFunctionCall","src":"5883:14:22"},"nativeSrc":"5875:208:22","nodeType":"YulForLoop","post":{"nativeSrc":"5898:21:22","nodeType":"YulBlock","src":"5898:21:22","statements":[{"nativeSrc":"5900:17:22","nodeType":"YulAssignment","src":"5900:17:22","value":{"arguments":[{"name":"i","nativeSrc":"5909:1:22","nodeType":"YulIdentifier","src":"5909:1:22"},{"kind":"number","nativeSrc":"5912:4:22","nodeType":"YulLiteral","src":"5912:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5905:3:22","nodeType":"YulIdentifier","src":"5905:3:22"},"nativeSrc":"5905:12:22","nodeType":"YulFunctionCall","src":"5905:12:22"},"variableNames":[{"name":"i","nativeSrc":"5900:1:22","nodeType":"YulIdentifier","src":"5900:1:22"}]}]},"pre":{"nativeSrc":"5879:3:22","nodeType":"YulBlock","src":"5879:3:22","statements":[]},"src":"5875:208:22"},{"body":{"nativeSrc":"6119:156:22","nodeType":"YulBlock","src":"6119:156:22","statements":[{"nativeSrc":"6137:43:22","nodeType":"YulVariableDeclaration","src":"6137:43:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6164:3:22","nodeType":"YulIdentifier","src":"6164:3:22"},{"name":"srcOffset","nativeSrc":"6169:9:22","nodeType":"YulIdentifier","src":"6169:9:22"}],"functionName":{"name":"add","nativeSrc":"6160:3:22","nodeType":"YulIdentifier","src":"6160:3:22"},"nativeSrc":"6160:19:22","nodeType":"YulFunctionCall","src":"6160:19:22"}],"functionName":{"name":"mload","nativeSrc":"6154:5:22","nodeType":"YulIdentifier","src":"6154:5:22"},"nativeSrc":"6154:26:22","nodeType":"YulFunctionCall","src":"6154:26:22"},"variables":[{"name":"lastValue","nativeSrc":"6141:9:22","nodeType":"YulTypedName","src":"6141:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6204:6:22","nodeType":"YulIdentifier","src":"6204:6:22"},{"arguments":[{"name":"lastValue","nativeSrc":"6231:9:22","nodeType":"YulIdentifier","src":"6231:9:22"},{"arguments":[{"name":"newLen","nativeSrc":"6246:6:22","nodeType":"YulIdentifier","src":"6246:6:22"},{"kind":"number","nativeSrc":"6254:4:22","nodeType":"YulLiteral","src":"6254:4:22","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6242:3:22","nodeType":"YulIdentifier","src":"6242:3:22"},"nativeSrc":"6242:17:22","nodeType":"YulFunctionCall","src":"6242:17:22"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6212:18:22","nodeType":"YulIdentifier","src":"6212:18:22"},"nativeSrc":"6212:48:22","nodeType":"YulFunctionCall","src":"6212:48:22"}],"functionName":{"name":"sstore","nativeSrc":"6197:6:22","nodeType":"YulIdentifier","src":"6197:6:22"},"nativeSrc":"6197:64:22","nodeType":"YulFunctionCall","src":"6197:64:22"},"nativeSrc":"6197:64:22","nodeType":"YulExpressionStatement","src":"6197:64:22"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6102:7:22","nodeType":"YulIdentifier","src":"6102:7:22"},{"name":"newLen","nativeSrc":"6111:6:22","nodeType":"YulIdentifier","src":"6111:6:22"}],"functionName":{"name":"lt","nativeSrc":"6099:2:22","nodeType":"YulIdentifier","src":"6099:2:22"},"nativeSrc":"6099:19:22","nodeType":"YulFunctionCall","src":"6099:19:22"},"nativeSrc":"6096:179:22","nodeType":"YulIf","src":"6096:179:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6295:4:22","nodeType":"YulIdentifier","src":"6295:4:22"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6309:6:22","nodeType":"YulIdentifier","src":"6309:6:22"},{"kind":"number","nativeSrc":"6317:1:22","nodeType":"YulLiteral","src":"6317:1:22","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6305:3:22","nodeType":"YulIdentifier","src":"6305:3:22"},"nativeSrc":"6305:14:22","nodeType":"YulFunctionCall","src":"6305:14:22"},{"kind":"number","nativeSrc":"6321:1:22","nodeType":"YulLiteral","src":"6321:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6301:3:22","nodeType":"YulIdentifier","src":"6301:3:22"},"nativeSrc":"6301:22:22","nodeType":"YulFunctionCall","src":"6301:22:22"}],"functionName":{"name":"sstore","nativeSrc":"6288:6:22","nodeType":"YulIdentifier","src":"6288:6:22"},"nativeSrc":"6288:36:22","nodeType":"YulFunctionCall","src":"6288:36:22"},"nativeSrc":"6288:36:22","nodeType":"YulExpressionStatement","src":"6288:36:22"}]},"nativeSrc":"5716:618:22","nodeType":"YulCase","src":"5716:618:22","value":{"kind":"number","nativeSrc":"5721:1:22","nodeType":"YulLiteral","src":"5721:1:22","type":"","value":"1"}},{"body":{"nativeSrc":"6351:222:22","nodeType":"YulBlock","src":"6351:222:22","statements":[{"nativeSrc":"6365:14:22","nodeType":"YulVariableDeclaration","src":"6365:14:22","value":{"kind":"number","nativeSrc":"6378:1:22","nodeType":"YulLiteral","src":"6378:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6369:5:22","nodeType":"YulTypedName","src":"6369:5:22","type":""}]},{"body":{"nativeSrc":"6402:67:22","nodeType":"YulBlock","src":"6402:67:22","statements":[{"nativeSrc":"6420:35:22","nodeType":"YulAssignment","src":"6420:35:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6439:3:22","nodeType":"YulIdentifier","src":"6439:3:22"},{"name":"srcOffset","nativeSrc":"6444:9:22","nodeType":"YulIdentifier","src":"6444:9:22"}],"functionName":{"name":"add","nativeSrc":"6435:3:22","nodeType":"YulIdentifier","src":"6435:3:22"},"nativeSrc":"6435:19:22","nodeType":"YulFunctionCall","src":"6435:19:22"}],"functionName":{"name":"mload","nativeSrc":"6429:5:22","nodeType":"YulIdentifier","src":"6429:5:22"},"nativeSrc":"6429:26:22","nodeType":"YulFunctionCall","src":"6429:26:22"},"variableNames":[{"name":"value","nativeSrc":"6420:5:22","nodeType":"YulIdentifier","src":"6420:5:22"}]}]},"condition":{"name":"newLen","nativeSrc":"6395:6:22","nodeType":"YulIdentifier","src":"6395:6:22"},"nativeSrc":"6392:77:22","nodeType":"YulIf","src":"6392:77:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6489:4:22","nodeType":"YulIdentifier","src":"6489:4:22"},{"arguments":[{"name":"value","nativeSrc":"6548:5:22","nodeType":"YulIdentifier","src":"6548:5:22"},{"name":"newLen","nativeSrc":"6555:6:22","nodeType":"YulIdentifier","src":"6555:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6495:52:22","nodeType":"YulIdentifier","src":"6495:52:22"},"nativeSrc":"6495:67:22","nodeType":"YulFunctionCall","src":"6495:67:22"}],"functionName":{"name":"sstore","nativeSrc":"6482:6:22","nodeType":"YulIdentifier","src":"6482:6:22"},"nativeSrc":"6482:81:22","nodeType":"YulFunctionCall","src":"6482:81:22"},"nativeSrc":"6482:81:22","nodeType":"YulExpressionStatement","src":"6482:81:22"}]},"nativeSrc":"6343:230:22","nodeType":"YulCase","src":"6343:230:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5696:6:22","nodeType":"YulIdentifier","src":"5696:6:22"},{"kind":"number","nativeSrc":"5704:2:22","nodeType":"YulLiteral","src":"5704:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5693:2:22","nodeType":"YulIdentifier","src":"5693:2:22"},"nativeSrc":"5693:14:22","nodeType":"YulFunctionCall","src":"5693:14:22"},"nativeSrc":"5686:887:22","nodeType":"YulSwitch","src":"5686:887:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5184:1395:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5265:4:22","nodeType":"YulTypedName","src":"5265:4:22","type":""},{"name":"src","nativeSrc":"5271:3:22","nodeType":"YulTypedName","src":"5271:3:22","type":""}],"src":"5184:1395:22"},{"body":{"nativeSrc":"6650:53:22","nodeType":"YulBlock","src":"6650:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6667:3:22","nodeType":"YulIdentifier","src":"6667:3:22"},{"arguments":[{"name":"value","nativeSrc":"6690:5:22","nodeType":"YulIdentifier","src":"6690:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6672:17:22","nodeType":"YulIdentifier","src":"6672:17:22"},"nativeSrc":"6672:24:22","nodeType":"YulFunctionCall","src":"6672:24:22"}],"functionName":{"name":"mstore","nativeSrc":"6660:6:22","nodeType":"YulIdentifier","src":"6660:6:22"},"nativeSrc":"6660:37:22","nodeType":"YulFunctionCall","src":"6660:37:22"},"nativeSrc":"6660:37:22","nodeType":"YulExpressionStatement","src":"6660:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6585:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6638:5:22","nodeType":"YulTypedName","src":"6638:5:22","type":""},{"name":"pos","nativeSrc":"6645:3:22","nodeType":"YulTypedName","src":"6645:3:22","type":""}],"src":"6585:118:22"},{"body":{"nativeSrc":"6807:124:22","nodeType":"YulBlock","src":"6807:124:22","statements":[{"nativeSrc":"6817:26:22","nodeType":"YulAssignment","src":"6817:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6829:9:22","nodeType":"YulIdentifier","src":"6829:9:22"},{"kind":"number","nativeSrc":"6840:2:22","nodeType":"YulLiteral","src":"6840:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6825:3:22","nodeType":"YulIdentifier","src":"6825:3:22"},"nativeSrc":"6825:18:22","nodeType":"YulFunctionCall","src":"6825:18:22"},"variableNames":[{"name":"tail","nativeSrc":"6817:4:22","nodeType":"YulIdentifier","src":"6817:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6897:6:22","nodeType":"YulIdentifier","src":"6897:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"6910:9:22","nodeType":"YulIdentifier","src":"6910:9:22"},{"kind":"number","nativeSrc":"6921:1:22","nodeType":"YulLiteral","src":"6921:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6906:3:22","nodeType":"YulIdentifier","src":"6906:3:22"},"nativeSrc":"6906:17:22","nodeType":"YulFunctionCall","src":"6906:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6853:43:22","nodeType":"YulIdentifier","src":"6853:43:22"},"nativeSrc":"6853:71:22","nodeType":"YulFunctionCall","src":"6853:71:22"},"nativeSrc":"6853:71:22","nodeType":"YulExpressionStatement","src":"6853:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6709:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6779:9:22","nodeType":"YulTypedName","src":"6779:9:22","type":""},{"name":"value0","nativeSrc":"6791:6:22","nodeType":"YulTypedName","src":"6791:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6802:4:22","nodeType":"YulTypedName","src":"6802:4:22","type":""}],"src":"6709:222:22"},{"body":{"nativeSrc":"6965:152:22","nodeType":"YulBlock","src":"6965:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6982:1:22","nodeType":"YulLiteral","src":"6982:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6985:77:22","nodeType":"YulLiteral","src":"6985:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6975:6:22","nodeType":"YulIdentifier","src":"6975:6:22"},"nativeSrc":"6975:88:22","nodeType":"YulFunctionCall","src":"6975:88:22"},"nativeSrc":"6975:88:22","nodeType":"YulExpressionStatement","src":"6975:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7079:1:22","nodeType":"YulLiteral","src":"7079:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"7082:4:22","nodeType":"YulLiteral","src":"7082:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7072:6:22","nodeType":"YulIdentifier","src":"7072:6:22"},"nativeSrc":"7072:15:22","nodeType":"YulFunctionCall","src":"7072:15:22"},"nativeSrc":"7072:15:22","nodeType":"YulExpressionStatement","src":"7072:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7103:1:22","nodeType":"YulLiteral","src":"7103:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"7106:4:22","nodeType":"YulLiteral","src":"7106:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7096:6:22","nodeType":"YulIdentifier","src":"7096:6:22"},"nativeSrc":"7096:15:22","nodeType":"YulFunctionCall","src":"7096:15:22"},"nativeSrc":"7096:15:22","nodeType":"YulExpressionStatement","src":"7096:15:22"}]},"name":"panic_error_0x11","nativeSrc":"6937:180:22","nodeType":"YulFunctionDefinition","src":"6937:180:22"},{"body":{"nativeSrc":"7174:51:22","nodeType":"YulBlock","src":"7174:51:22","statements":[{"nativeSrc":"7184:34:22","nodeType":"YulAssignment","src":"7184:34:22","value":{"arguments":[{"kind":"number","nativeSrc":"7209:1:22","nodeType":"YulLiteral","src":"7209:1:22","type":"","value":"1"},{"name":"value","nativeSrc":"7212:5:22","nodeType":"YulIdentifier","src":"7212:5:22"}],"functionName":{"name":"shr","nativeSrc":"7205:3:22","nodeType":"YulIdentifier","src":"7205:3:22"},"nativeSrc":"7205:13:22","nodeType":"YulFunctionCall","src":"7205:13:22"},"variableNames":[{"name":"newValue","nativeSrc":"7184:8:22","nodeType":"YulIdentifier","src":"7184:8:22"}]}]},"name":"shift_right_1_unsigned","nativeSrc":"7123:102:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7155:5:22","nodeType":"YulTypedName","src":"7155:5:22","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7165:8:22","nodeType":"YulTypedName","src":"7165:8:22","type":""}],"src":"7123:102:22"},{"body":{"nativeSrc":"7304:775:22","nodeType":"YulBlock","src":"7304:775:22","statements":[{"nativeSrc":"7314:15:22","nodeType":"YulAssignment","src":"7314:15:22","value":{"name":"_power","nativeSrc":"7323:6:22","nodeType":"YulIdentifier","src":"7323:6:22"},"variableNames":[{"name":"power","nativeSrc":"7314:5:22","nodeType":"YulIdentifier","src":"7314:5:22"}]},{"nativeSrc":"7338:14:22","nodeType":"YulAssignment","src":"7338:14:22","value":{"name":"_base","nativeSrc":"7347:5:22","nodeType":"YulIdentifier","src":"7347:5:22"},"variableNames":[{"name":"base","nativeSrc":"7338:4:22","nodeType":"YulIdentifier","src":"7338:4:22"}]},{"body":{"nativeSrc":"7396:677:22","nodeType":"YulBlock","src":"7396:677:22","statements":[{"body":{"nativeSrc":"7484:22:22","nodeType":"YulBlock","src":"7484:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7486:16:22","nodeType":"YulIdentifier","src":"7486:16:22"},"nativeSrc":"7486:18:22","nodeType":"YulFunctionCall","src":"7486:18:22"},"nativeSrc":"7486:18:22","nodeType":"YulExpressionStatement","src":"7486:18:22"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"7462:4:22","nodeType":"YulIdentifier","src":"7462:4:22"},{"arguments":[{"name":"max","nativeSrc":"7472:3:22","nodeType":"YulIdentifier","src":"7472:3:22"},{"name":"base","nativeSrc":"7477:4:22","nodeType":"YulIdentifier","src":"7477:4:22"}],"functionName":{"name":"div","nativeSrc":"7468:3:22","nodeType":"YulIdentifier","src":"7468:3:22"},"nativeSrc":"7468:14:22","nodeType":"YulFunctionCall","src":"7468:14:22"}],"functionName":{"name":"gt","nativeSrc":"7459:2:22","nodeType":"YulIdentifier","src":"7459:2:22"},"nativeSrc":"7459:24:22","nodeType":"YulFunctionCall","src":"7459:24:22"},"nativeSrc":"7456:50:22","nodeType":"YulIf","src":"7456:50:22"},{"body":{"nativeSrc":"7551:419:22","nodeType":"YulBlock","src":"7551:419:22","statements":[{"nativeSrc":"7931:25:22","nodeType":"YulAssignment","src":"7931:25:22","value":{"arguments":[{"name":"power","nativeSrc":"7944:5:22","nodeType":"YulIdentifier","src":"7944:5:22"},{"name":"base","nativeSrc":"7951:4:22","nodeType":"YulIdentifier","src":"7951:4:22"}],"functionName":{"name":"mul","nativeSrc":"7940:3:22","nodeType":"YulIdentifier","src":"7940:3:22"},"nativeSrc":"7940:16:22","nodeType":"YulFunctionCall","src":"7940:16:22"},"variableNames":[{"name":"power","nativeSrc":"7931:5:22","nodeType":"YulIdentifier","src":"7931:5:22"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7526:8:22","nodeType":"YulIdentifier","src":"7526:8:22"},{"kind":"number","nativeSrc":"7536:1:22","nodeType":"YulLiteral","src":"7536:1:22","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"7522:3:22","nodeType":"YulIdentifier","src":"7522:3:22"},"nativeSrc":"7522:16:22","nodeType":"YulFunctionCall","src":"7522:16:22"},"nativeSrc":"7519:451:22","nodeType":"YulIf","src":"7519:451:22"},{"nativeSrc":"7983:23:22","nodeType":"YulAssignment","src":"7983:23:22","value":{"arguments":[{"name":"base","nativeSrc":"7995:4:22","nodeType":"YulIdentifier","src":"7995:4:22"},{"name":"base","nativeSrc":"8001:4:22","nodeType":"YulIdentifier","src":"8001:4:22"}],"functionName":{"name":"mul","nativeSrc":"7991:3:22","nodeType":"YulIdentifier","src":"7991:3:22"},"nativeSrc":"7991:15:22","nodeType":"YulFunctionCall","src":"7991:15:22"},"variableNames":[{"name":"base","nativeSrc":"7983:4:22","nodeType":"YulIdentifier","src":"7983:4:22"}]},{"nativeSrc":"8019:44:22","nodeType":"YulAssignment","src":"8019:44:22","value":{"arguments":[{"name":"exponent","nativeSrc":"8054:8:22","nodeType":"YulIdentifier","src":"8054:8:22"}],"functionName":{"name":"shift_right_1_unsigned","nativeSrc":"8031:22:22","nodeType":"YulIdentifier","src":"8031:22:22"},"nativeSrc":"8031:32:22","nodeType":"YulFunctionCall","src":"8031:32:22"},"variableNames":[{"name":"exponent","nativeSrc":"8019:8:22","nodeType":"YulIdentifier","src":"8019:8:22"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7372:8:22","nodeType":"YulIdentifier","src":"7372:8:22"},{"kind":"number","nativeSrc":"7382:1:22","nodeType":"YulLiteral","src":"7382:1:22","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"7369:2:22","nodeType":"YulIdentifier","src":"7369:2:22"},"nativeSrc":"7369:15:22","nodeType":"YulFunctionCall","src":"7369:15:22"},"nativeSrc":"7361:712:22","nodeType":"YulForLoop","post":{"nativeSrc":"7385:2:22","nodeType":"YulBlock","src":"7385:2:22","statements":[]},"pre":{"nativeSrc":"7365:3:22","nodeType":"YulBlock","src":"7365:3:22","statements":[]},"src":"7361:712:22"}]},"name":"checked_exp_helper","nativeSrc":"7231:848:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nativeSrc":"7259:6:22","nodeType":"YulTypedName","src":"7259:6:22","type":""},{"name":"_base","nativeSrc":"7267:5:22","nodeType":"YulTypedName","src":"7267:5:22","type":""},{"name":"exponent","nativeSrc":"7274:8:22","nodeType":"YulTypedName","src":"7274:8:22","type":""},{"name":"max","nativeSrc":"7284:3:22","nodeType":"YulTypedName","src":"7284:3:22","type":""}],"returnVariables":[{"name":"power","nativeSrc":"7292:5:22","nodeType":"YulTypedName","src":"7292:5:22","type":""},{"name":"base","nativeSrc":"7299:4:22","nodeType":"YulTypedName","src":"7299:4:22","type":""}],"src":"7231:848:22"},{"body":{"nativeSrc":"8145:1013:22","nodeType":"YulBlock","src":"8145:1013:22","statements":[{"body":{"nativeSrc":"8340:20:22","nodeType":"YulBlock","src":"8340:20:22","statements":[{"nativeSrc":"8342:10:22","nodeType":"YulAssignment","src":"8342:10:22","value":{"kind":"number","nativeSrc":"8351:1:22","nodeType":"YulLiteral","src":"8351:1:22","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"8342:5:22","nodeType":"YulIdentifier","src":"8342:5:22"}]},{"nativeSrc":"8353:5:22","nodeType":"YulLeave","src":"8353:5:22"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"8330:8:22","nodeType":"YulIdentifier","src":"8330:8:22"}],"functionName":{"name":"iszero","nativeSrc":"8323:6:22","nodeType":"YulIdentifier","src":"8323:6:22"},"nativeSrc":"8323:16:22","nodeType":"YulFunctionCall","src":"8323:16:22"},"nativeSrc":"8320:40:22","nodeType":"YulIf","src":"8320:40:22"},{"body":{"nativeSrc":"8385:20:22","nodeType":"YulBlock","src":"8385:20:22","statements":[{"nativeSrc":"8387:10:22","nodeType":"YulAssignment","src":"8387:10:22","value":{"kind":"number","nativeSrc":"8396:1:22","nodeType":"YulLiteral","src":"8396:1:22","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"8387:5:22","nodeType":"YulIdentifier","src":"8387:5:22"}]},{"nativeSrc":"8398:5:22","nodeType":"YulLeave","src":"8398:5:22"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"8379:4:22","nodeType":"YulIdentifier","src":"8379:4:22"}],"functionName":{"name":"iszero","nativeSrc":"8372:6:22","nodeType":"YulIdentifier","src":"8372:6:22"},"nativeSrc":"8372:12:22","nodeType":"YulFunctionCall","src":"8372:12:22"},"nativeSrc":"8369:36:22","nodeType":"YulIf","src":"8369:36:22"},{"cases":[{"body":{"nativeSrc":"8515:20:22","nodeType":"YulBlock","src":"8515:20:22","statements":[{"nativeSrc":"8517:10:22","nodeType":"YulAssignment","src":"8517:10:22","value":{"kind":"number","nativeSrc":"8526:1:22","nodeType":"YulLiteral","src":"8526:1:22","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"8517:5:22","nodeType":"YulIdentifier","src":"8517:5:22"}]},{"nativeSrc":"8528:5:22","nodeType":"YulLeave","src":"8528:5:22"}]},"nativeSrc":"8508:27:22","nodeType":"YulCase","src":"8508:27:22","value":{"kind":"number","nativeSrc":"8513:1:22","nodeType":"YulLiteral","src":"8513:1:22","type":"","value":"1"}},{"body":{"nativeSrc":"8559:176:22","nodeType":"YulBlock","src":"8559:176:22","statements":[{"body":{"nativeSrc":"8594:22:22","nodeType":"YulBlock","src":"8594:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8596:16:22","nodeType":"YulIdentifier","src":"8596:16:22"},"nativeSrc":"8596:18:22","nodeType":"YulFunctionCall","src":"8596:18:22"},"nativeSrc":"8596:18:22","nodeType":"YulExpressionStatement","src":"8596:18:22"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"8579:8:22","nodeType":"YulIdentifier","src":"8579:8:22"},{"kind":"number","nativeSrc":"8589:3:22","nodeType":"YulLiteral","src":"8589:3:22","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"8576:2:22","nodeType":"YulIdentifier","src":"8576:2:22"},"nativeSrc":"8576:17:22","nodeType":"YulFunctionCall","src":"8576:17:22"},"nativeSrc":"8573:43:22","nodeType":"YulIf","src":"8573:43:22"},{"nativeSrc":"8629:25:22","nodeType":"YulAssignment","src":"8629:25:22","value":{"arguments":[{"kind":"number","nativeSrc":"8642:1:22","nodeType":"YulLiteral","src":"8642:1:22","type":"","value":"2"},{"name":"exponent","nativeSrc":"8645:8:22","nodeType":"YulIdentifier","src":"8645:8:22"}],"functionName":{"name":"exp","nativeSrc":"8638:3:22","nodeType":"YulIdentifier","src":"8638:3:22"},"nativeSrc":"8638:16:22","nodeType":"YulFunctionCall","src":"8638:16:22"},"variableNames":[{"name":"power","nativeSrc":"8629:5:22","nodeType":"YulIdentifier","src":"8629:5:22"}]},{"body":{"nativeSrc":"8685:22:22","nodeType":"YulBlock","src":"8685:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8687:16:22","nodeType":"YulIdentifier","src":"8687:16:22"},"nativeSrc":"8687:18:22","nodeType":"YulFunctionCall","src":"8687:18:22"},"nativeSrc":"8687:18:22","nodeType":"YulExpressionStatement","src":"8687:18:22"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"8673:5:22","nodeType":"YulIdentifier","src":"8673:5:22"},{"name":"max","nativeSrc":"8680:3:22","nodeType":"YulIdentifier","src":"8680:3:22"}],"functionName":{"name":"gt","nativeSrc":"8670:2:22","nodeType":"YulIdentifier","src":"8670:2:22"},"nativeSrc":"8670:14:22","nodeType":"YulFunctionCall","src":"8670:14:22"},"nativeSrc":"8667:40:22","nodeType":"YulIf","src":"8667:40:22"},{"nativeSrc":"8720:5:22","nodeType":"YulLeave","src":"8720:5:22"}]},"nativeSrc":"8544:191:22","nodeType":"YulCase","src":"8544:191:22","value":{"kind":"number","nativeSrc":"8549:1:22","nodeType":"YulLiteral","src":"8549:1:22","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"8465:4:22","nodeType":"YulIdentifier","src":"8465:4:22"},"nativeSrc":"8458:277:22","nodeType":"YulSwitch","src":"8458:277:22"},{"body":{"nativeSrc":"8867:123:22","nodeType":"YulBlock","src":"8867:123:22","statements":[{"nativeSrc":"8881:28:22","nodeType":"YulAssignment","src":"8881:28:22","value":{"arguments":[{"name":"base","nativeSrc":"8894:4:22","nodeType":"YulIdentifier","src":"8894:4:22"},{"name":"exponent","nativeSrc":"8900:8:22","nodeType":"YulIdentifier","src":"8900:8:22"}],"functionName":{"name":"exp","nativeSrc":"8890:3:22","nodeType":"YulIdentifier","src":"8890:3:22"},"nativeSrc":"8890:19:22","nodeType":"YulFunctionCall","src":"8890:19:22"},"variableNames":[{"name":"power","nativeSrc":"8881:5:22","nodeType":"YulIdentifier","src":"8881:5:22"}]},{"body":{"nativeSrc":"8940:22:22","nodeType":"YulBlock","src":"8940:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8942:16:22","nodeType":"YulIdentifier","src":"8942:16:22"},"nativeSrc":"8942:18:22","nodeType":"YulFunctionCall","src":"8942:18:22"},"nativeSrc":"8942:18:22","nodeType":"YulExpressionStatement","src":"8942:18:22"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"8928:5:22","nodeType":"YulIdentifier","src":"8928:5:22"},{"name":"max","nativeSrc":"8935:3:22","nodeType":"YulIdentifier","src":"8935:3:22"}],"functionName":{"name":"gt","nativeSrc":"8925:2:22","nodeType":"YulIdentifier","src":"8925:2:22"},"nativeSrc":"8925:14:22","nodeType":"YulFunctionCall","src":"8925:14:22"},"nativeSrc":"8922:40:22","nodeType":"YulIf","src":"8922:40:22"},{"nativeSrc":"8975:5:22","nodeType":"YulLeave","src":"8975:5:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"8770:4:22","nodeType":"YulIdentifier","src":"8770:4:22"},{"kind":"number","nativeSrc":"8776:2:22","nodeType":"YulLiteral","src":"8776:2:22","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"8767:2:22","nodeType":"YulIdentifier","src":"8767:2:22"},"nativeSrc":"8767:12:22","nodeType":"YulFunctionCall","src":"8767:12:22"},{"arguments":[{"name":"exponent","nativeSrc":"8784:8:22","nodeType":"YulIdentifier","src":"8784:8:22"},{"kind":"number","nativeSrc":"8794:2:22","nodeType":"YulLiteral","src":"8794:2:22","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"8781:2:22","nodeType":"YulIdentifier","src":"8781:2:22"},"nativeSrc":"8781:16:22","nodeType":"YulFunctionCall","src":"8781:16:22"}],"functionName":{"name":"and","nativeSrc":"8763:3:22","nodeType":"YulIdentifier","src":"8763:3:22"},"nativeSrc":"8763:35:22","nodeType":"YulFunctionCall","src":"8763:35:22"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"8819:4:22","nodeType":"YulIdentifier","src":"8819:4:22"},{"kind":"number","nativeSrc":"8825:3:22","nodeType":"YulLiteral","src":"8825:3:22","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"8816:2:22","nodeType":"YulIdentifier","src":"8816:2:22"},"nativeSrc":"8816:13:22","nodeType":"YulFunctionCall","src":"8816:13:22"},{"arguments":[{"name":"exponent","nativeSrc":"8834:8:22","nodeType":"YulIdentifier","src":"8834:8:22"},{"kind":"number","nativeSrc":"8844:2:22","nodeType":"YulLiteral","src":"8844:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8831:2:22","nodeType":"YulIdentifier","src":"8831:2:22"},"nativeSrc":"8831:16:22","nodeType":"YulFunctionCall","src":"8831:16:22"}],"functionName":{"name":"and","nativeSrc":"8812:3:22","nodeType":"YulIdentifier","src":"8812:3:22"},"nativeSrc":"8812:36:22","nodeType":"YulFunctionCall","src":"8812:36:22"}],"functionName":{"name":"or","nativeSrc":"8747:2:22","nodeType":"YulIdentifier","src":"8747:2:22"},"nativeSrc":"8747:111:22","nodeType":"YulFunctionCall","src":"8747:111:22"},"nativeSrc":"8744:246:22","nodeType":"YulIf","src":"8744:246:22"},{"nativeSrc":"9000:57:22","nodeType":"YulAssignment","src":"9000:57:22","value":{"arguments":[{"kind":"number","nativeSrc":"9034:1:22","nodeType":"YulLiteral","src":"9034:1:22","type":"","value":"1"},{"name":"base","nativeSrc":"9037:4:22","nodeType":"YulIdentifier","src":"9037:4:22"},{"name":"exponent","nativeSrc":"9043:8:22","nodeType":"YulIdentifier","src":"9043:8:22"},{"name":"max","nativeSrc":"9053:3:22","nodeType":"YulIdentifier","src":"9053:3:22"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"9015:18:22","nodeType":"YulIdentifier","src":"9015:18:22"},"nativeSrc":"9015:42:22","nodeType":"YulFunctionCall","src":"9015:42:22"},"variableNames":[{"name":"power","nativeSrc":"9000:5:22","nodeType":"YulIdentifier","src":"9000:5:22"},{"name":"base","nativeSrc":"9007:4:22","nodeType":"YulIdentifier","src":"9007:4:22"}]},{"body":{"nativeSrc":"9096:22:22","nodeType":"YulBlock","src":"9096:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9098:16:22","nodeType":"YulIdentifier","src":"9098:16:22"},"nativeSrc":"9098:18:22","nodeType":"YulFunctionCall","src":"9098:18:22"},"nativeSrc":"9098:18:22","nodeType":"YulExpressionStatement","src":"9098:18:22"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"9073:5:22","nodeType":"YulIdentifier","src":"9073:5:22"},{"arguments":[{"name":"max","nativeSrc":"9084:3:22","nodeType":"YulIdentifier","src":"9084:3:22"},{"name":"base","nativeSrc":"9089:4:22","nodeType":"YulIdentifier","src":"9089:4:22"}],"functionName":{"name":"div","nativeSrc":"9080:3:22","nodeType":"YulIdentifier","src":"9080:3:22"},"nativeSrc":"9080:14:22","nodeType":"YulFunctionCall","src":"9080:14:22"}],"functionName":{"name":"gt","nativeSrc":"9070:2:22","nodeType":"YulIdentifier","src":"9070:2:22"},"nativeSrc":"9070:25:22","nodeType":"YulFunctionCall","src":"9070:25:22"},"nativeSrc":"9067:51:22","nodeType":"YulIf","src":"9067:51:22"},{"nativeSrc":"9127:25:22","nodeType":"YulAssignment","src":"9127:25:22","value":{"arguments":[{"name":"power","nativeSrc":"9140:5:22","nodeType":"YulIdentifier","src":"9140:5:22"},{"name":"base","nativeSrc":"9147:4:22","nodeType":"YulIdentifier","src":"9147:4:22"}],"functionName":{"name":"mul","nativeSrc":"9136:3:22","nodeType":"YulIdentifier","src":"9136:3:22"},"nativeSrc":"9136:16:22","nodeType":"YulFunctionCall","src":"9136:16:22"},"variableNames":[{"name":"power","nativeSrc":"9127:5:22","nodeType":"YulIdentifier","src":"9127:5:22"}]}]},"name":"checked_exp_unsigned","nativeSrc":"8085:1073:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"8115:4:22","nodeType":"YulTypedName","src":"8115:4:22","type":""},{"name":"exponent","nativeSrc":"8121:8:22","nodeType":"YulTypedName","src":"8121:8:22","type":""},{"name":"max","nativeSrc":"8131:3:22","nodeType":"YulTypedName","src":"8131:3:22","type":""}],"returnVariables":[{"name":"power","nativeSrc":"8139:5:22","nodeType":"YulTypedName","src":"8139:5:22","type":""}],"src":"8085:1073:22"},{"body":{"nativeSrc":"9207:43:22","nodeType":"YulBlock","src":"9207:43:22","statements":[{"nativeSrc":"9217:27:22","nodeType":"YulAssignment","src":"9217:27:22","value":{"arguments":[{"name":"value","nativeSrc":"9232:5:22","nodeType":"YulIdentifier","src":"9232:5:22"},{"kind":"number","nativeSrc":"9239:4:22","nodeType":"YulLiteral","src":"9239:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"9228:3:22","nodeType":"YulIdentifier","src":"9228:3:22"},"nativeSrc":"9228:16:22","nodeType":"YulFunctionCall","src":"9228:16:22"},"variableNames":[{"name":"cleaned","nativeSrc":"9217:7:22","nodeType":"YulIdentifier","src":"9217:7:22"}]}]},"name":"cleanup_t_uint8","nativeSrc":"9164:86:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9189:5:22","nodeType":"YulTypedName","src":"9189:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9199:7:22","nodeType":"YulTypedName","src":"9199:7:22","type":""}],"src":"9164:86:22"},{"body":{"nativeSrc":"9320:217:22","nodeType":"YulBlock","src":"9320:217:22","statements":[{"nativeSrc":"9330:31:22","nodeType":"YulAssignment","src":"9330:31:22","value":{"arguments":[{"name":"base","nativeSrc":"9356:4:22","nodeType":"YulIdentifier","src":"9356:4:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9338:17:22","nodeType":"YulIdentifier","src":"9338:17:22"},"nativeSrc":"9338:23:22","nodeType":"YulFunctionCall","src":"9338:23:22"},"variableNames":[{"name":"base","nativeSrc":"9330:4:22","nodeType":"YulIdentifier","src":"9330:4:22"}]},{"nativeSrc":"9370:37:22","nodeType":"YulAssignment","src":"9370:37:22","value":{"arguments":[{"name":"exponent","nativeSrc":"9398:8:22","nodeType":"YulIdentifier","src":"9398:8:22"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"9382:15:22","nodeType":"YulIdentifier","src":"9382:15:22"},"nativeSrc":"9382:25:22","nodeType":"YulFunctionCall","src":"9382:25:22"},"variableNames":[{"name":"exponent","nativeSrc":"9370:8:22","nodeType":"YulIdentifier","src":"9370:8:22"}]},{"nativeSrc":"9417:113:22","nodeType":"YulAssignment","src":"9417:113:22","value":{"arguments":[{"name":"base","nativeSrc":"9447:4:22","nodeType":"YulIdentifier","src":"9447:4:22"},{"name":"exponent","nativeSrc":"9453:8:22","nodeType":"YulIdentifier","src":"9453:8:22"},{"kind":"number","nativeSrc":"9463:66:22","nodeType":"YulLiteral","src":"9463:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"9426:20:22","nodeType":"YulIdentifier","src":"9426:20:22"},"nativeSrc":"9426:104:22","nodeType":"YulFunctionCall","src":"9426:104:22"},"variableNames":[{"name":"power","nativeSrc":"9417:5:22","nodeType":"YulIdentifier","src":"9417:5:22"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"9256:281:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"9295:4:22","nodeType":"YulTypedName","src":"9295:4:22","type":""},{"name":"exponent","nativeSrc":"9301:8:22","nodeType":"YulTypedName","src":"9301:8:22","type":""}],"returnVariables":[{"name":"power","nativeSrc":"9314:5:22","nodeType":"YulTypedName","src":"9314:5:22","type":""}],"src":"9256:281:22"},{"body":{"nativeSrc":"9591:362:22","nodeType":"YulBlock","src":"9591:362:22","statements":[{"nativeSrc":"9601:25:22","nodeType":"YulAssignment","src":"9601:25:22","value":{"arguments":[{"name":"x","nativeSrc":"9624:1:22","nodeType":"YulIdentifier","src":"9624:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9606:17:22","nodeType":"YulIdentifier","src":"9606:17:22"},"nativeSrc":"9606:20:22","nodeType":"YulFunctionCall","src":"9606:20:22"},"variableNames":[{"name":"x","nativeSrc":"9601:1:22","nodeType":"YulIdentifier","src":"9601:1:22"}]},{"nativeSrc":"9635:25:22","nodeType":"YulAssignment","src":"9635:25:22","value":{"arguments":[{"name":"y","nativeSrc":"9658:1:22","nodeType":"YulIdentifier","src":"9658:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9640:17:22","nodeType":"YulIdentifier","src":"9640:17:22"},"nativeSrc":"9640:20:22","nodeType":"YulFunctionCall","src":"9640:20:22"},"variableNames":[{"name":"y","nativeSrc":"9635:1:22","nodeType":"YulIdentifier","src":"9635:1:22"}]},{"nativeSrc":"9669:28:22","nodeType":"YulVariableDeclaration","src":"9669:28:22","value":{"arguments":[{"name":"x","nativeSrc":"9692:1:22","nodeType":"YulIdentifier","src":"9692:1:22"},{"name":"y","nativeSrc":"9695:1:22","nodeType":"YulIdentifier","src":"9695:1:22"}],"functionName":{"name":"mul","nativeSrc":"9688:3:22","nodeType":"YulIdentifier","src":"9688:3:22"},"nativeSrc":"9688:9:22","nodeType":"YulFunctionCall","src":"9688:9:22"},"variables":[{"name":"product_raw","nativeSrc":"9673:11:22","nodeType":"YulTypedName","src":"9673:11:22","type":""}]},{"nativeSrc":"9706:41:22","nodeType":"YulAssignment","src":"9706:41:22","value":{"arguments":[{"name":"product_raw","nativeSrc":"9735:11:22","nodeType":"YulIdentifier","src":"9735:11:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9717:17:22","nodeType":"YulIdentifier","src":"9717:17:22"},"nativeSrc":"9717:30:22","nodeType":"YulFunctionCall","src":"9717:30:22"},"variableNames":[{"name":"product","nativeSrc":"9706:7:22","nodeType":"YulIdentifier","src":"9706:7:22"}]},{"body":{"nativeSrc":"9924:22:22","nodeType":"YulBlock","src":"9924:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9926:16:22","nodeType":"YulIdentifier","src":"9926:16:22"},"nativeSrc":"9926:18:22","nodeType":"YulFunctionCall","src":"9926:18:22"},"nativeSrc":"9926:18:22","nodeType":"YulExpressionStatement","src":"9926:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"9857:1:22","nodeType":"YulIdentifier","src":"9857:1:22"}],"functionName":{"name":"iszero","nativeSrc":"9850:6:22","nodeType":"YulIdentifier","src":"9850:6:22"},"nativeSrc":"9850:9:22","nodeType":"YulFunctionCall","src":"9850:9:22"},{"arguments":[{"name":"y","nativeSrc":"9880:1:22","nodeType":"YulIdentifier","src":"9880:1:22"},{"arguments":[{"name":"product","nativeSrc":"9887:7:22","nodeType":"YulIdentifier","src":"9887:7:22"},{"name":"x","nativeSrc":"9896:1:22","nodeType":"YulIdentifier","src":"9896:1:22"}],"functionName":{"name":"div","nativeSrc":"9883:3:22","nodeType":"YulIdentifier","src":"9883:3:22"},"nativeSrc":"9883:15:22","nodeType":"YulFunctionCall","src":"9883:15:22"}],"functionName":{"name":"eq","nativeSrc":"9877:2:22","nodeType":"YulIdentifier","src":"9877:2:22"},"nativeSrc":"9877:22:22","nodeType":"YulFunctionCall","src":"9877:22:22"}],"functionName":{"name":"or","nativeSrc":"9830:2:22","nodeType":"YulIdentifier","src":"9830:2:22"},"nativeSrc":"9830:83:22","nodeType":"YulFunctionCall","src":"9830:83:22"}],"functionName":{"name":"iszero","nativeSrc":"9810:6:22","nodeType":"YulIdentifier","src":"9810:6:22"},"nativeSrc":"9810:113:22","nodeType":"YulFunctionCall","src":"9810:113:22"},"nativeSrc":"9807:139:22","nodeType":"YulIf","src":"9807:139:22"}]},"name":"checked_mul_t_uint256","nativeSrc":"9543:410:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9574:1:22","nodeType":"YulTypedName","src":"9574:1:22","type":""},{"name":"y","nativeSrc":"9577:1:22","nodeType":"YulTypedName","src":"9577:1:22","type":""}],"returnVariables":[{"name":"product","nativeSrc":"9583:7:22","nodeType":"YulTypedName","src":"9583:7:22","type":""}],"src":"9543:410:22"},{"body":{"nativeSrc":"10004:32:22","nodeType":"YulBlock","src":"10004:32:22","statements":[{"nativeSrc":"10014:16:22","nodeType":"YulAssignment","src":"10014:16:22","value":{"name":"value","nativeSrc":"10025:5:22","nodeType":"YulIdentifier","src":"10025:5:22"},"variableNames":[{"name":"cleaned","nativeSrc":"10014:7:22","nodeType":"YulIdentifier","src":"10014:7:22"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"9959:77:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9986:5:22","nodeType":"YulTypedName","src":"9986:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9996:7:22","nodeType":"YulTypedName","src":"9996:7:22","type":""}],"src":"9959:77:22"},{"body":{"nativeSrc":"10107:53:22","nodeType":"YulBlock","src":"10107:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10124:3:22","nodeType":"YulIdentifier","src":"10124:3:22"},{"arguments":[{"name":"value","nativeSrc":"10147:5:22","nodeType":"YulIdentifier","src":"10147:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10129:17:22","nodeType":"YulIdentifier","src":"10129:17:22"},"nativeSrc":"10129:24:22","nodeType":"YulFunctionCall","src":"10129:24:22"}],"functionName":{"name":"mstore","nativeSrc":"10117:6:22","nodeType":"YulIdentifier","src":"10117:6:22"},"nativeSrc":"10117:37:22","nodeType":"YulFunctionCall","src":"10117:37:22"},"nativeSrc":"10117:37:22","nodeType":"YulExpressionStatement","src":"10117:37:22"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10042:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10095:5:22","nodeType":"YulTypedName","src":"10095:5:22","type":""},{"name":"pos","nativeSrc":"10102:3:22","nodeType":"YulTypedName","src":"10102:3:22","type":""}],"src":"10042:118:22"},{"body":{"nativeSrc":"10231:53:22","nodeType":"YulBlock","src":"10231:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10248:3:22","nodeType":"YulIdentifier","src":"10248:3:22"},{"arguments":[{"name":"value","nativeSrc":"10271:5:22","nodeType":"YulIdentifier","src":"10271:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10253:17:22","nodeType":"YulIdentifier","src":"10253:17:22"},"nativeSrc":"10253:24:22","nodeType":"YulFunctionCall","src":"10253:24:22"}],"functionName":{"name":"mstore","nativeSrc":"10241:6:22","nodeType":"YulIdentifier","src":"10241:6:22"},"nativeSrc":"10241:37:22","nodeType":"YulFunctionCall","src":"10241:37:22"},"nativeSrc":"10241:37:22","nodeType":"YulExpressionStatement","src":"10241:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10166:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10219:5:22","nodeType":"YulTypedName","src":"10219:5:22","type":""},{"name":"pos","nativeSrc":"10226:3:22","nodeType":"YulTypedName","src":"10226:3:22","type":""}],"src":"10166:118:22"},{"body":{"nativeSrc":"10500:454:22","nodeType":"YulBlock","src":"10500:454:22","statements":[{"nativeSrc":"10510:27:22","nodeType":"YulAssignment","src":"10510:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"10522:9:22","nodeType":"YulIdentifier","src":"10522:9:22"},{"kind":"number","nativeSrc":"10533:3:22","nodeType":"YulLiteral","src":"10533:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10518:3:22","nodeType":"YulIdentifier","src":"10518:3:22"},"nativeSrc":"10518:19:22","nodeType":"YulFunctionCall","src":"10518:19:22"},"variableNames":[{"name":"tail","nativeSrc":"10510:4:22","nodeType":"YulIdentifier","src":"10510:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10591:6:22","nodeType":"YulIdentifier","src":"10591:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"10604:9:22","nodeType":"YulIdentifier","src":"10604:9:22"},{"kind":"number","nativeSrc":"10615:1:22","nodeType":"YulLiteral","src":"10615:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10600:3:22","nodeType":"YulIdentifier","src":"10600:3:22"},"nativeSrc":"10600:17:22","nodeType":"YulFunctionCall","src":"10600:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10547:43:22","nodeType":"YulIdentifier","src":"10547:43:22"},"nativeSrc":"10547:71:22","nodeType":"YulFunctionCall","src":"10547:71:22"},"nativeSrc":"10547:71:22","nodeType":"YulExpressionStatement","src":"10547:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10672:6:22","nodeType":"YulIdentifier","src":"10672:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"10685:9:22","nodeType":"YulIdentifier","src":"10685:9:22"},{"kind":"number","nativeSrc":"10696:2:22","nodeType":"YulLiteral","src":"10696:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10681:3:22","nodeType":"YulIdentifier","src":"10681:3:22"},"nativeSrc":"10681:18:22","nodeType":"YulFunctionCall","src":"10681:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10628:43:22","nodeType":"YulIdentifier","src":"10628:43:22"},"nativeSrc":"10628:72:22","nodeType":"YulFunctionCall","src":"10628:72:22"},"nativeSrc":"10628:72:22","nodeType":"YulExpressionStatement","src":"10628:72:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10754:6:22","nodeType":"YulIdentifier","src":"10754:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"10767:9:22","nodeType":"YulIdentifier","src":"10767:9:22"},{"kind":"number","nativeSrc":"10778:2:22","nodeType":"YulLiteral","src":"10778:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10763:3:22","nodeType":"YulIdentifier","src":"10763:3:22"},"nativeSrc":"10763:18:22","nodeType":"YulFunctionCall","src":"10763:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"10710:43:22","nodeType":"YulIdentifier","src":"10710:43:22"},"nativeSrc":"10710:72:22","nodeType":"YulFunctionCall","src":"10710:72:22"},"nativeSrc":"10710:72:22","nodeType":"YulExpressionStatement","src":"10710:72:22"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"10836:6:22","nodeType":"YulIdentifier","src":"10836:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"10849:9:22","nodeType":"YulIdentifier","src":"10849:9:22"},{"kind":"number","nativeSrc":"10860:2:22","nodeType":"YulLiteral","src":"10860:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10845:3:22","nodeType":"YulIdentifier","src":"10845:3:22"},"nativeSrc":"10845:18:22","nodeType":"YulFunctionCall","src":"10845:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10792:43:22","nodeType":"YulIdentifier","src":"10792:43:22"},"nativeSrc":"10792:72:22","nodeType":"YulFunctionCall","src":"10792:72:22"},"nativeSrc":"10792:72:22","nodeType":"YulExpressionStatement","src":"10792:72:22"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"10918:6:22","nodeType":"YulIdentifier","src":"10918:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"10931:9:22","nodeType":"YulIdentifier","src":"10931:9:22"},{"kind":"number","nativeSrc":"10942:3:22","nodeType":"YulLiteral","src":"10942:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10927:3:22","nodeType":"YulIdentifier","src":"10927:3:22"},"nativeSrc":"10927:19:22","nodeType":"YulFunctionCall","src":"10927:19:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10874:43:22","nodeType":"YulIdentifier","src":"10874:43:22"},"nativeSrc":"10874:73:22","nodeType":"YulFunctionCall","src":"10874:73:22"},"nativeSrc":"10874:73:22","nodeType":"YulExpressionStatement","src":"10874:73:22"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"10290:664:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10440:9:22","nodeType":"YulTypedName","src":"10440:9:22","type":""},{"name":"value4","nativeSrc":"10452:6:22","nodeType":"YulTypedName","src":"10452:6:22","type":""},{"name":"value3","nativeSrc":"10460:6:22","nodeType":"YulTypedName","src":"10460:6:22","type":""},{"name":"value2","nativeSrc":"10468:6:22","nodeType":"YulTypedName","src":"10468:6:22","type":""},{"name":"value1","nativeSrc":"10476:6:22","nodeType":"YulTypedName","src":"10476:6:22","type":""},{"name":"value0","nativeSrc":"10484:6:22","nodeType":"YulTypedName","src":"10484:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10495:4:22","nodeType":"YulTypedName","src":"10495:4:22","type":""}],"src":"10290:664:22"},{"body":{"nativeSrc":"11056:73:22","nodeType":"YulBlock","src":"11056:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11073:3:22","nodeType":"YulIdentifier","src":"11073:3:22"},{"name":"length","nativeSrc":"11078:6:22","nodeType":"YulIdentifier","src":"11078:6:22"}],"functionName":{"name":"mstore","nativeSrc":"11066:6:22","nodeType":"YulIdentifier","src":"11066:6:22"},"nativeSrc":"11066:19:22","nodeType":"YulFunctionCall","src":"11066:19:22"},"nativeSrc":"11066:19:22","nodeType":"YulExpressionStatement","src":"11066:19:22"},{"nativeSrc":"11094:29:22","nodeType":"YulAssignment","src":"11094:29:22","value":{"arguments":[{"name":"pos","nativeSrc":"11113:3:22","nodeType":"YulIdentifier","src":"11113:3:22"},{"kind":"number","nativeSrc":"11118:4:22","nodeType":"YulLiteral","src":"11118:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11109:3:22","nodeType":"YulIdentifier","src":"11109:3:22"},"nativeSrc":"11109:14:22","nodeType":"YulFunctionCall","src":"11109:14:22"},"variableNames":[{"name":"updated_pos","nativeSrc":"11094:11:22","nodeType":"YulIdentifier","src":"11094:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10960:169:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11028:3:22","nodeType":"YulTypedName","src":"11028:3:22","type":""},{"name":"length","nativeSrc":"11033:6:22","nodeType":"YulTypedName","src":"11033:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"11044:11:22","nodeType":"YulTypedName","src":"11044:11:22","type":""}],"src":"10960:169:22"},{"body":{"nativeSrc":"11197:186:22","nodeType":"YulBlock","src":"11197:186:22","statements":[{"nativeSrc":"11208:10:22","nodeType":"YulVariableDeclaration","src":"11208:10:22","value":{"kind":"number","nativeSrc":"11217:1:22","nodeType":"YulLiteral","src":"11217:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"11212:1:22","nodeType":"YulTypedName","src":"11212:1:22","type":""}]},{"body":{"nativeSrc":"11277:63:22","nodeType":"YulBlock","src":"11277:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"11302:3:22","nodeType":"YulIdentifier","src":"11302:3:22"},{"name":"i","nativeSrc":"11307:1:22","nodeType":"YulIdentifier","src":"11307:1:22"}],"functionName":{"name":"add","nativeSrc":"11298:3:22","nodeType":"YulIdentifier","src":"11298:3:22"},"nativeSrc":"11298:11:22","nodeType":"YulFunctionCall","src":"11298:11:22"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11321:3:22","nodeType":"YulIdentifier","src":"11321:3:22"},{"name":"i","nativeSrc":"11326:1:22","nodeType":"YulIdentifier","src":"11326:1:22"}],"functionName":{"name":"add","nativeSrc":"11317:3:22","nodeType":"YulIdentifier","src":"11317:3:22"},"nativeSrc":"11317:11:22","nodeType":"YulFunctionCall","src":"11317:11:22"}],"functionName":{"name":"mload","nativeSrc":"11311:5:22","nodeType":"YulIdentifier","src":"11311:5:22"},"nativeSrc":"11311:18:22","nodeType":"YulFunctionCall","src":"11311:18:22"}],"functionName":{"name":"mstore","nativeSrc":"11291:6:22","nodeType":"YulIdentifier","src":"11291:6:22"},"nativeSrc":"11291:39:22","nodeType":"YulFunctionCall","src":"11291:39:22"},"nativeSrc":"11291:39:22","nodeType":"YulExpressionStatement","src":"11291:39:22"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"11238:1:22","nodeType":"YulIdentifier","src":"11238:1:22"},{"name":"length","nativeSrc":"11241:6:22","nodeType":"YulIdentifier","src":"11241:6:22"}],"functionName":{"name":"lt","nativeSrc":"11235:2:22","nodeType":"YulIdentifier","src":"11235:2:22"},"nativeSrc":"11235:13:22","nodeType":"YulFunctionCall","src":"11235:13:22"},"nativeSrc":"11227:113:22","nodeType":"YulForLoop","post":{"nativeSrc":"11249:19:22","nodeType":"YulBlock","src":"11249:19:22","statements":[{"nativeSrc":"11251:15:22","nodeType":"YulAssignment","src":"11251:15:22","value":{"arguments":[{"name":"i","nativeSrc":"11260:1:22","nodeType":"YulIdentifier","src":"11260:1:22"},{"kind":"number","nativeSrc":"11263:2:22","nodeType":"YulLiteral","src":"11263:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11256:3:22","nodeType":"YulIdentifier","src":"11256:3:22"},"nativeSrc":"11256:10:22","nodeType":"YulFunctionCall","src":"11256:10:22"},"variableNames":[{"name":"i","nativeSrc":"11251:1:22","nodeType":"YulIdentifier","src":"11251:1:22"}]}]},"pre":{"nativeSrc":"11231:3:22","nodeType":"YulBlock","src":"11231:3:22","statements":[]},"src":"11227:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"11360:3:22","nodeType":"YulIdentifier","src":"11360:3:22"},{"name":"length","nativeSrc":"11365:6:22","nodeType":"YulIdentifier","src":"11365:6:22"}],"functionName":{"name":"add","nativeSrc":"11356:3:22","nodeType":"YulIdentifier","src":"11356:3:22"},"nativeSrc":"11356:16:22","nodeType":"YulFunctionCall","src":"11356:16:22"},{"kind":"number","nativeSrc":"11374:1:22","nodeType":"YulLiteral","src":"11374:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"11349:6:22","nodeType":"YulIdentifier","src":"11349:6:22"},"nativeSrc":"11349:27:22","nodeType":"YulFunctionCall","src":"11349:27:22"},"nativeSrc":"11349:27:22","nodeType":"YulExpressionStatement","src":"11349:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"11135:248:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"11179:3:22","nodeType":"YulTypedName","src":"11179:3:22","type":""},{"name":"dst","nativeSrc":"11184:3:22","nodeType":"YulTypedName","src":"11184:3:22","type":""},{"name":"length","nativeSrc":"11189:6:22","nodeType":"YulTypedName","src":"11189:6:22","type":""}],"src":"11135:248:22"},{"body":{"nativeSrc":"11437:54:22","nodeType":"YulBlock","src":"11437:54:22","statements":[{"nativeSrc":"11447:38:22","nodeType":"YulAssignment","src":"11447:38:22","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11465:5:22","nodeType":"YulIdentifier","src":"11465:5:22"},{"kind":"number","nativeSrc":"11472:2:22","nodeType":"YulLiteral","src":"11472:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"11461:3:22","nodeType":"YulIdentifier","src":"11461:3:22"},"nativeSrc":"11461:14:22","nodeType":"YulFunctionCall","src":"11461:14:22"},{"arguments":[{"kind":"number","nativeSrc":"11481:2:22","nodeType":"YulLiteral","src":"11481:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"11477:3:22","nodeType":"YulIdentifier","src":"11477:3:22"},"nativeSrc":"11477:7:22","nodeType":"YulFunctionCall","src":"11477:7:22"}],"functionName":{"name":"and","nativeSrc":"11457:3:22","nodeType":"YulIdentifier","src":"11457:3:22"},"nativeSrc":"11457:28:22","nodeType":"YulFunctionCall","src":"11457:28:22"},"variableNames":[{"name":"result","nativeSrc":"11447:6:22","nodeType":"YulIdentifier","src":"11447:6:22"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"11389:102:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11420:5:22","nodeType":"YulTypedName","src":"11420:5:22","type":""}],"returnVariables":[{"name":"result","nativeSrc":"11430:6:22","nodeType":"YulTypedName","src":"11430:6:22","type":""}],"src":"11389:102:22"},{"body":{"nativeSrc":"11589:285:22","nodeType":"YulBlock","src":"11589:285:22","statements":[{"nativeSrc":"11599:53:22","nodeType":"YulVariableDeclaration","src":"11599:53:22","value":{"arguments":[{"name":"value","nativeSrc":"11646:5:22","nodeType":"YulIdentifier","src":"11646:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"11613:32:22","nodeType":"YulIdentifier","src":"11613:32:22"},"nativeSrc":"11613:39:22","nodeType":"YulFunctionCall","src":"11613:39:22"},"variables":[{"name":"length","nativeSrc":"11603:6:22","nodeType":"YulTypedName","src":"11603:6:22","type":""}]},{"nativeSrc":"11661:78:22","nodeType":"YulAssignment","src":"11661:78:22","value":{"arguments":[{"name":"pos","nativeSrc":"11727:3:22","nodeType":"YulIdentifier","src":"11727:3:22"},{"name":"length","nativeSrc":"11732:6:22","nodeType":"YulIdentifier","src":"11732:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11668:58:22","nodeType":"YulIdentifier","src":"11668:58:22"},"nativeSrc":"11668:71:22","nodeType":"YulFunctionCall","src":"11668:71:22"},"variableNames":[{"name":"pos","nativeSrc":"11661:3:22","nodeType":"YulIdentifier","src":"11661:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11787:5:22","nodeType":"YulIdentifier","src":"11787:5:22"},{"kind":"number","nativeSrc":"11794:4:22","nodeType":"YulLiteral","src":"11794:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11783:3:22","nodeType":"YulIdentifier","src":"11783:3:22"},"nativeSrc":"11783:16:22","nodeType":"YulFunctionCall","src":"11783:16:22"},{"name":"pos","nativeSrc":"11801:3:22","nodeType":"YulIdentifier","src":"11801:3:22"},{"name":"length","nativeSrc":"11806:6:22","nodeType":"YulIdentifier","src":"11806:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"11748:34:22","nodeType":"YulIdentifier","src":"11748:34:22"},"nativeSrc":"11748:65:22","nodeType":"YulFunctionCall","src":"11748:65:22"},"nativeSrc":"11748:65:22","nodeType":"YulExpressionStatement","src":"11748:65:22"},{"nativeSrc":"11822:46:22","nodeType":"YulAssignment","src":"11822:46:22","value":{"arguments":[{"name":"pos","nativeSrc":"11833:3:22","nodeType":"YulIdentifier","src":"11833:3:22"},{"arguments":[{"name":"length","nativeSrc":"11860:6:22","nodeType":"YulIdentifier","src":"11860:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"11838:21:22","nodeType":"YulIdentifier","src":"11838:21:22"},"nativeSrc":"11838:29:22","nodeType":"YulFunctionCall","src":"11838:29:22"}],"functionName":{"name":"add","nativeSrc":"11829:3:22","nodeType":"YulIdentifier","src":"11829:3:22"},"nativeSrc":"11829:39:22","nodeType":"YulFunctionCall","src":"11829:39:22"},"variableNames":[{"name":"end","nativeSrc":"11822:3:22","nodeType":"YulIdentifier","src":"11822:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11497:377:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11570:5:22","nodeType":"YulTypedName","src":"11570:5:22","type":""},{"name":"pos","nativeSrc":"11577:3:22","nodeType":"YulTypedName","src":"11577:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11585:3:22","nodeType":"YulTypedName","src":"11585:3:22","type":""}],"src":"11497:377:22"},{"body":{"nativeSrc":"11998:195:22","nodeType":"YulBlock","src":"11998:195:22","statements":[{"nativeSrc":"12008:26:22","nodeType":"YulAssignment","src":"12008:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"12020:9:22","nodeType":"YulIdentifier","src":"12020:9:22"},{"kind":"number","nativeSrc":"12031:2:22","nodeType":"YulLiteral","src":"12031:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12016:3:22","nodeType":"YulIdentifier","src":"12016:3:22"},"nativeSrc":"12016:18:22","nodeType":"YulFunctionCall","src":"12016:18:22"},"variableNames":[{"name":"tail","nativeSrc":"12008:4:22","nodeType":"YulIdentifier","src":"12008:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12055:9:22","nodeType":"YulIdentifier","src":"12055:9:22"},{"kind":"number","nativeSrc":"12066:1:22","nodeType":"YulLiteral","src":"12066:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12051:3:22","nodeType":"YulIdentifier","src":"12051:3:22"},"nativeSrc":"12051:17:22","nodeType":"YulFunctionCall","src":"12051:17:22"},{"arguments":[{"name":"tail","nativeSrc":"12074:4:22","nodeType":"YulIdentifier","src":"12074:4:22"},{"name":"headStart","nativeSrc":"12080:9:22","nodeType":"YulIdentifier","src":"12080:9:22"}],"functionName":{"name":"sub","nativeSrc":"12070:3:22","nodeType":"YulIdentifier","src":"12070:3:22"},"nativeSrc":"12070:20:22","nodeType":"YulFunctionCall","src":"12070:20:22"}],"functionName":{"name":"mstore","nativeSrc":"12044:6:22","nodeType":"YulIdentifier","src":"12044:6:22"},"nativeSrc":"12044:47:22","nodeType":"YulFunctionCall","src":"12044:47:22"},"nativeSrc":"12044:47:22","nodeType":"YulExpressionStatement","src":"12044:47:22"},{"nativeSrc":"12100:86:22","nodeType":"YulAssignment","src":"12100:86:22","value":{"arguments":[{"name":"value0","nativeSrc":"12172:6:22","nodeType":"YulIdentifier","src":"12172:6:22"},{"name":"tail","nativeSrc":"12181:4:22","nodeType":"YulIdentifier","src":"12181:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"12108:63:22","nodeType":"YulIdentifier","src":"12108:63:22"},"nativeSrc":"12108:78:22","nodeType":"YulFunctionCall","src":"12108:78:22"},"variableNames":[{"name":"tail","nativeSrc":"12100:4:22","nodeType":"YulIdentifier","src":"12100:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11880:313:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11970:9:22","nodeType":"YulTypedName","src":"11970:9:22","type":""},{"name":"value0","nativeSrc":"11982:6:22","nodeType":"YulTypedName","src":"11982:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11993:4:22","nodeType":"YulTypedName","src":"11993:4:22","type":""}],"src":"11880:313:22"},{"body":{"nativeSrc":"12257:40:22","nodeType":"YulBlock","src":"12257:40:22","statements":[{"nativeSrc":"12268:22:22","nodeType":"YulAssignment","src":"12268:22:22","value":{"arguments":[{"name":"value","nativeSrc":"12284:5:22","nodeType":"YulIdentifier","src":"12284:5:22"}],"functionName":{"name":"mload","nativeSrc":"12278:5:22","nodeType":"YulIdentifier","src":"12278:5:22"},"nativeSrc":"12278:12:22","nodeType":"YulFunctionCall","src":"12278:12:22"},"variableNames":[{"name":"length","nativeSrc":"12268:6:22","nodeType":"YulIdentifier","src":"12268:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"12199:98:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12240:5:22","nodeType":"YulTypedName","src":"12240:5:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12250:6:22","nodeType":"YulTypedName","src":"12250:6:22","type":""}],"src":"12199:98:22"},{"body":{"nativeSrc":"12359:60:22","nodeType":"YulBlock","src":"12359:60:22","statements":[{"nativeSrc":"12369:11:22","nodeType":"YulAssignment","src":"12369:11:22","value":{"name":"ptr","nativeSrc":"12377:3:22","nodeType":"YulIdentifier","src":"12377:3:22"},"variableNames":[{"name":"data","nativeSrc":"12369:4:22","nodeType":"YulIdentifier","src":"12369:4:22"}]},{"nativeSrc":"12390:22:22","nodeType":"YulAssignment","src":"12390:22:22","value":{"arguments":[{"name":"ptr","nativeSrc":"12402:3:22","nodeType":"YulIdentifier","src":"12402:3:22"},{"kind":"number","nativeSrc":"12407:4:22","nodeType":"YulLiteral","src":"12407:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12398:3:22","nodeType":"YulIdentifier","src":"12398:3:22"},"nativeSrc":"12398:14:22","nodeType":"YulFunctionCall","src":"12398:14:22"},"variableNames":[{"name":"data","nativeSrc":"12390:4:22","nodeType":"YulIdentifier","src":"12390:4:22"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"12303:116:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12346:3:22","nodeType":"YulTypedName","src":"12346:3:22","type":""}],"returnVariables":[{"name":"data","nativeSrc":"12354:4:22","nodeType":"YulTypedName","src":"12354:4:22","type":""}],"src":"12303:116:22"},{"body":{"nativeSrc":"12480:99:22","nodeType":"YulBlock","src":"12480:99:22","statements":[{"nativeSrc":"12491:42:22","nodeType":"YulVariableDeclaration","src":"12491:42:22","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"12528:3:22","nodeType":"YulIdentifier","src":"12528:3:22"}],"functionName":{"name":"mload","nativeSrc":"12522:5:22","nodeType":"YulIdentifier","src":"12522:5:22"},"nativeSrc":"12522:10:22","nodeType":"YulFunctionCall","src":"12522:10:22"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"12504:17:22","nodeType":"YulIdentifier","src":"12504:17:22"},"nativeSrc":"12504:29:22","nodeType":"YulFunctionCall","src":"12504:29:22"},"variables":[{"name":"value","nativeSrc":"12495:5:22","nodeType":"YulTypedName","src":"12495:5:22","type":""}]},{"nativeSrc":"12543:29:22","nodeType":"YulAssignment","src":"12543:29:22","value":{"name":"value","nativeSrc":"12567:5:22","nodeType":"YulIdentifier","src":"12567:5:22"},"variableNames":[{"name":"returnValue","nativeSrc":"12543:11:22","nodeType":"YulIdentifier","src":"12543:11:22"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"12425:154:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12460:3:22","nodeType":"YulTypedName","src":"12460:3:22","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"12468:11:22","nodeType":"YulTypedName","src":"12468:11:22","type":""}],"src":"12425:154:22"},{"body":{"nativeSrc":"12675:504:22","nodeType":"YulBlock","src":"12675:504:22","statements":[{"nativeSrc":"12686:52:22","nodeType":"YulVariableDeclaration","src":"12686:52:22","value":{"arguments":[{"name":"array","nativeSrc":"12732:5:22","nodeType":"YulIdentifier","src":"12732:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"12700:31:22","nodeType":"YulIdentifier","src":"12700:31:22"},"nativeSrc":"12700:38:22","nodeType":"YulFunctionCall","src":"12700:38:22"},"variables":[{"name":"length","nativeSrc":"12690:6:22","nodeType":"YulTypedName","src":"12690:6:22","type":""}]},{"nativeSrc":"12747:21:22","nodeType":"YulVariableDeclaration","src":"12747:21:22","value":{"name":"array","nativeSrc":"12763:5:22","nodeType":"YulIdentifier","src":"12763:5:22"},"variables":[{"name":"dataArea","nativeSrc":"12751:8:22","nodeType":"YulTypedName","src":"12751:8:22","type":""}]},{"nativeSrc":"12778:52:22","nodeType":"YulAssignment","src":"12778:52:22","value":{"arguments":[{"name":"array","nativeSrc":"12824:5:22","nodeType":"YulIdentifier","src":"12824:5:22"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"12790:33:22","nodeType":"YulIdentifier","src":"12790:33:22"},"nativeSrc":"12790:40:22","nodeType":"YulFunctionCall","src":"12790:40:22"},"variableNames":[{"name":"dataArea","nativeSrc":"12778:8:22","nodeType":"YulIdentifier","src":"12778:8:22"}]},{"nativeSrc":"12840:44:22","nodeType":"YulAssignment","src":"12840:44:22","value":{"arguments":[{"name":"dataArea","nativeSrc":"12875:8:22","nodeType":"YulIdentifier","src":"12875:8:22"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"12849:25:22","nodeType":"YulIdentifier","src":"12849:25:22"},"nativeSrc":"12849:35:22","nodeType":"YulFunctionCall","src":"12849:35:22"},"variableNames":[{"name":"value","nativeSrc":"12840:5:22","nodeType":"YulIdentifier","src":"12840:5:22"}]},{"body":{"nativeSrc":"12912:260:22","nodeType":"YulBlock","src":"12912:260:22","statements":[{"nativeSrc":"12926:236:22","nodeType":"YulAssignment","src":"12926:236:22","value":{"arguments":[{"name":"value","nativeSrc":"12956:5:22","nodeType":"YulIdentifier","src":"12956:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13023:1:22","nodeType":"YulLiteral","src":"13023:1:22","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"13030:2:22","nodeType":"YulLiteral","src":"13030:2:22","type":"","value":"32"},{"name":"length","nativeSrc":"13034:6:22","nodeType":"YulIdentifier","src":"13034:6:22"}],"functionName":{"name":"sub","nativeSrc":"13026:3:22","nodeType":"YulIdentifier","src":"13026:3:22"},"nativeSrc":"13026:15:22","nodeType":"YulFunctionCall","src":"13026:15:22"}],"functionName":{"name":"mul","nativeSrc":"13019:3:22","nodeType":"YulIdentifier","src":"13019:3:22"},"nativeSrc":"13019:23:22","nodeType":"YulFunctionCall","src":"13019:23:22"},{"kind":"number","nativeSrc":"13064:66:22","nodeType":"YulLiteral","src":"13064:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"12979:18:22","nodeType":"YulIdentifier","src":"12979:18:22"},"nativeSrc":"12979:169:22","nodeType":"YulFunctionCall","src":"12979:169:22"}],"functionName":{"name":"and","nativeSrc":"12935:3:22","nodeType":"YulIdentifier","src":"12935:3:22"},"nativeSrc":"12935:227:22","nodeType":"YulFunctionCall","src":"12935:227:22"},"variableNames":[{"name":"value","nativeSrc":"12926:5:22","nodeType":"YulIdentifier","src":"12926:5:22"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"12900:6:22","nodeType":"YulIdentifier","src":"12900:6:22"},{"kind":"number","nativeSrc":"12908:2:22","nodeType":"YulLiteral","src":"12908:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12897:2:22","nodeType":"YulIdentifier","src":"12897:2:22"},"nativeSrc":"12897:14:22","nodeType":"YulFunctionCall","src":"12897:14:22"},"nativeSrc":"12894:278:22","nodeType":"YulIf","src":"12894:278:22"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"12585:594:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"12659:5:22","nodeType":"YulTypedName","src":"12659:5:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12669:5:22","nodeType":"YulTypedName","src":"12669:5:22","type":""}],"src":"12585:594:22"},{"body":{"nativeSrc":"13229:147:22","nodeType":"YulBlock","src":"13229:147:22","statements":[{"nativeSrc":"13239:25:22","nodeType":"YulAssignment","src":"13239:25:22","value":{"arguments":[{"name":"x","nativeSrc":"13262:1:22","nodeType":"YulIdentifier","src":"13262:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13244:17:22","nodeType":"YulIdentifier","src":"13244:17:22"},"nativeSrc":"13244:20:22","nodeType":"YulFunctionCall","src":"13244:20:22"},"variableNames":[{"name":"x","nativeSrc":"13239:1:22","nodeType":"YulIdentifier","src":"13239:1:22"}]},{"nativeSrc":"13273:25:22","nodeType":"YulAssignment","src":"13273:25:22","value":{"arguments":[{"name":"y","nativeSrc":"13296:1:22","nodeType":"YulIdentifier","src":"13296:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13278:17:22","nodeType":"YulIdentifier","src":"13278:17:22"},"nativeSrc":"13278:20:22","nodeType":"YulFunctionCall","src":"13278:20:22"},"variableNames":[{"name":"y","nativeSrc":"13273:1:22","nodeType":"YulIdentifier","src":"13273:1:22"}]},{"nativeSrc":"13307:16:22","nodeType":"YulAssignment","src":"13307:16:22","value":{"arguments":[{"name":"x","nativeSrc":"13318:1:22","nodeType":"YulIdentifier","src":"13318:1:22"},{"name":"y","nativeSrc":"13321:1:22","nodeType":"YulIdentifier","src":"13321:1:22"}],"functionName":{"name":"add","nativeSrc":"13314:3:22","nodeType":"YulIdentifier","src":"13314:3:22"},"nativeSrc":"13314:9:22","nodeType":"YulFunctionCall","src":"13314:9:22"},"variableNames":[{"name":"sum","nativeSrc":"13307:3:22","nodeType":"YulIdentifier","src":"13307:3:22"}]},{"body":{"nativeSrc":"13347:22:22","nodeType":"YulBlock","src":"13347:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13349:16:22","nodeType":"YulIdentifier","src":"13349:16:22"},"nativeSrc":"13349:18:22","nodeType":"YulFunctionCall","src":"13349:18:22"},"nativeSrc":"13349:18:22","nodeType":"YulExpressionStatement","src":"13349:18:22"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13339:1:22","nodeType":"YulIdentifier","src":"13339:1:22"},{"name":"sum","nativeSrc":"13342:3:22","nodeType":"YulIdentifier","src":"13342:3:22"}],"functionName":{"name":"gt","nativeSrc":"13336:2:22","nodeType":"YulIdentifier","src":"13336:2:22"},"nativeSrc":"13336:10:22","nodeType":"YulFunctionCall","src":"13336:10:22"},"nativeSrc":"13333:36:22","nodeType":"YulIf","src":"13333:36:22"}]},"name":"checked_add_t_uint256","nativeSrc":"13185:191:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13216:1:22","nodeType":"YulTypedName","src":"13216:1:22","type":""},{"name":"y","nativeSrc":"13219:1:22","nodeType":"YulTypedName","src":"13219:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13225:3:22","nodeType":"YulTypedName","src":"13225:3:22","type":""}],"src":"13185:191:22"},{"body":{"nativeSrc":"13536:288:22","nodeType":"YulBlock","src":"13536:288:22","statements":[{"nativeSrc":"13546:26:22","nodeType":"YulAssignment","src":"13546:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"13558:9:22","nodeType":"YulIdentifier","src":"13558:9:22"},{"kind":"number","nativeSrc":"13569:2:22","nodeType":"YulLiteral","src":"13569:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13554:3:22","nodeType":"YulIdentifier","src":"13554:3:22"},"nativeSrc":"13554:18:22","nodeType":"YulFunctionCall","src":"13554:18:22"},"variableNames":[{"name":"tail","nativeSrc":"13546:4:22","nodeType":"YulIdentifier","src":"13546:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13626:6:22","nodeType":"YulIdentifier","src":"13626:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"13639:9:22","nodeType":"YulIdentifier","src":"13639:9:22"},{"kind":"number","nativeSrc":"13650:1:22","nodeType":"YulLiteral","src":"13650:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13635:3:22","nodeType":"YulIdentifier","src":"13635:3:22"},"nativeSrc":"13635:17:22","nodeType":"YulFunctionCall","src":"13635:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13582:43:22","nodeType":"YulIdentifier","src":"13582:43:22"},"nativeSrc":"13582:71:22","nodeType":"YulFunctionCall","src":"13582:71:22"},"nativeSrc":"13582:71:22","nodeType":"YulExpressionStatement","src":"13582:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13707:6:22","nodeType":"YulIdentifier","src":"13707:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"13720:9:22","nodeType":"YulIdentifier","src":"13720:9:22"},{"kind":"number","nativeSrc":"13731:2:22","nodeType":"YulLiteral","src":"13731:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13716:3:22","nodeType":"YulIdentifier","src":"13716:3:22"},"nativeSrc":"13716:18:22","nodeType":"YulFunctionCall","src":"13716:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13663:43:22","nodeType":"YulIdentifier","src":"13663:43:22"},"nativeSrc":"13663:72:22","nodeType":"YulFunctionCall","src":"13663:72:22"},"nativeSrc":"13663:72:22","nodeType":"YulExpressionStatement","src":"13663:72:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13789:6:22","nodeType":"YulIdentifier","src":"13789:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"13802:9:22","nodeType":"YulIdentifier","src":"13802:9:22"},{"kind":"number","nativeSrc":"13813:2:22","nodeType":"YulLiteral","src":"13813:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13798:3:22","nodeType":"YulIdentifier","src":"13798:3:22"},"nativeSrc":"13798:18:22","nodeType":"YulFunctionCall","src":"13798:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13745:43:22","nodeType":"YulIdentifier","src":"13745:43:22"},"nativeSrc":"13745:72:22","nodeType":"YulFunctionCall","src":"13745:72:22"},"nativeSrc":"13745:72:22","nodeType":"YulExpressionStatement","src":"13745:72:22"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13382:442:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13492:9:22","nodeType":"YulTypedName","src":"13492:9:22","type":""},{"name":"value2","nativeSrc":"13504:6:22","nodeType":"YulTypedName","src":"13504:6:22","type":""},{"name":"value1","nativeSrc":"13512:6:22","nodeType":"YulTypedName","src":"13512:6:22","type":""},{"name":"value0","nativeSrc":"13520:6:22","nodeType":"YulTypedName","src":"13520:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13531:4:22","nodeType":"YulTypedName","src":"13531:4:22","type":""}],"src":"13382:442:22"},{"body":{"nativeSrc":"13928:124:22","nodeType":"YulBlock","src":"13928:124:22","statements":[{"nativeSrc":"13938:26:22","nodeType":"YulAssignment","src":"13938:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"13950:9:22","nodeType":"YulIdentifier","src":"13950:9:22"},{"kind":"number","nativeSrc":"13961:2:22","nodeType":"YulLiteral","src":"13961:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13946:3:22","nodeType":"YulIdentifier","src":"13946:3:22"},"nativeSrc":"13946:18:22","nodeType":"YulFunctionCall","src":"13946:18:22"},"variableNames":[{"name":"tail","nativeSrc":"13938:4:22","nodeType":"YulIdentifier","src":"13938:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14018:6:22","nodeType":"YulIdentifier","src":"14018:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"14031:9:22","nodeType":"YulIdentifier","src":"14031:9:22"},{"kind":"number","nativeSrc":"14042:1:22","nodeType":"YulLiteral","src":"14042:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14027:3:22","nodeType":"YulIdentifier","src":"14027:3:22"},"nativeSrc":"14027:17:22","nodeType":"YulFunctionCall","src":"14027:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13974:43:22","nodeType":"YulIdentifier","src":"13974:43:22"},"nativeSrc":"13974:71:22","nodeType":"YulFunctionCall","src":"13974:71:22"},"nativeSrc":"13974:71:22","nodeType":"YulExpressionStatement","src":"13974:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"13830:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13900:9:22","nodeType":"YulTypedName","src":"13900:9:22","type":""},{"name":"value0","nativeSrc":"13912:6:22","nodeType":"YulTypedName","src":"13912:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13923:4:22","nodeType":"YulTypedName","src":"13923:4:22","type":""}],"src":"13830:222:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61016060405234801561001157600080fd5b506040516130b73803806130b783398181016040528101906100339190610796565b6040518060400160405280600b81526020017f43616d707573546f6b656e000000000000000000000000000000000000000000815250806040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250836040518060400160405280600b81526020017f43616d707573546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600581526020017f4249545347000000000000000000000000000000000000000000000000000000815250816003908161011c9190610a26565b50806004908161012c9190610a26565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101a15760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101989190610b07565b60405180910390fd5b6101b08161029a60201b60201c565b506101c560068361036060201b90919060201c565b61012081815250506101e160078261036060201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a0818152505061021e6103b060201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050506102938161026e61040b60201b60201c565b600a61027a9190610c91565b620f42406102889190610cdc565b61041460201b60201c565b5050610f5d565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006020835110156103825761037b8361049c60201b60201c565b90506103aa565b826103928361050460201b60201c565b60000190816103a19190610a26565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016103f0959493929190610d46565b60405160208183030381529060405280519060200120905090565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104865760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161047d9190610b07565b60405180910390fd5b6104986000838361050e60201b60201c565b5050565b600080829050601f815111156104e957826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016104e09190610e1e565b60405180910390fd5b8051816104f590610e70565b60001c1760001b915050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105605780600260008282546105549190610ed7565b92505081905550610633565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156105ec578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016105e393929190610f0b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361067c57806002600082825403925050819055506106c9565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107269190610f42565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076382610738565b9050919050565b61077381610758565b811461077e57600080fd5b50565b6000815190506107908161076a565b92915050565b600080604083850312156107ad576107ac610733565b5b60006107bb85828601610781565b92505060206107cc85828601610781565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061085757607f821691505b60208210810361086a57610869610810565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108d27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610895565b6108dc8683610895565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061092361091e610919846108f4565b6108fe565b6108f4565b9050919050565b6000819050919050565b61093d83610908565b6109516109498261092a565b8484546108a2565b825550505050565b600090565b610966610959565b610971818484610934565b505050565b5b818110156109955761098a60008261095e565b600181019050610977565b5050565b601f8211156109da576109ab81610870565b6109b484610885565b810160208510156109c3578190505b6109d76109cf85610885565b830182610976565b50505b505050565b600082821c905092915050565b60006109fd600019846008026109df565b1980831691505092915050565b6000610a1683836109ec565b9150826002028217905092915050565b610a2f826107d6565b67ffffffffffffffff811115610a4857610a476107e1565b5b610a52825461083f565b610a5d828285610999565b600060209050601f831160018114610a905760008415610a7e578287015190505b610a888582610a0a565b865550610af0565b601f198416610a9e86610870565b60005b82811015610ac657848901518255600182019150602085019450602081019050610aa1565b86831015610ae35784890151610adf601f8916826109ec565b8355505b6001600288020188555050505b505050505050565b610b0181610758565b82525050565b6000602082019050610b1c6000830184610af8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610ba857808604811115610b8457610b83610b22565b5b6001851615610b935780820291505b8081029050610ba185610b51565b9450610b68565b94509492505050565b600082610bc15760019050610c7d565b81610bcf5760009050610c7d565b8160018114610be55760028114610bef57610c1e565b6001915050610c7d565b60ff841115610c0157610c00610b22565b5b8360020a915084821115610c1857610c17610b22565b5b50610c7d565b5060208310610133831016604e8410600b8410161715610c535782820a905083811115610c4e57610c4d610b22565b5b610c7d565b610c608484846001610b5e565b92509050818404811115610c7757610c76610b22565b5b81810290505b9392505050565b600060ff82169050919050565b6000610c9c826108f4565b9150610ca783610c84565b9250610cd47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610bb1565b905092915050565b6000610ce7826108f4565b9150610cf2836108f4565b9250828202610d00816108f4565b91508282048414831517610d1757610d16610b22565b5b5092915050565b6000819050919050565b610d3181610d1e565b82525050565b610d40816108f4565b82525050565b600060a082019050610d5b6000830188610d28565b610d686020830187610d28565b610d756040830186610d28565b610d826060830185610d37565b610d8f6080830184610af8565b9695505050505050565b600082825260208201905092915050565b60005b83811015610dc8578082015181840152602081019050610dad565b60008484015250505050565b6000601f19601f8301169050919050565b6000610df0826107d6565b610dfa8185610d99565b9350610e0a818560208601610daa565b610e1381610dd4565b840191505092915050565b60006020820190508181036000830152610e388184610de5565b905092915050565b600081519050919050565b6000819050602082019050919050565b6000610e678251610d1e565b80915050919050565b6000610e7b82610e40565b82610e8584610e4b565b9050610e9081610e5b565b92506020821015610ed057610ecb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802610895565b831692505b5050919050565b6000610ee2826108f4565b9150610eed836108f4565b9250828201905080821115610f0557610f04610b22565b5b92915050565b6000606082019050610f206000830186610af8565b610f2d6020830185610d37565b610f3a6040830184610d37565b949350505050565b6000602082019050610f576000830184610d37565b92915050565b60805160a05160c05160e051610100516101205161014051612100610fb76000396000610ebb01526000610e80015260006113d0015260006113af01526000610bac01526000610c0201526000610c2b01526121006000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad57806395d89b411161007157806395d89b41146102fe578063a9059cbb1461031c578063d505accf1461034c578063dd62ed3e14610368578063f2fde38b1461039857610121565b8063715018a6146102665780637ecebe001461027057806381a4af15146102a057806384b0196e146102bc5780638da5cb5b146102e057610121565b806323b872dd116100f457806323b872dd146101ae578063313ce567146101de5780633644e515146101fc57806340c10f191461021a57806370a082311461023657610121565b806306fdde0314610126578063095ea7b3146101445780630d1118ce1461017457806318160ddd14610190575b600080fd5b61012e6103b4565b60405161013b91906118bd565b60405180910390f35b61015e60048036038101906101599190611978565b610446565b60405161016b91906119d3565b60405180910390f35b61018e60048036038101906101899190611978565b610469565b005b6101986104c2565b6040516101a591906119fd565b60405180910390f35b6101c860048036038101906101c39190611a18565b6104cc565b6040516101d591906119d3565b60405180910390f35b6101e66104fb565b6040516101f39190611a87565b60405180910390f35b610204610504565b6040516102119190611abb565b60405180910390f35b610234600480360381019061022f9190611978565b610513565b005b610250600480360381019061024b9190611ad6565b610529565b60405161025d91906119fd565b60405180910390f35b61026e610571565b005b61028a60048036038101906102859190611ad6565b610585565b60405161029791906119fd565b60405180910390f35b6102ba60048036038101906102b59190611978565b610597565b005b6102c46105a5565b6040516102d79796959493929190611c0b565b60405180910390f35b6102e861064f565b6040516102f59190611c8f565b60405180910390f35b610306610679565b60405161031391906118bd565b60405180910390f35b61033660048036038101906103319190611978565b61070b565b60405161034391906119d3565b60405180910390f35b61036660048036038101906103619190611d02565b61072e565b005b610382600480360381019061037d9190611da4565b610876565b60405161038f91906119fd565b60405180910390f35b6103b260048036038101906103ad9190611ad6565b6108fd565b005b6060600380546103c390611e13565b80601f01602080910402602001604051908101604052809291908181526020018280546103ef90611e13565b801561043c5780601f106104115761010080835404028352916020019161043c565b820191906000526020600020905b81548152906001019060200180831161041f57829003601f168201915b5050505050905090565b600080610451610983565b905061045e81858561098b565b600191505092915050565b8061047383610529565b10156104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab90611e90565b60405180910390fd5b6104be828261099d565b5050565b6000600254905090565b6000806104d7610983565b90506104e4858285610a1f565b6104ef858585610ab4565b60019150509392505050565b60006012905090565b600061050e610ba8565b905090565b61051b610c5f565b6105258282610ce6565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610579610c5f565b6105836000610d68565b565b600061059082610e2e565b9050919050565b6105a18282610ce6565b5050565b6000606080600080600060606105b9610e77565b6105c1610eb2565b46306000801b600067ffffffffffffffff8111156105e2576105e1611eb0565b5b6040519080825280602002602001820160405280156106105781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461068890611e13565b80601f01602080910402602001604051908101604052809291908181526020018280546106b490611e13565b80156107015780601f106106d657610100808354040283529160200191610701565b820191906000526020600020905b8154815290600101906020018083116106e457829003601f168201915b5050505050905090565b600080610716610983565b9050610723818585610ab4565b600191505092915050565b8342111561077357836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161076a91906119fd565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107a28c610eed565b896040516020016107b896959493929190611edf565b60405160208183030381529060405280519060200120905060006107db82610f44565b905060006107eb82878787610f5e565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461085f57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610856929190611f40565b60405180910390fd5b61086a8a8a8a61098b565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610905610c5f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109775760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161096e9190611c8f565b60405180910390fd5b61098081610d68565b50565b600033905090565b6109988383836001610f8e565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a0f5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a069190611c8f565b60405180910390fd5b610a1b82600083611165565b5050565b6000610a2b8484610876565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610aae5781811015610a9e578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a9593929190611f69565b60405180910390fd5b610aad84848484036000610f8e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b265760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b1d9190611c8f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b985760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b8f9190611c8f565b60405180910390fd5b610ba3838383611165565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610c2457507f000000000000000000000000000000000000000000000000000000000000000046145b15610c51577f00000000000000000000000000000000000000000000000000000000000000009050610c5c565b610c5961138a565b90505b90565b610c67610983565b73ffffffffffffffffffffffffffffffffffffffff16610c8561064f565b73ffffffffffffffffffffffffffffffffffffffff1614610ce457610ca8610983565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cdb9190611c8f565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d585760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d4f9190611c8f565b60405180910390fd5b610d6460008383611165565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610ead60067f000000000000000000000000000000000000000000000000000000000000000061142090919063ffffffff16565b905090565b6060610ee860077f000000000000000000000000000000000000000000000000000000000000000061142090919063ffffffff16565b905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6000610f57610f51610ba8565b836114d0565b9050919050565b600080600080610f7088888888611511565b925092509250610f808282611605565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110005760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ff79190611c8f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110725760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110699190611c8f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561115f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161115691906119fd565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111b75780600260008282546111ab9190611fcf565b9250508190555061128a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611243578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161123a93929190611f69565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112d35780600260008282540392505081905550611320565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161137d91906119fd565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611405959493929190612003565b60405160208183030381529060405280519060200120905090565b606060ff60001b831461143d5761143683611769565b90506114ca565b81805461144990611e13565b80601f016020809104026020016040519081016040528092919081815260200182805461147590611e13565b80156114c25780601f10611497576101008083540402835291602001916114c2565b820191906000526020600020905b8154815290600101906020018083116114a557829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156115515760006003859250925092506115fb565b6000600188888888604051600081526020016040526040516115769493929190612056565b6020604051602081039080840390855afa158015611598573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115ec57600060016000801b935093509350506115fb565b8060008060001b935093509350505b9450945094915050565b600060038111156116195761161861209b565b5b82600381111561162c5761162b61209b565b5b031561176557600160038111156116465761164561209b565b5b8260038111156116595761165861209b565b5b03611690576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156116a4576116a361209b565b5b8260038111156116b7576116b661209b565b5b036116fc578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016116f391906119fd565b60405180910390fd5b60038081111561170f5761170e61209b565b5b8260038111156117225761172161209b565b5b0361176457806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161175b9190611abb565b60405180910390fd5b5b5050565b60606000611776836117dd565b90506000602067ffffffffffffffff81111561179557611794611eb0565b5b6040519080825280601f01601f1916602001820160405280156117c75781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f811115611824576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561186757808201518184015260208101905061184c565b60008484015250505050565b6000601f19601f8301169050919050565b600061188f8261182d565b6118998185611838565b93506118a9818560208601611849565b6118b281611873565b840191505092915050565b600060208201905081810360008301526118d78184611884565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061190f826118e4565b9050919050565b61191f81611904565b811461192a57600080fd5b50565b60008135905061193c81611916565b92915050565b6000819050919050565b61195581611942565b811461196057600080fd5b50565b6000813590506119728161194c565b92915050565b6000806040838503121561198f5761198e6118df565b5b600061199d8582860161192d565b92505060206119ae85828601611963565b9150509250929050565b60008115159050919050565b6119cd816119b8565b82525050565b60006020820190506119e860008301846119c4565b92915050565b6119f781611942565b82525050565b6000602082019050611a1260008301846119ee565b92915050565b600080600060608486031215611a3157611a306118df565b5b6000611a3f8682870161192d565b9350506020611a508682870161192d565b9250506040611a6186828701611963565b9150509250925092565b600060ff82169050919050565b611a8181611a6b565b82525050565b6000602082019050611a9c6000830184611a78565b92915050565b6000819050919050565b611ab581611aa2565b82525050565b6000602082019050611ad06000830184611aac565b92915050565b600060208284031215611aec57611aeb6118df565b5b6000611afa8482850161192d565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611b3881611b03565b82525050565b611b4781611904565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611b8281611942565b82525050565b6000611b948383611b79565b60208301905092915050565b6000602082019050919050565b6000611bb882611b4d565b611bc28185611b58565b9350611bcd83611b69565b8060005b83811015611bfe578151611be58882611b88565b9750611bf083611ba0565b925050600181019050611bd1565b5085935050505092915050565b600060e082019050611c20600083018a611b2f565b8181036020830152611c328189611884565b90508181036040830152611c468188611884565b9050611c5560608301876119ee565b611c626080830186611b3e565b611c6f60a0830185611aac565b81810360c0830152611c818184611bad565b905098975050505050505050565b6000602082019050611ca46000830184611b3e565b92915050565b611cb381611a6b565b8114611cbe57600080fd5b50565b600081359050611cd081611caa565b92915050565b611cdf81611aa2565b8114611cea57600080fd5b50565b600081359050611cfc81611cd6565b92915050565b600080600080600080600060e0888a031215611d2157611d206118df565b5b6000611d2f8a828b0161192d565b9750506020611d408a828b0161192d565b9650506040611d518a828b01611963565b9550506060611d628a828b01611963565b9450506080611d738a828b01611cc1565b93505060a0611d848a828b01611ced565b92505060c0611d958a828b01611ced565b91505092959891949750929550565b60008060408385031215611dbb57611dba6118df565b5b6000611dc98582860161192d565b9250506020611dda8582860161192d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e2b57607f821691505b602082108103611e3e57611e3d611de4565b5b50919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000611e7a601483611838565b9150611e8582611e44565b602082019050919050565b60006020820190508181036000830152611ea981611e6d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050611ef46000830189611aac565b611f016020830188611b3e565b611f0e6040830187611b3e565b611f1b60608301866119ee565b611f2860808301856119ee565b611f3560a08301846119ee565b979650505050505050565b6000604082019050611f556000830185611b3e565b611f626020830184611b3e565b9392505050565b6000606082019050611f7e6000830186611b3e565b611f8b60208301856119ee565b611f9860408301846119ee565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611fda82611942565b9150611fe583611942565b9250828201905080821115611ffd57611ffc611fa0565b5b92915050565b600060a0820190506120186000830188611aac565b6120256020830187611aac565b6120326040830186611aac565b61203f60608301856119ee565b61204c6080830184611b3e565b9695505050505050565b600060808201905061206b6000830187611aac565b6120786020830186611a78565b6120856040830185611aac565b6120926060830184611aac565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220487d16cfb7397aaaefaa06327d67caa16db992c6abc253dcfbc06a10f8155c2b64736f6c634300081c0033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x30B7 CODESIZE SUB DUP1 PUSH2 0x30B7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x33 SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616D707573546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616D707573546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4249545347000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B0 DUP2 PUSH2 0x29A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1C5 PUSH1 0x6 DUP4 PUSH2 0x360 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x1E1 PUSH1 0x7 DUP3 PUSH2 0x360 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x21E PUSH2 0x3B0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x293 DUP2 PUSH2 0x26E PUSH2 0x40B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x414 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x382 JUMPI PUSH2 0x37B DUP4 PUSH2 0x49C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x3AA JUMP JUMPDEST DUP3 PUSH2 0x392 DUP4 PUSH2 0x504 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3F0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x486 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x498 PUSH1 0x0 DUP4 DUP4 PUSH2 0x50E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x4E9 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x4F5 SWAP1 PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x560 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x554 SWAP2 SWAP1 PUSH2 0xED7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x633 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x5EC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x67C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6C9 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x726 SWAP2 SWAP1 PUSH2 0xF42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x763 DUP3 PUSH2 0x738 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x773 DUP2 PUSH2 0x758 JUMP JUMPDEST DUP2 EQ PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x790 DUP2 PUSH2 0x76A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7AC PUSH2 0x733 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7BB DUP6 DUP3 DUP7 ADD PUSH2 0x781 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7CC DUP6 DUP3 DUP7 ADD PUSH2 0x781 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x857 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x86A JUMPI PUSH2 0x869 PUSH2 0x810 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x8D2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x895 JUMP JUMPDEST PUSH2 0x8DC DUP7 DUP4 PUSH2 0x895 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x923 PUSH2 0x91E PUSH2 0x919 DUP5 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93D DUP4 PUSH2 0x908 JUMP JUMPDEST PUSH2 0x951 PUSH2 0x949 DUP3 PUSH2 0x92A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8A2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x966 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x971 DUP2 DUP5 DUP5 PUSH2 0x934 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x995 JUMPI PUSH2 0x98A PUSH1 0x0 DUP3 PUSH2 0x95E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x977 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9DA JUMPI PUSH2 0x9AB DUP2 PUSH2 0x870 JUMP JUMPDEST PUSH2 0x9B4 DUP5 PUSH2 0x885 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9C3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9D7 PUSH2 0x9CF DUP6 PUSH2 0x885 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x976 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FD PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x9DF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA16 DUP4 DUP4 PUSH2 0x9EC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA2F DUP3 PUSH2 0x7D6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA48 JUMPI PUSH2 0xA47 PUSH2 0x7E1 JUMP JUMPDEST JUMPDEST PUSH2 0xA52 DUP3 SLOAD PUSH2 0x83F JUMP JUMPDEST PUSH2 0xA5D DUP3 DUP3 DUP6 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA90 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xA7E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA88 DUP6 DUP3 PUSH2 0xA0A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA9E DUP7 PUSH2 0x870 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAC6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAE3 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xADF PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x9EC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0x758 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xBA8 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xB84 JUMPI PUSH2 0xB83 PUSH2 0xB22 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xB93 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xBA1 DUP6 PUSH2 0xB51 JUMP JUMPDEST SWAP5 POP PUSH2 0xB68 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBC1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC7D JUMP JUMPDEST DUP2 PUSH2 0xBCF JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC7D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xBE5 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xBEF JUMPI PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xC7D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xC01 JUMPI PUSH2 0xC00 PUSH2 0xB22 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xC18 JUMPI PUSH2 0xC17 PUSH2 0xB22 JUMP JUMPDEST JUMPDEST POP PUSH2 0xC7D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xC53 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xC4E JUMPI PUSH2 0xC4D PUSH2 0xB22 JUMP JUMPDEST JUMPDEST PUSH2 0xC7D JUMP JUMPDEST PUSH2 0xC60 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xB5E JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xC77 JUMPI PUSH2 0xC76 PUSH2 0xB22 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9C DUP3 PUSH2 0x8F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA7 DUP4 PUSH2 0xC84 JUMP JUMPDEST SWAP3 POP PUSH2 0xCD4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE7 DUP3 PUSH2 0x8F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF2 DUP4 PUSH2 0x8F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD00 DUP2 PUSH2 0x8F4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD17 JUMPI PUSH2 0xD16 PUSH2 0xB22 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD31 DUP2 PUSH2 0xD1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD40 DUP2 PUSH2 0x8F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xD5B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0xD68 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0xD75 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0xD82 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0xD8F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xAF8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDC8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF0 DUP3 PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0xDFA DUP2 DUP6 PUSH2 0xD99 JUMP JUMPDEST SWAP4 POP PUSH2 0xE0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDAA JUMP JUMPDEST PUSH2 0xE13 DUP2 PUSH2 0xDD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE38 DUP2 DUP5 PUSH2 0xDE5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE67 DUP3 MLOAD PUSH2 0xD1E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7B DUP3 PUSH2 0xE40 JUMP JUMPDEST DUP3 PUSH2 0xE85 DUP5 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP PUSH2 0xE90 DUP2 PUSH2 0xE5B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0xED0 JUMPI PUSH2 0xECB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x895 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE2 DUP3 PUSH2 0x8F4 JUMP JUMPDEST SWAP2 POP PUSH2 0xEED DUP4 PUSH2 0x8F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF05 JUMPI PUSH2 0xF04 PUSH2 0xB22 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF20 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0xF2D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0xF3A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD37 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2100 PUSH2 0xFB7 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xEBB ADD MSTORE PUSH1 0x0 PUSH2 0xE80 ADD MSTORE PUSH1 0x0 PUSH2 0x13D0 ADD MSTORE PUSH1 0x0 PUSH2 0x13AF ADD MSTORE PUSH1 0x0 PUSH2 0xBAC ADD MSTORE PUSH1 0x0 PUSH2 0xC02 ADD MSTORE PUSH1 0x0 PUSH2 0xC2B ADD MSTORE PUSH2 0x2100 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x398 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x81A4AF15 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x236 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xD1118CE EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x190 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x198 PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH2 0x571 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C4 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x382 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3C3 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3EF SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x43C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x411 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x43C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x41F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x451 PUSH2 0x983 JUMP JUMPDEST SWAP1 POP PUSH2 0x45E DUP2 DUP6 DUP6 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x473 DUP4 PUSH2 0x529 JUMP JUMPDEST LT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AB SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4BE DUP3 DUP3 PUSH2 0x99D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4D7 PUSH2 0x983 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E4 DUP6 DUP3 DUP6 PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x4EF DUP6 DUP6 DUP6 PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E PUSH2 0xBA8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x51B PUSH2 0xC5F JUMP JUMPDEST PUSH2 0x525 DUP3 DUP3 PUSH2 0xCE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x579 PUSH2 0xC5F JUMP JUMPDEST PUSH2 0x583 PUSH1 0x0 PUSH2 0xD68 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x590 DUP3 PUSH2 0xE2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A1 DUP3 DUP3 PUSH2 0xCE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x5B9 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0xEB2 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E2 JUMPI PUSH2 0x5E1 PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x610 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x688 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B4 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x701 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x701 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x716 PUSH2 0x983 JUMP JUMPDEST SWAP1 POP PUSH2 0x723 DUP2 DUP6 DUP6 PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x773 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x7A2 DUP13 PUSH2 0xEED JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x7DB DUP3 PUSH2 0xF44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7EB DUP3 DUP8 DUP8 DUP8 PUSH2 0xF5E JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x85F JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x856 SWAP3 SWAP2 SWAP1 PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x86A DUP11 DUP11 DUP11 PUSH2 0x98B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x905 PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x977 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96E SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x980 DUP2 PUSH2 0xD68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x998 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF8E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA0F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1B DUP3 PUSH1 0x0 DUP4 PUSH2 0x1165 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2B DUP5 DUP5 PUSH2 0x876 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xAAE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA9E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA95 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAAD DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xF8E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB26 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1D SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB98 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8F SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA3 DUP4 DUP4 DUP4 PUSH2 0x1165 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC24 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xC51 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xC5C JUMP JUMPDEST PUSH2 0xC59 PUSH2 0x138A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC67 PUSH2 0x983 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC85 PUSH2 0x64F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE4 JUMPI PUSH2 0xCA8 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD58 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4F SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD64 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1165 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEAD PUSH1 0x6 PUSH32 0x0 PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEE8 PUSH1 0x7 PUSH32 0x0 PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF57 PUSH2 0xF51 PUSH2 0xBA8 JUMP JUMPDEST DUP4 PUSH2 0x14D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xF70 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xF80 DUP3 DUP3 PUSH2 0x1605 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1000 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF7 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1072 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x115F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1156 SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B7 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x1FCF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1243 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D3 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1320 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x137D SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1405 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x143D JUMPI PUSH2 0x1436 DUP4 PUSH2 0x1769 JUMP JUMPDEST SWAP1 POP PUSH2 0x14CA JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1449 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1475 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1497 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1576 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1598 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15EC JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x15FB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0x209B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x162C JUMPI PUSH2 0x162B PUSH2 0x209B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1765 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1646 JUMPI PUSH2 0x1645 PUSH2 0x209B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1659 JUMPI PUSH2 0x1658 PUSH2 0x209B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1690 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16A4 JUMPI PUSH2 0x16A3 PUSH2 0x209B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16B7 JUMPI PUSH2 0x16B6 PUSH2 0x209B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16FC JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F3 SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x170F JUMPI PUSH2 0x170E PUSH2 0x209B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1722 JUMPI PUSH2 0x1721 PUSH2 0x209B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1764 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175B SWAP2 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1776 DUP4 PUSH2 0x17DD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1794 PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17C7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1824 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1867 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x184C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188F DUP3 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1899 DUP2 DUP6 PUSH2 0x1838 JUMP JUMPDEST SWAP4 POP PUSH2 0x18A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x18B2 DUP2 PUSH2 0x1873 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18D7 DUP2 DUP5 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190F DUP3 PUSH2 0x18E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x191F DUP2 PUSH2 0x1904 JUMP JUMPDEST DUP2 EQ PUSH2 0x192A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x193C DUP2 PUSH2 0x1916 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1955 DUP2 PUSH2 0x1942 JUMP JUMPDEST DUP2 EQ PUSH2 0x1960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1972 DUP2 PUSH2 0x194C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198F JUMPI PUSH2 0x198E PUSH2 0x18DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x199D DUP6 DUP3 DUP7 ADD PUSH2 0x192D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19AE DUP6 DUP3 DUP7 ADD PUSH2 0x1963 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CD DUP2 PUSH2 0x19B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19F7 DUP2 PUSH2 0x1942 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A12 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A31 JUMPI PUSH2 0x1A30 PUSH2 0x18DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A3F DUP7 DUP3 DUP8 ADD PUSH2 0x192D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A50 DUP7 DUP3 DUP8 ADD PUSH2 0x192D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A61 DUP7 DUP3 DUP8 ADD PUSH2 0x1963 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A81 DUP2 PUSH2 0x1A6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB5 DUP2 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEC JUMPI PUSH2 0x1AEB PUSH2 0x18DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AFA DUP5 DUP3 DUP6 ADD PUSH2 0x192D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B38 DUP2 PUSH2 0x1B03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B47 DUP2 PUSH2 0x1904 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B82 DUP2 PUSH2 0x1942 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B94 DUP4 DUP4 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB8 DUP3 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x1BC2 DUP2 DUP6 PUSH2 0x1B58 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BCD DUP4 PUSH2 0x1B69 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BFE JUMPI DUP2 MLOAD PUSH2 0x1BE5 DUP9 DUP3 PUSH2 0x1B88 JUMP JUMPDEST SWAP8 POP PUSH2 0x1BF0 DUP4 PUSH2 0x1BA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1BD1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1C20 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1B2F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 DUP10 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1C46 DUP2 DUP9 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C55 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x1C62 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1C6F PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1AAC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1C81 DUP2 DUP5 PUSH2 0x1BAD JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CB3 DUP2 PUSH2 0x1A6B JUMP JUMPDEST DUP2 EQ PUSH2 0x1CBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CD0 DUP2 PUSH2 0x1CAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CDF DUP2 PUSH2 0x1AA2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CFC DUP2 PUSH2 0x1CD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1D21 JUMPI PUSH2 0x1D20 PUSH2 0x18DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D2F DUP11 DUP3 DUP12 ADD PUSH2 0x192D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1D40 DUP11 DUP3 DUP12 ADD PUSH2 0x192D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1D51 DUP11 DUP3 DUP12 ADD PUSH2 0x1963 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1D62 DUP11 DUP3 DUP12 ADD PUSH2 0x1963 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1D73 DUP11 DUP3 DUP12 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1D84 DUP11 DUP3 DUP12 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1D95 DUP11 DUP3 DUP12 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DBB JUMPI PUSH2 0x1DBA PUSH2 0x18DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DC9 DUP6 DUP3 DUP7 ADD PUSH2 0x192D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DDA DUP6 DUP3 DUP7 ADD PUSH2 0x192D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E2B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E3E JUMPI PUSH2 0x1E3D PUSH2 0x1DE4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7A PUSH1 0x14 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E85 DUP3 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EA9 DUP2 PUSH2 0x1E6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1EF4 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x1F01 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1F0E PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1F1B PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x1F28 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x1F35 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x19EE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1F62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B3E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F7E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1F8B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x1F98 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FDA DUP3 PUSH2 0x1942 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE5 DUP4 PUSH2 0x1942 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FFD JUMPI PUSH2 0x1FFC PUSH2 0x1FA0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2018 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x2025 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x2032 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x203F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x204C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1B3E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x206B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x2078 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A78 JUMP JUMPDEST PUSH2 0x2085 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x2092 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1AAC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE PUSH30 0x16CFB7397AAAEFAA06327D67CAA16DB992C6ABC253DCFBC06A10F8155C2B PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"345:996:20:-:0;;;404:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1615:52:5;;;;;;;;;;;;;;;;;1654:4;3393:440:15;;;;;;;;;;;;;;;;;514:12:20;1645:116:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1720:5;1712;:13;;;;;;:::i;:::-;;1746:7;1736;:17;;;;;;:::i;:::-;;1645:116;;1335:1:0;1311:26;;:12;:26;;;1307:97;;1389:1;1361:31;;;;;;;;;;;:::i;:::-;;;;;;;;1307:97;1414:32;1433:12;1414:18;;;:32;;:::i;:::-;1262:192;3467:45:15;3498:13;3467:4;:30;;;;:45;;;;:::i;:::-;3459:53;;;;;;3534:51;3568:16;3534:7;:33;;;;:51;;;;:::i;:::-;3523:62;;;;;;3626:4;3610:22;;;;;;3596:36;;;;;;3676:7;3660:25;;;;;;3643:42;;;;;;3715:13;3698:30;;;;;;3764:23;:21;;;:23;;:::i;:::-;3739:48;;;;;;3820:4;3798:27;;;;;;;;;;3393:440;;1615:52:5;580:47:20::3;586:12;616:10;:8;;;:10;;:::i;:::-;610:2;:16;;;;:::i;:::-;600:7;:26;;;;:::i;:::-;580:5;;;:47;;:::i;:::-;404:231:::0;;345:996;;3006:191:0;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;2974:347:11:-;3070:11;3120:2;3104:5;3098:19;:24;3094:220;;;3146:20;3160:5;3146:13;;;:20;;:::i;:::-;3139:27;;;;3094:220;3240:5;3199:32;3225:5;3199:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1431:66;3284:17;;3260:42;;2974:347;;;;;:::o;4200:181:15:-;4255:7;2116:95;4314:11;;4327:14;;4343:13;4366:4;4292:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4282:91;;;;;;4275:98;;4200:181;:::o;2784:84:3:-;2833:5;2858:2;2851:9;;2784:84;:::o;7678:213::-;7768:1;7749:21;;:7;:21;;;7745:93;;7823:1;7794:32;;;;;;;;;;;:::i;:::-;;;;;;;;7745:93;7848:35;7864:1;7868:7;7877:5;7848:7;;;:35;;:::i;:::-;7678:213;;:::o;1759:292:11:-;1824:11;1848:17;1874:3;1848:30;;1907:2;1893:4;:11;:16;1889:74;;;1947:3;1933:18;;;;;;;;;;;:::i;:::-;;;;;;;;1889:74;2030:4;:11;2021:4;2013:13;;;:::i;:::-;2005:22;;:36;1997:45;;1973:70;;;1759:292;;;:::o;3587:179:12:-;3655:20;3738:10;3728:20;;3587:179;;;:::o;6190:1135:3:-;6296:1;6280:18;;:4;:18;;;6276:552;;6434:5;6418:12;;:21;;;;;;;:::i;:::-;;;;;;;;6276:552;;;6472:19;6494:9;:15;6504:4;6494:15;;;;;;;;;;;;;;;;6472:37;;6542:5;6528:11;:19;6524:117;;;6600:4;6606:11;6619:5;6575:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6524:117;6796:5;6782:11;:19;6764:9;:15;6774:4;6764:15;;;;;;;;;;;;;;;:37;;;;6457:371;6276:552;6858:1;6844:16;;:2;:16;;;6840:435;;7026:5;7010:12;;:21;;;;;;;;;;;6840:435;;;7243:5;7226:9;:13;7236:2;7226:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6840:435;7307:2;7292:25;;7301:4;7292:25;;;7311:5;7292:25;;;;;;:::i;:::-;;;;;;;;6190:1135;;;:::o;88:117:22:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;6937:180::-;6985:77;6982:1;6975:88;7082:4;7079:1;7072:15;7106:4;7103:1;7096:15;7123:102;7165:8;7212:5;7209:1;7205:13;7184:34;;7123:102;;;:::o;7231:848::-;7292:5;7299:4;7323:6;7314:15;;7347:5;7338:14;;7361:712;7382:1;7372:8;7369:15;7361:712;;;7477:4;7472:3;7468:14;7462:4;7459:24;7456:50;;;7486:18;;:::i;:::-;7456:50;7536:1;7526:8;7522:16;7519:451;;;7951:4;7944:5;7940:16;7931:25;;7519:451;8001:4;7995;7991:15;7983:23;;8031:32;8054:8;8031:32;:::i;:::-;8019:44;;7361:712;;;7231:848;;;;;;;:::o;8085:1073::-;8139:5;8330:8;8320:40;;8351:1;8342:10;;8353:5;;8320:40;8379:4;8369:36;;8396:1;8387:10;;8398:5;;8369:36;8465:4;8513:1;8508:27;;;;8549:1;8544:191;;;;8458:277;;8508:27;8526:1;8517:10;;8528:5;;;8544:191;8589:3;8579:8;8576:17;8573:43;;;8596:18;;:::i;:::-;8573:43;8645:8;8642:1;8638:16;8629:25;;8680:3;8673:5;8670:14;8667:40;;;8687:18;;:::i;:::-;8667:40;8720:5;;;8458:277;;8844:2;8834:8;8831:16;8825:3;8819:4;8816:13;8812:36;8794:2;8784:8;8781:16;8776:2;8770:4;8767:12;8763:35;8747:111;8744:246;;;8900:8;8894:4;8890:19;8881:28;;8935:3;8928:5;8925:14;8922:40;;;8942:18;;:::i;:::-;8922:40;8975:5;;8744:246;9015:42;9053:3;9043:8;9037:4;9034:1;9015:42;:::i;:::-;9000:57;;;;9089:4;9084:3;9080:14;9073:5;9070:25;9067:51;;;9098:18;;:::i;:::-;9067:51;9147:4;9140:5;9136:16;9127:25;;8085:1073;;;;;;:::o;9164:86::-;9199:7;9239:4;9232:5;9228:16;9217:27;;9164:86;;;:::o;9256:281::-;9314:5;9338:23;9356:4;9338:23;:::i;:::-;9330:31;;9382:25;9398:8;9382:25;:::i;:::-;9370:37;;9426:104;9463:66;9453:8;9447:4;9426:104;:::i;:::-;9417:113;;9256:281;;;;:::o;9543:410::-;9583:7;9606:20;9624:1;9606:20;:::i;:::-;9601:25;;9640:20;9658:1;9640:20;:::i;:::-;9635:25;;9695:1;9692;9688:9;9717:30;9735:11;9717:30;:::i;:::-;9706:41;;9896:1;9887:7;9883:15;9880:1;9877:22;9857:1;9850:9;9830:83;9807:139;;9926:18;;:::i;:::-;9807:139;9591:362;9543:410;;;;:::o;9959:77::-;9996:7;10025:5;10014:16;;9959:77;;;:::o;10042:118::-;10129:24;10147:5;10129:24;:::i;:::-;10124:3;10117:37;10042:118;;:::o;10166:::-;10253:24;10271:5;10253:24;:::i;:::-;10248:3;10241:37;10166:118;;:::o;10290:664::-;10495:4;10533:3;10522:9;10518:19;10510:27;;10547:71;10615:1;10604:9;10600:17;10591:6;10547:71;:::i;:::-;10628:72;10696:2;10685:9;10681:18;10672:6;10628:72;:::i;:::-;10710;10778:2;10767:9;10763:18;10754:6;10710:72;:::i;:::-;10792;10860:2;10849:9;10845:18;10836:6;10792:72;:::i;:::-;10874:73;10942:3;10931:9;10927:19;10918:6;10874:73;:::i;:::-;10290:664;;;;;;;;:::o;10960:169::-;11044:11;11078:6;11073:3;11066:19;11118:4;11113:3;11109:14;11094:29;;10960:169;;;;:::o;11135:248::-;11217:1;11227:113;11241:6;11238:1;11235:13;11227:113;;;11326:1;11321:3;11317:11;11311:18;11307:1;11302:3;11298:11;11291:39;11263:2;11260:1;11256:10;11251:15;;11227:113;;;11374:1;11365:6;11360:3;11356:16;11349:27;11197:186;11135:248;;;:::o;11389:102::-;11430:6;11481:2;11477:7;11472:2;11465:5;11461:14;11457:28;11447:38;;11389:102;;;:::o;11497:377::-;11585:3;11613:39;11646:5;11613:39;:::i;:::-;11668:71;11732:6;11727:3;11668:71;:::i;:::-;11661:78;;11748:65;11806:6;11801:3;11794:4;11787:5;11783:16;11748:65;:::i;:::-;11838:29;11860:6;11838:29;:::i;:::-;11833:3;11829:39;11822:46;;11589:285;11497:377;;;;:::o;11880:313::-;11993:4;12031:2;12020:9;12016:18;12008:26;;12080:9;12074:4;12070:20;12066:1;12055:9;12051:17;12044:47;12108:78;12181:4;12172:6;12108:78;:::i;:::-;12100:86;;11880:313;;;;:::o;12199:98::-;12250:6;12284:5;12278:12;12268:22;;12199:98;;;:::o;12303:116::-;12354:4;12377:3;12369:11;;12407:4;12402:3;12398:14;12390:22;;12303:116;;;:::o;12425:154::-;12468:11;12504:29;12528:3;12522:10;12504:29;:::i;:::-;12567:5;12543:29;;12480:99;12425:154;;;:::o;12585:594::-;12669:5;12700:38;12732:5;12700:38;:::i;:::-;12763:5;12790:40;12824:5;12790:40;:::i;:::-;12778:52;;12849:35;12875:8;12849:35;:::i;:::-;12840:44;;12908:2;12900:6;12897:14;12894:278;;;12979:169;13064:66;13034:6;13030:2;13026:15;13023:1;13019:23;12979:169;:::i;:::-;12956:5;12935:227;12926:236;;12894:278;12675:504;;12585:594;;;:::o;13185:191::-;13225:3;13244:20;13262:1;13244:20;:::i;:::-;13239:25;;13278:20;13296:1;13278:20;:::i;:::-;13273:25;;13321:1;13318;13314:9;13307:16;;13342:3;13339:1;13336:10;13333:36;;;13349:18;;:::i;:::-;13333:36;13185:191;;;;:::o;13382:442::-;13531:4;13569:2;13558:9;13554:18;13546:26;;13582:71;13650:1;13639:9;13635:17;13626:6;13582:71;:::i;:::-;13663:72;13731:2;13720:9;13716:18;13707:6;13663:72;:::i;:::-;13745;13813:2;13802:9;13798:18;13789:6;13745:72;:::i;:::-;13382:442;;;;;;:::o;13830:222::-;13923:4;13961:2;13950:9;13946:18;13938:26;;13974:71;14042:1;14031:9;14027:17;14018:6;13974:71;:::i;:::-;13830:222;;;;:::o;345:996:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1055":{"entryPoint":1284,"id":1055,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3371":{"entryPoint":3703,"id":3371,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3383":{"entryPoint":3762,"id":3383,"parameterSlots":0,"returnSlots":1},"@_approve_715":{"entryPoint":2443,"id":715,"parameterSlots":3,"returnSlots":0},"@_approve_775":{"entryPoint":3982,"id":775,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3301":{"entryPoint":5002,"id":3301,"parameterSlots":0,"returnSlots":1},"@_burn_697":{"entryPoint":2461,"id":697,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3167,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_3280":{"entryPoint":2984,"id":3280,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3317":{"entryPoint":3908,"id":3317,"parameterSlots":1,"returnSlots":1},"@_mint_664":{"entryPoint":3302,"id":664,"parameterSlots":2,"returnSlots":0},"@_msgSender_1130":{"entryPoint":2435,"id":1130,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_823":{"entryPoint":2591,"id":823,"parameterSlots":3,"returnSlots":0},"@_throwError_3156":{"entryPoint":5637,"id":3156,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3432,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_554":{"entryPoint":2740,"id":554,"parameterSlots":3,"returnSlots":0},"@_update_631":{"entryPoint":4453,"id":631,"parameterSlots":3,"returnSlots":0},"@_useNonce_1190":{"entryPoint":3821,"id":1190,"parameterSlots":1,"returnSlots":1},"@allowance_451":{"entryPoint":2166,"id":451,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":1094,"id":475,"parameterSlots":2,"returnSlots":1},"@balanceOf_410":{"entryPoint":1321,"id":410,"parameterSlots":1,"returnSlots":1},"@burnTokens_7052":{"entryPoint":1129,"id":7052,"parameterSlots":2,"returnSlots":0},"@byteLength_1386":{"entryPoint":6109,"id":1386,"parameterSlots":1,"returnSlots":1},"@decimals_388":{"entryPoint":1275,"id":388,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3359":{"entryPoint":1445,"id":3359,"parameterSlots":0,"returnSlots":7},"@mint_7030":{"entryPoint":1299,"id":7030,"parameterSlots":2,"returnSlots":0},"@name_370":{"entryPoint":948,"id":370,"parameterSlots":0,"returnSlots":1},"@nonces_1045":{"entryPoint":1413,"id":1045,"parameterSlots":1,"returnSlots":1},"@nonces_1175":{"entryPoint":3630,"id":1175,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":1615,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1028":{"entryPoint":1838,"id":1028,"parameterSlots":7,"returnSlots":0},"@recover_3107":{"entryPoint":3934,"id":3107,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1393,"id":98,"parameterSlots":0,"returnSlots":0},"@rewardTokens_7065":{"entryPoint":1431,"id":7065,"parameterSlots":2,"returnSlots":0},"@symbol_379":{"entryPoint":1657,"id":379,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1453":{"entryPoint":5152,"id":1453,"parameterSlots":2,"returnSlots":1},"@toString_1354":{"entryPoint":5993,"id":1354,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3457":{"entryPoint":5328,"id":3457,"parameterSlots":2,"returnSlots":1},"@totalSupply_397":{"entryPoint":1218,"id":397,"parameterSlots":0,"returnSlots":1},"@transferFrom_507":{"entryPoint":1228,"id":507,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2301,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_434":{"entryPoint":1803,"id":434,"parameterSlots":2,"returnSlots":1},"@tryRecover_3071":{"entryPoint":5393,"id":3071,"parameterSlots":4,"returnSlots":3},"abi_decode_t_address":{"entryPoint":6445,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7405,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":7361,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7588,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6680,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":7426,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6520,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":7048,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6974,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7085,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6596,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":6959,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6828,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6276,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack":{"entryPoint":7789,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":7033,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6638,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6776,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7311,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":8000,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8041,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6611,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7179,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":6843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7903,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":8195,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":8278,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7824,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6653,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":6791,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7017,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6989,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6189,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7072,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7000,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6200,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8143,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6404,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6584,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":6915,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6818,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6372,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6466,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6763,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6217,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7699,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8096,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":8347,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7652,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7856,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6367,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6259,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5":{"entryPoint":7748,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6422,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7382,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6476,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":7338,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:16356:22","nodeType":"YulBlock","src":"0:16356:22","statements":[{"body":{"nativeSrc":"66:40:22","nodeType":"YulBlock","src":"66:40:22","statements":[{"nativeSrc":"77:22:22","nodeType":"YulAssignment","src":"77:22:22","value":{"arguments":[{"name":"value","nativeSrc":"93:5:22","nodeType":"YulIdentifier","src":"93:5:22"}],"functionName":{"name":"mload","nativeSrc":"87:5:22","nodeType":"YulIdentifier","src":"87:5:22"},"nativeSrc":"87:12:22","nodeType":"YulFunctionCall","src":"87:12:22"},"variableNames":[{"name":"length","nativeSrc":"77:6:22","nodeType":"YulIdentifier","src":"77:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:22","nodeType":"YulTypedName","src":"49:5:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:22","nodeType":"YulTypedName","src":"59:6:22","type":""}],"src":"7:99:22"},{"body":{"nativeSrc":"208:73:22","nodeType":"YulBlock","src":"208:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:22","nodeType":"YulIdentifier","src":"225:3:22"},{"name":"length","nativeSrc":"230:6:22","nodeType":"YulIdentifier","src":"230:6:22"}],"functionName":{"name":"mstore","nativeSrc":"218:6:22","nodeType":"YulIdentifier","src":"218:6:22"},"nativeSrc":"218:19:22","nodeType":"YulFunctionCall","src":"218:19:22"},"nativeSrc":"218:19:22","nodeType":"YulExpressionStatement","src":"218:19:22"},{"nativeSrc":"246:29:22","nodeType":"YulAssignment","src":"246:29:22","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:22","nodeType":"YulIdentifier","src":"265:3:22"},{"kind":"number","nativeSrc":"270:4:22","nodeType":"YulLiteral","src":"270:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:22","nodeType":"YulIdentifier","src":"261:3:22"},"nativeSrc":"261:14:22","nodeType":"YulFunctionCall","src":"261:14:22"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:22","nodeType":"YulIdentifier","src":"246:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:22","nodeType":"YulTypedName","src":"180:3:22","type":""},{"name":"length","nativeSrc":"185:6:22","nodeType":"YulTypedName","src":"185:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:22","nodeType":"YulTypedName","src":"196:11:22","type":""}],"src":"112:169:22"},{"body":{"nativeSrc":"349:186:22","nodeType":"YulBlock","src":"349:186:22","statements":[{"nativeSrc":"360:10:22","nodeType":"YulVariableDeclaration","src":"360:10:22","value":{"kind":"number","nativeSrc":"369:1:22","nodeType":"YulLiteral","src":"369:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:22","nodeType":"YulTypedName","src":"364:1:22","type":""}]},{"body":{"nativeSrc":"429:63:22","nodeType":"YulBlock","src":"429:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:22","nodeType":"YulIdentifier","src":"454:3:22"},{"name":"i","nativeSrc":"459:1:22","nodeType":"YulIdentifier","src":"459:1:22"}],"functionName":{"name":"add","nativeSrc":"450:3:22","nodeType":"YulIdentifier","src":"450:3:22"},"nativeSrc":"450:11:22","nodeType":"YulFunctionCall","src":"450:11:22"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:22","nodeType":"YulIdentifier","src":"473:3:22"},{"name":"i","nativeSrc":"478:1:22","nodeType":"YulIdentifier","src":"478:1:22"}],"functionName":{"name":"add","nativeSrc":"469:3:22","nodeType":"YulIdentifier","src":"469:3:22"},"nativeSrc":"469:11:22","nodeType":"YulFunctionCall","src":"469:11:22"}],"functionName":{"name":"mload","nativeSrc":"463:5:22","nodeType":"YulIdentifier","src":"463:5:22"},"nativeSrc":"463:18:22","nodeType":"YulFunctionCall","src":"463:18:22"}],"functionName":{"name":"mstore","nativeSrc":"443:6:22","nodeType":"YulIdentifier","src":"443:6:22"},"nativeSrc":"443:39:22","nodeType":"YulFunctionCall","src":"443:39:22"},"nativeSrc":"443:39:22","nodeType":"YulExpressionStatement","src":"443:39:22"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:22","nodeType":"YulIdentifier","src":"390:1:22"},{"name":"length","nativeSrc":"393:6:22","nodeType":"YulIdentifier","src":"393:6:22"}],"functionName":{"name":"lt","nativeSrc":"387:2:22","nodeType":"YulIdentifier","src":"387:2:22"},"nativeSrc":"387:13:22","nodeType":"YulFunctionCall","src":"387:13:22"},"nativeSrc":"379:113:22","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:22","nodeType":"YulBlock","src":"401:19:22","statements":[{"nativeSrc":"403:15:22","nodeType":"YulAssignment","src":"403:15:22","value":{"arguments":[{"name":"i","nativeSrc":"412:1:22","nodeType":"YulIdentifier","src":"412:1:22"},{"kind":"number","nativeSrc":"415:2:22","nodeType":"YulLiteral","src":"415:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:22","nodeType":"YulIdentifier","src":"408:3:22"},"nativeSrc":"408:10:22","nodeType":"YulFunctionCall","src":"408:10:22"},"variableNames":[{"name":"i","nativeSrc":"403:1:22","nodeType":"YulIdentifier","src":"403:1:22"}]}]},"pre":{"nativeSrc":"383:3:22","nodeType":"YulBlock","src":"383:3:22","statements":[]},"src":"379:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:22","nodeType":"YulIdentifier","src":"512:3:22"},{"name":"length","nativeSrc":"517:6:22","nodeType":"YulIdentifier","src":"517:6:22"}],"functionName":{"name":"add","nativeSrc":"508:3:22","nodeType":"YulIdentifier","src":"508:3:22"},"nativeSrc":"508:16:22","nodeType":"YulFunctionCall","src":"508:16:22"},{"kind":"number","nativeSrc":"526:1:22","nodeType":"YulLiteral","src":"526:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:22","nodeType":"YulIdentifier","src":"501:6:22"},"nativeSrc":"501:27:22","nodeType":"YulFunctionCall","src":"501:27:22"},"nativeSrc":"501:27:22","nodeType":"YulExpressionStatement","src":"501:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:22","nodeType":"YulTypedName","src":"331:3:22","type":""},{"name":"dst","nativeSrc":"336:3:22","nodeType":"YulTypedName","src":"336:3:22","type":""},{"name":"length","nativeSrc":"341:6:22","nodeType":"YulTypedName","src":"341:6:22","type":""}],"src":"287:248:22"},{"body":{"nativeSrc":"589:54:22","nodeType":"YulBlock","src":"589:54:22","statements":[{"nativeSrc":"599:38:22","nodeType":"YulAssignment","src":"599:38:22","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:22","nodeType":"YulIdentifier","src":"617:5:22"},{"kind":"number","nativeSrc":"624:2:22","nodeType":"YulLiteral","src":"624:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:22","nodeType":"YulIdentifier","src":"613:3:22"},"nativeSrc":"613:14:22","nodeType":"YulFunctionCall","src":"613:14:22"},{"arguments":[{"kind":"number","nativeSrc":"633:2:22","nodeType":"YulLiteral","src":"633:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:22","nodeType":"YulIdentifier","src":"629:3:22"},"nativeSrc":"629:7:22","nodeType":"YulFunctionCall","src":"629:7:22"}],"functionName":{"name":"and","nativeSrc":"609:3:22","nodeType":"YulIdentifier","src":"609:3:22"},"nativeSrc":"609:28:22","nodeType":"YulFunctionCall","src":"609:28:22"},"variableNames":[{"name":"result","nativeSrc":"599:6:22","nodeType":"YulIdentifier","src":"599:6:22"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:22","nodeType":"YulTypedName","src":"572:5:22","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:22","nodeType":"YulTypedName","src":"582:6:22","type":""}],"src":"541:102:22"},{"body":{"nativeSrc":"741:285:22","nodeType":"YulBlock","src":"741:285:22","statements":[{"nativeSrc":"751:53:22","nodeType":"YulVariableDeclaration","src":"751:53:22","value":{"arguments":[{"name":"value","nativeSrc":"798:5:22","nodeType":"YulIdentifier","src":"798:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:22","nodeType":"YulIdentifier","src":"765:32:22"},"nativeSrc":"765:39:22","nodeType":"YulFunctionCall","src":"765:39:22"},"variables":[{"name":"length","nativeSrc":"755:6:22","nodeType":"YulTypedName","src":"755:6:22","type":""}]},{"nativeSrc":"813:78:22","nodeType":"YulAssignment","src":"813:78:22","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:22","nodeType":"YulIdentifier","src":"879:3:22"},{"name":"length","nativeSrc":"884:6:22","nodeType":"YulIdentifier","src":"884:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:22","nodeType":"YulIdentifier","src":"820:58:22"},"nativeSrc":"820:71:22","nodeType":"YulFunctionCall","src":"820:71:22"},"variableNames":[{"name":"pos","nativeSrc":"813:3:22","nodeType":"YulIdentifier","src":"813:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:22","nodeType":"YulIdentifier","src":"939:5:22"},{"kind":"number","nativeSrc":"946:4:22","nodeType":"YulLiteral","src":"946:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:22","nodeType":"YulIdentifier","src":"935:3:22"},"nativeSrc":"935:16:22","nodeType":"YulFunctionCall","src":"935:16:22"},{"name":"pos","nativeSrc":"953:3:22","nodeType":"YulIdentifier","src":"953:3:22"},{"name":"length","nativeSrc":"958:6:22","nodeType":"YulIdentifier","src":"958:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:22","nodeType":"YulIdentifier","src":"900:34:22"},"nativeSrc":"900:65:22","nodeType":"YulFunctionCall","src":"900:65:22"},"nativeSrc":"900:65:22","nodeType":"YulExpressionStatement","src":"900:65:22"},{"nativeSrc":"974:46:22","nodeType":"YulAssignment","src":"974:46:22","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:22","nodeType":"YulIdentifier","src":"985:3:22"},{"arguments":[{"name":"length","nativeSrc":"1012:6:22","nodeType":"YulIdentifier","src":"1012:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:22","nodeType":"YulIdentifier","src":"990:21:22"},"nativeSrc":"990:29:22","nodeType":"YulFunctionCall","src":"990:29:22"}],"functionName":{"name":"add","nativeSrc":"981:3:22","nodeType":"YulIdentifier","src":"981:3:22"},"nativeSrc":"981:39:22","nodeType":"YulFunctionCall","src":"981:39:22"},"variableNames":[{"name":"end","nativeSrc":"974:3:22","nodeType":"YulIdentifier","src":"974:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:22","nodeType":"YulTypedName","src":"722:5:22","type":""},{"name":"pos","nativeSrc":"729:3:22","nodeType":"YulTypedName","src":"729:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:22","nodeType":"YulTypedName","src":"737:3:22","type":""}],"src":"649:377:22"},{"body":{"nativeSrc":"1150:195:22","nodeType":"YulBlock","src":"1150:195:22","statements":[{"nativeSrc":"1160:26:22","nodeType":"YulAssignment","src":"1160:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:22","nodeType":"YulIdentifier","src":"1172:9:22"},{"kind":"number","nativeSrc":"1183:2:22","nodeType":"YulLiteral","src":"1183:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:22","nodeType":"YulIdentifier","src":"1168:3:22"},"nativeSrc":"1168:18:22","nodeType":"YulFunctionCall","src":"1168:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:22","nodeType":"YulIdentifier","src":"1160:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:22","nodeType":"YulIdentifier","src":"1207:9:22"},{"kind":"number","nativeSrc":"1218:1:22","nodeType":"YulLiteral","src":"1218:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:22","nodeType":"YulIdentifier","src":"1203:3:22"},"nativeSrc":"1203:17:22","nodeType":"YulFunctionCall","src":"1203:17:22"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:22","nodeType":"YulIdentifier","src":"1226:4:22"},{"name":"headStart","nativeSrc":"1232:9:22","nodeType":"YulIdentifier","src":"1232:9:22"}],"functionName":{"name":"sub","nativeSrc":"1222:3:22","nodeType":"YulIdentifier","src":"1222:3:22"},"nativeSrc":"1222:20:22","nodeType":"YulFunctionCall","src":"1222:20:22"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:22","nodeType":"YulIdentifier","src":"1196:6:22"},"nativeSrc":"1196:47:22","nodeType":"YulFunctionCall","src":"1196:47:22"},"nativeSrc":"1196:47:22","nodeType":"YulExpressionStatement","src":"1196:47:22"},{"nativeSrc":"1252:86:22","nodeType":"YulAssignment","src":"1252:86:22","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:22","nodeType":"YulIdentifier","src":"1324:6:22"},{"name":"tail","nativeSrc":"1333:4:22","nodeType":"YulIdentifier","src":"1333:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:22","nodeType":"YulIdentifier","src":"1260:63:22"},"nativeSrc":"1260:78:22","nodeType":"YulFunctionCall","src":"1260:78:22"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:22","nodeType":"YulIdentifier","src":"1252:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:22","nodeType":"YulTypedName","src":"1122:9:22","type":""},{"name":"value0","nativeSrc":"1134:6:22","nodeType":"YulTypedName","src":"1134:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:22","nodeType":"YulTypedName","src":"1145:4:22","type":""}],"src":"1032:313:22"},{"body":{"nativeSrc":"1391:35:22","nodeType":"YulBlock","src":"1391:35:22","statements":[{"nativeSrc":"1401:19:22","nodeType":"YulAssignment","src":"1401:19:22","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:22","nodeType":"YulLiteral","src":"1417:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:22","nodeType":"YulIdentifier","src":"1411:5:22"},"nativeSrc":"1411:9:22","nodeType":"YulFunctionCall","src":"1411:9:22"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:22","nodeType":"YulIdentifier","src":"1401:6:22"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:22","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:22","nodeType":"YulTypedName","src":"1384:6:22","type":""}],"src":"1351:75:22"},{"body":{"nativeSrc":"1521:28:22","nodeType":"YulBlock","src":"1521:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:22","nodeType":"YulLiteral","src":"1538:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:22","nodeType":"YulLiteral","src":"1541:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:22","nodeType":"YulIdentifier","src":"1531:6:22"},"nativeSrc":"1531:12:22","nodeType":"YulFunctionCall","src":"1531:12:22"},"nativeSrc":"1531:12:22","nodeType":"YulExpressionStatement","src":"1531:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:22","nodeType":"YulFunctionDefinition","src":"1432:117:22"},{"body":{"nativeSrc":"1644:28:22","nodeType":"YulBlock","src":"1644:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:22","nodeType":"YulLiteral","src":"1661:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:22","nodeType":"YulLiteral","src":"1664:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:22","nodeType":"YulIdentifier","src":"1654:6:22"},"nativeSrc":"1654:12:22","nodeType":"YulFunctionCall","src":"1654:12:22"},"nativeSrc":"1654:12:22","nodeType":"YulExpressionStatement","src":"1654:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:22","nodeType":"YulFunctionDefinition","src":"1555:117:22"},{"body":{"nativeSrc":"1723:81:22","nodeType":"YulBlock","src":"1723:81:22","statements":[{"nativeSrc":"1733:65:22","nodeType":"YulAssignment","src":"1733:65:22","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:22","nodeType":"YulIdentifier","src":"1748:5:22"},{"kind":"number","nativeSrc":"1755:42:22","nodeType":"YulLiteral","src":"1755:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:22","nodeType":"YulIdentifier","src":"1744:3:22"},"nativeSrc":"1744:54:22","nodeType":"YulFunctionCall","src":"1744:54:22"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:22","nodeType":"YulIdentifier","src":"1733:7:22"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:22","nodeType":"YulTypedName","src":"1705:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:22","nodeType":"YulTypedName","src":"1715:7:22","type":""}],"src":"1678:126:22"},{"body":{"nativeSrc":"1855:51:22","nodeType":"YulBlock","src":"1855:51:22","statements":[{"nativeSrc":"1865:35:22","nodeType":"YulAssignment","src":"1865:35:22","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:22","nodeType":"YulIdentifier","src":"1894:5:22"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:22","nodeType":"YulIdentifier","src":"1876:17:22"},"nativeSrc":"1876:24:22","nodeType":"YulFunctionCall","src":"1876:24:22"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:22","nodeType":"YulIdentifier","src":"1865:7:22"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:22","nodeType":"YulTypedName","src":"1837:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:22","nodeType":"YulTypedName","src":"1847:7:22","type":""}],"src":"1810:96:22"},{"body":{"nativeSrc":"1955:79:22","nodeType":"YulBlock","src":"1955:79:22","statements":[{"body":{"nativeSrc":"2012:16:22","nodeType":"YulBlock","src":"2012:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:22","nodeType":"YulLiteral","src":"2021:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:22","nodeType":"YulLiteral","src":"2024:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:22","nodeType":"YulIdentifier","src":"2014:6:22"},"nativeSrc":"2014:12:22","nodeType":"YulFunctionCall","src":"2014:12:22"},"nativeSrc":"2014:12:22","nodeType":"YulExpressionStatement","src":"2014:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:22","nodeType":"YulIdentifier","src":"1978:5:22"},{"arguments":[{"name":"value","nativeSrc":"2003:5:22","nodeType":"YulIdentifier","src":"2003:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:22","nodeType":"YulIdentifier","src":"1985:17:22"},"nativeSrc":"1985:24:22","nodeType":"YulFunctionCall","src":"1985:24:22"}],"functionName":{"name":"eq","nativeSrc":"1975:2:22","nodeType":"YulIdentifier","src":"1975:2:22"},"nativeSrc":"1975:35:22","nodeType":"YulFunctionCall","src":"1975:35:22"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:22","nodeType":"YulIdentifier","src":"1968:6:22"},"nativeSrc":"1968:43:22","nodeType":"YulFunctionCall","src":"1968:43:22"},"nativeSrc":"1965:63:22","nodeType":"YulIf","src":"1965:63:22"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:22","nodeType":"YulTypedName","src":"1948:5:22","type":""}],"src":"1912:122:22"},{"body":{"nativeSrc":"2092:87:22","nodeType":"YulBlock","src":"2092:87:22","statements":[{"nativeSrc":"2102:29:22","nodeType":"YulAssignment","src":"2102:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:22","nodeType":"YulIdentifier","src":"2124:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:22","nodeType":"YulIdentifier","src":"2111:12:22"},"nativeSrc":"2111:20:22","nodeType":"YulFunctionCall","src":"2111:20:22"},"variableNames":[{"name":"value","nativeSrc":"2102:5:22","nodeType":"YulIdentifier","src":"2102:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:22","nodeType":"YulIdentifier","src":"2167:5:22"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:22","nodeType":"YulIdentifier","src":"2140:26:22"},"nativeSrc":"2140:33:22","nodeType":"YulFunctionCall","src":"2140:33:22"},"nativeSrc":"2140:33:22","nodeType":"YulExpressionStatement","src":"2140:33:22"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:22","nodeType":"YulTypedName","src":"2070:6:22","type":""},{"name":"end","nativeSrc":"2078:3:22","nodeType":"YulTypedName","src":"2078:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:22","nodeType":"YulTypedName","src":"2086:5:22","type":""}],"src":"2040:139:22"},{"body":{"nativeSrc":"2230:32:22","nodeType":"YulBlock","src":"2230:32:22","statements":[{"nativeSrc":"2240:16:22","nodeType":"YulAssignment","src":"2240:16:22","value":{"name":"value","nativeSrc":"2251:5:22","nodeType":"YulIdentifier","src":"2251:5:22"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:22","nodeType":"YulIdentifier","src":"2240:7:22"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:22","nodeType":"YulTypedName","src":"2212:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:22","nodeType":"YulTypedName","src":"2222:7:22","type":""}],"src":"2185:77:22"},{"body":{"nativeSrc":"2311:79:22","nodeType":"YulBlock","src":"2311:79:22","statements":[{"body":{"nativeSrc":"2368:16:22","nodeType":"YulBlock","src":"2368:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:22","nodeType":"YulLiteral","src":"2377:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:22","nodeType":"YulLiteral","src":"2380:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:22","nodeType":"YulIdentifier","src":"2370:6:22"},"nativeSrc":"2370:12:22","nodeType":"YulFunctionCall","src":"2370:12:22"},"nativeSrc":"2370:12:22","nodeType":"YulExpressionStatement","src":"2370:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:22","nodeType":"YulIdentifier","src":"2334:5:22"},{"arguments":[{"name":"value","nativeSrc":"2359:5:22","nodeType":"YulIdentifier","src":"2359:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:22","nodeType":"YulIdentifier","src":"2341:17:22"},"nativeSrc":"2341:24:22","nodeType":"YulFunctionCall","src":"2341:24:22"}],"functionName":{"name":"eq","nativeSrc":"2331:2:22","nodeType":"YulIdentifier","src":"2331:2:22"},"nativeSrc":"2331:35:22","nodeType":"YulFunctionCall","src":"2331:35:22"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:22","nodeType":"YulIdentifier","src":"2324:6:22"},"nativeSrc":"2324:43:22","nodeType":"YulFunctionCall","src":"2324:43:22"},"nativeSrc":"2321:63:22","nodeType":"YulIf","src":"2321:63:22"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:22","nodeType":"YulTypedName","src":"2304:5:22","type":""}],"src":"2268:122:22"},{"body":{"nativeSrc":"2448:87:22","nodeType":"YulBlock","src":"2448:87:22","statements":[{"nativeSrc":"2458:29:22","nodeType":"YulAssignment","src":"2458:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:22","nodeType":"YulIdentifier","src":"2480:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:22","nodeType":"YulIdentifier","src":"2467:12:22"},"nativeSrc":"2467:20:22","nodeType":"YulFunctionCall","src":"2467:20:22"},"variableNames":[{"name":"value","nativeSrc":"2458:5:22","nodeType":"YulIdentifier","src":"2458:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:22","nodeType":"YulIdentifier","src":"2523:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:22","nodeType":"YulIdentifier","src":"2496:26:22"},"nativeSrc":"2496:33:22","nodeType":"YulFunctionCall","src":"2496:33:22"},"nativeSrc":"2496:33:22","nodeType":"YulExpressionStatement","src":"2496:33:22"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:22","nodeType":"YulTypedName","src":"2426:6:22","type":""},{"name":"end","nativeSrc":"2434:3:22","nodeType":"YulTypedName","src":"2434:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:22","nodeType":"YulTypedName","src":"2442:5:22","type":""}],"src":"2396:139:22"},{"body":{"nativeSrc":"2624:391:22","nodeType":"YulBlock","src":"2624:391:22","statements":[{"body":{"nativeSrc":"2670:83:22","nodeType":"YulBlock","src":"2670:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:22","nodeType":"YulIdentifier","src":"2672:77:22"},"nativeSrc":"2672:79:22","nodeType":"YulFunctionCall","src":"2672:79:22"},"nativeSrc":"2672:79:22","nodeType":"YulExpressionStatement","src":"2672:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:22","nodeType":"YulIdentifier","src":"2645:7:22"},{"name":"headStart","nativeSrc":"2654:9:22","nodeType":"YulIdentifier","src":"2654:9:22"}],"functionName":{"name":"sub","nativeSrc":"2641:3:22","nodeType":"YulIdentifier","src":"2641:3:22"},"nativeSrc":"2641:23:22","nodeType":"YulFunctionCall","src":"2641:23:22"},{"kind":"number","nativeSrc":"2666:2:22","nodeType":"YulLiteral","src":"2666:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:22","nodeType":"YulIdentifier","src":"2637:3:22"},"nativeSrc":"2637:32:22","nodeType":"YulFunctionCall","src":"2637:32:22"},"nativeSrc":"2634:119:22","nodeType":"YulIf","src":"2634:119:22"},{"nativeSrc":"2763:117:22","nodeType":"YulBlock","src":"2763:117:22","statements":[{"nativeSrc":"2778:15:22","nodeType":"YulVariableDeclaration","src":"2778:15:22","value":{"kind":"number","nativeSrc":"2792:1:22","nodeType":"YulLiteral","src":"2792:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:22","nodeType":"YulTypedName","src":"2782:6:22","type":""}]},{"nativeSrc":"2807:63:22","nodeType":"YulAssignment","src":"2807:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:22","nodeType":"YulIdentifier","src":"2842:9:22"},{"name":"offset","nativeSrc":"2853:6:22","nodeType":"YulIdentifier","src":"2853:6:22"}],"functionName":{"name":"add","nativeSrc":"2838:3:22","nodeType":"YulIdentifier","src":"2838:3:22"},"nativeSrc":"2838:22:22","nodeType":"YulFunctionCall","src":"2838:22:22"},{"name":"dataEnd","nativeSrc":"2862:7:22","nodeType":"YulIdentifier","src":"2862:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:22","nodeType":"YulIdentifier","src":"2817:20:22"},"nativeSrc":"2817:53:22","nodeType":"YulFunctionCall","src":"2817:53:22"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:22","nodeType":"YulIdentifier","src":"2807:6:22"}]}]},{"nativeSrc":"2890:118:22","nodeType":"YulBlock","src":"2890:118:22","statements":[{"nativeSrc":"2905:16:22","nodeType":"YulVariableDeclaration","src":"2905:16:22","value":{"kind":"number","nativeSrc":"2919:2:22","nodeType":"YulLiteral","src":"2919:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:22","nodeType":"YulTypedName","src":"2909:6:22","type":""}]},{"nativeSrc":"2935:63:22","nodeType":"YulAssignment","src":"2935:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:22","nodeType":"YulIdentifier","src":"2970:9:22"},{"name":"offset","nativeSrc":"2981:6:22","nodeType":"YulIdentifier","src":"2981:6:22"}],"functionName":{"name":"add","nativeSrc":"2966:3:22","nodeType":"YulIdentifier","src":"2966:3:22"},"nativeSrc":"2966:22:22","nodeType":"YulFunctionCall","src":"2966:22:22"},{"name":"dataEnd","nativeSrc":"2990:7:22","nodeType":"YulIdentifier","src":"2990:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:22","nodeType":"YulIdentifier","src":"2945:20:22"},"nativeSrc":"2945:53:22","nodeType":"YulFunctionCall","src":"2945:53:22"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:22","nodeType":"YulIdentifier","src":"2935:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:22","nodeType":"YulTypedName","src":"2586:9:22","type":""},{"name":"dataEnd","nativeSrc":"2597:7:22","nodeType":"YulTypedName","src":"2597:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:22","nodeType":"YulTypedName","src":"2609:6:22","type":""},{"name":"value1","nativeSrc":"2617:6:22","nodeType":"YulTypedName","src":"2617:6:22","type":""}],"src":"2541:474:22"},{"body":{"nativeSrc":"3063:48:22","nodeType":"YulBlock","src":"3063:48:22","statements":[{"nativeSrc":"3073:32:22","nodeType":"YulAssignment","src":"3073:32:22","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:22","nodeType":"YulIdentifier","src":"3098:5:22"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:22","nodeType":"YulIdentifier","src":"3091:6:22"},"nativeSrc":"3091:13:22","nodeType":"YulFunctionCall","src":"3091:13:22"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:22","nodeType":"YulIdentifier","src":"3084:6:22"},"nativeSrc":"3084:21:22","nodeType":"YulFunctionCall","src":"3084:21:22"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:22","nodeType":"YulIdentifier","src":"3073:7:22"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:22","nodeType":"YulTypedName","src":"3045:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:22","nodeType":"YulTypedName","src":"3055:7:22","type":""}],"src":"3021:90:22"},{"body":{"nativeSrc":"3176:50:22","nodeType":"YulBlock","src":"3176:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:22","nodeType":"YulIdentifier","src":"3193:3:22"},{"arguments":[{"name":"value","nativeSrc":"3213:5:22","nodeType":"YulIdentifier","src":"3213:5:22"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:22","nodeType":"YulIdentifier","src":"3198:14:22"},"nativeSrc":"3198:21:22","nodeType":"YulFunctionCall","src":"3198:21:22"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:22","nodeType":"YulIdentifier","src":"3186:6:22"},"nativeSrc":"3186:34:22","nodeType":"YulFunctionCall","src":"3186:34:22"},"nativeSrc":"3186:34:22","nodeType":"YulExpressionStatement","src":"3186:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:22","nodeType":"YulTypedName","src":"3164:5:22","type":""},{"name":"pos","nativeSrc":"3171:3:22","nodeType":"YulTypedName","src":"3171:3:22","type":""}],"src":"3117:109:22"},{"body":{"nativeSrc":"3324:118:22","nodeType":"YulBlock","src":"3324:118:22","statements":[{"nativeSrc":"3334:26:22","nodeType":"YulAssignment","src":"3334:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:22","nodeType":"YulIdentifier","src":"3346:9:22"},{"kind":"number","nativeSrc":"3357:2:22","nodeType":"YulLiteral","src":"3357:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:22","nodeType":"YulIdentifier","src":"3342:3:22"},"nativeSrc":"3342:18:22","nodeType":"YulFunctionCall","src":"3342:18:22"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:22","nodeType":"YulIdentifier","src":"3334:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:22","nodeType":"YulIdentifier","src":"3408:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:22","nodeType":"YulIdentifier","src":"3421:9:22"},{"kind":"number","nativeSrc":"3432:1:22","nodeType":"YulLiteral","src":"3432:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:22","nodeType":"YulIdentifier","src":"3417:3:22"},"nativeSrc":"3417:17:22","nodeType":"YulFunctionCall","src":"3417:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:22","nodeType":"YulIdentifier","src":"3370:37:22"},"nativeSrc":"3370:65:22","nodeType":"YulFunctionCall","src":"3370:65:22"},"nativeSrc":"3370:65:22","nodeType":"YulExpressionStatement","src":"3370:65:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:22","nodeType":"YulTypedName","src":"3296:9:22","type":""},{"name":"value0","nativeSrc":"3308:6:22","nodeType":"YulTypedName","src":"3308:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:22","nodeType":"YulTypedName","src":"3319:4:22","type":""}],"src":"3232:210:22"},{"body":{"nativeSrc":"3513:53:22","nodeType":"YulBlock","src":"3513:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:22","nodeType":"YulIdentifier","src":"3530:3:22"},{"arguments":[{"name":"value","nativeSrc":"3553:5:22","nodeType":"YulIdentifier","src":"3553:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3535:17:22","nodeType":"YulIdentifier","src":"3535:17:22"},"nativeSrc":"3535:24:22","nodeType":"YulFunctionCall","src":"3535:24:22"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:22","nodeType":"YulIdentifier","src":"3523:6:22"},"nativeSrc":"3523:37:22","nodeType":"YulFunctionCall","src":"3523:37:22"},"nativeSrc":"3523:37:22","nodeType":"YulExpressionStatement","src":"3523:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3448:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3501:5:22","nodeType":"YulTypedName","src":"3501:5:22","type":""},{"name":"pos","nativeSrc":"3508:3:22","nodeType":"YulTypedName","src":"3508:3:22","type":""}],"src":"3448:118:22"},{"body":{"nativeSrc":"3670:124:22","nodeType":"YulBlock","src":"3670:124:22","statements":[{"nativeSrc":"3680:26:22","nodeType":"YulAssignment","src":"3680:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3692:9:22","nodeType":"YulIdentifier","src":"3692:9:22"},{"kind":"number","nativeSrc":"3703:2:22","nodeType":"YulLiteral","src":"3703:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3688:3:22","nodeType":"YulIdentifier","src":"3688:3:22"},"nativeSrc":"3688:18:22","nodeType":"YulFunctionCall","src":"3688:18:22"},"variableNames":[{"name":"tail","nativeSrc":"3680:4:22","nodeType":"YulIdentifier","src":"3680:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3760:6:22","nodeType":"YulIdentifier","src":"3760:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"3773:9:22","nodeType":"YulIdentifier","src":"3773:9:22"},{"kind":"number","nativeSrc":"3784:1:22","nodeType":"YulLiteral","src":"3784:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3769:3:22","nodeType":"YulIdentifier","src":"3769:3:22"},"nativeSrc":"3769:17:22","nodeType":"YulFunctionCall","src":"3769:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3716:43:22","nodeType":"YulIdentifier","src":"3716:43:22"},"nativeSrc":"3716:71:22","nodeType":"YulFunctionCall","src":"3716:71:22"},"nativeSrc":"3716:71:22","nodeType":"YulExpressionStatement","src":"3716:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3572:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3642:9:22","nodeType":"YulTypedName","src":"3642:9:22","type":""},{"name":"value0","nativeSrc":"3654:6:22","nodeType":"YulTypedName","src":"3654:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3665:4:22","nodeType":"YulTypedName","src":"3665:4:22","type":""}],"src":"3572:222:22"},{"body":{"nativeSrc":"3900:519:22","nodeType":"YulBlock","src":"3900:519:22","statements":[{"body":{"nativeSrc":"3946:83:22","nodeType":"YulBlock","src":"3946:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3948:77:22","nodeType":"YulIdentifier","src":"3948:77:22"},"nativeSrc":"3948:79:22","nodeType":"YulFunctionCall","src":"3948:79:22"},"nativeSrc":"3948:79:22","nodeType":"YulExpressionStatement","src":"3948:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3921:7:22","nodeType":"YulIdentifier","src":"3921:7:22"},{"name":"headStart","nativeSrc":"3930:9:22","nodeType":"YulIdentifier","src":"3930:9:22"}],"functionName":{"name":"sub","nativeSrc":"3917:3:22","nodeType":"YulIdentifier","src":"3917:3:22"},"nativeSrc":"3917:23:22","nodeType":"YulFunctionCall","src":"3917:23:22"},{"kind":"number","nativeSrc":"3942:2:22","nodeType":"YulLiteral","src":"3942:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3913:3:22","nodeType":"YulIdentifier","src":"3913:3:22"},"nativeSrc":"3913:32:22","nodeType":"YulFunctionCall","src":"3913:32:22"},"nativeSrc":"3910:119:22","nodeType":"YulIf","src":"3910:119:22"},{"nativeSrc":"4039:117:22","nodeType":"YulBlock","src":"4039:117:22","statements":[{"nativeSrc":"4054:15:22","nodeType":"YulVariableDeclaration","src":"4054:15:22","value":{"kind":"number","nativeSrc":"4068:1:22","nodeType":"YulLiteral","src":"4068:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4058:6:22","nodeType":"YulTypedName","src":"4058:6:22","type":""}]},{"nativeSrc":"4083:63:22","nodeType":"YulAssignment","src":"4083:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4118:9:22","nodeType":"YulIdentifier","src":"4118:9:22"},{"name":"offset","nativeSrc":"4129:6:22","nodeType":"YulIdentifier","src":"4129:6:22"}],"functionName":{"name":"add","nativeSrc":"4114:3:22","nodeType":"YulIdentifier","src":"4114:3:22"},"nativeSrc":"4114:22:22","nodeType":"YulFunctionCall","src":"4114:22:22"},{"name":"dataEnd","nativeSrc":"4138:7:22","nodeType":"YulIdentifier","src":"4138:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4093:20:22","nodeType":"YulIdentifier","src":"4093:20:22"},"nativeSrc":"4093:53:22","nodeType":"YulFunctionCall","src":"4093:53:22"},"variableNames":[{"name":"value0","nativeSrc":"4083:6:22","nodeType":"YulIdentifier","src":"4083:6:22"}]}]},{"nativeSrc":"4166:118:22","nodeType":"YulBlock","src":"4166:118:22","statements":[{"nativeSrc":"4181:16:22","nodeType":"YulVariableDeclaration","src":"4181:16:22","value":{"kind":"number","nativeSrc":"4195:2:22","nodeType":"YulLiteral","src":"4195:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4185:6:22","nodeType":"YulTypedName","src":"4185:6:22","type":""}]},{"nativeSrc":"4211:63:22","nodeType":"YulAssignment","src":"4211:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4246:9:22","nodeType":"YulIdentifier","src":"4246:9:22"},{"name":"offset","nativeSrc":"4257:6:22","nodeType":"YulIdentifier","src":"4257:6:22"}],"functionName":{"name":"add","nativeSrc":"4242:3:22","nodeType":"YulIdentifier","src":"4242:3:22"},"nativeSrc":"4242:22:22","nodeType":"YulFunctionCall","src":"4242:22:22"},{"name":"dataEnd","nativeSrc":"4266:7:22","nodeType":"YulIdentifier","src":"4266:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4221:20:22","nodeType":"YulIdentifier","src":"4221:20:22"},"nativeSrc":"4221:53:22","nodeType":"YulFunctionCall","src":"4221:53:22"},"variableNames":[{"name":"value1","nativeSrc":"4211:6:22","nodeType":"YulIdentifier","src":"4211:6:22"}]}]},{"nativeSrc":"4294:118:22","nodeType":"YulBlock","src":"4294:118:22","statements":[{"nativeSrc":"4309:16:22","nodeType":"YulVariableDeclaration","src":"4309:16:22","value":{"kind":"number","nativeSrc":"4323:2:22","nodeType":"YulLiteral","src":"4323:2:22","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4313:6:22","nodeType":"YulTypedName","src":"4313:6:22","type":""}]},{"nativeSrc":"4339:63:22","nodeType":"YulAssignment","src":"4339:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4374:9:22","nodeType":"YulIdentifier","src":"4374:9:22"},{"name":"offset","nativeSrc":"4385:6:22","nodeType":"YulIdentifier","src":"4385:6:22"}],"functionName":{"name":"add","nativeSrc":"4370:3:22","nodeType":"YulIdentifier","src":"4370:3:22"},"nativeSrc":"4370:22:22","nodeType":"YulFunctionCall","src":"4370:22:22"},{"name":"dataEnd","nativeSrc":"4394:7:22","nodeType":"YulIdentifier","src":"4394:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4349:20:22","nodeType":"YulIdentifier","src":"4349:20:22"},"nativeSrc":"4349:53:22","nodeType":"YulFunctionCall","src":"4349:53:22"},"variableNames":[{"name":"value2","nativeSrc":"4339:6:22","nodeType":"YulIdentifier","src":"4339:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3800:619:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3854:9:22","nodeType":"YulTypedName","src":"3854:9:22","type":""},{"name":"dataEnd","nativeSrc":"3865:7:22","nodeType":"YulTypedName","src":"3865:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3877:6:22","nodeType":"YulTypedName","src":"3877:6:22","type":""},{"name":"value1","nativeSrc":"3885:6:22","nodeType":"YulTypedName","src":"3885:6:22","type":""},{"name":"value2","nativeSrc":"3893:6:22","nodeType":"YulTypedName","src":"3893:6:22","type":""}],"src":"3800:619:22"},{"body":{"nativeSrc":"4468:43:22","nodeType":"YulBlock","src":"4468:43:22","statements":[{"nativeSrc":"4478:27:22","nodeType":"YulAssignment","src":"4478:27:22","value":{"arguments":[{"name":"value","nativeSrc":"4493:5:22","nodeType":"YulIdentifier","src":"4493:5:22"},{"kind":"number","nativeSrc":"4500:4:22","nodeType":"YulLiteral","src":"4500:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4489:3:22","nodeType":"YulIdentifier","src":"4489:3:22"},"nativeSrc":"4489:16:22","nodeType":"YulFunctionCall","src":"4489:16:22"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:22","nodeType":"YulIdentifier","src":"4478:7:22"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4425:86:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:22","nodeType":"YulTypedName","src":"4450:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:22","nodeType":"YulTypedName","src":"4460:7:22","type":""}],"src":"4425:86:22"},{"body":{"nativeSrc":"4578:51:22","nodeType":"YulBlock","src":"4578:51:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4595:3:22","nodeType":"YulIdentifier","src":"4595:3:22"},{"arguments":[{"name":"value","nativeSrc":"4616:5:22","nodeType":"YulIdentifier","src":"4616:5:22"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4600:15:22","nodeType":"YulIdentifier","src":"4600:15:22"},"nativeSrc":"4600:22:22","nodeType":"YulFunctionCall","src":"4600:22:22"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:22","nodeType":"YulIdentifier","src":"4588:6:22"},"nativeSrc":"4588:35:22","nodeType":"YulFunctionCall","src":"4588:35:22"},"nativeSrc":"4588:35:22","nodeType":"YulExpressionStatement","src":"4588:35:22"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4517:112:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4566:5:22","nodeType":"YulTypedName","src":"4566:5:22","type":""},{"name":"pos","nativeSrc":"4573:3:22","nodeType":"YulTypedName","src":"4573:3:22","type":""}],"src":"4517:112:22"},{"body":{"nativeSrc":"4729:120:22","nodeType":"YulBlock","src":"4729:120:22","statements":[{"nativeSrc":"4739:26:22","nodeType":"YulAssignment","src":"4739:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:22","nodeType":"YulIdentifier","src":"4751:9:22"},{"kind":"number","nativeSrc":"4762:2:22","nodeType":"YulLiteral","src":"4762:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4747:3:22","nodeType":"YulIdentifier","src":"4747:3:22"},"nativeSrc":"4747:18:22","nodeType":"YulFunctionCall","src":"4747:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4739:4:22","nodeType":"YulIdentifier","src":"4739:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4815:6:22","nodeType":"YulIdentifier","src":"4815:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"4828:9:22","nodeType":"YulIdentifier","src":"4828:9:22"},{"kind":"number","nativeSrc":"4839:1:22","nodeType":"YulLiteral","src":"4839:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4824:3:22","nodeType":"YulIdentifier","src":"4824:3:22"},"nativeSrc":"4824:17:22","nodeType":"YulFunctionCall","src":"4824:17:22"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4775:39:22","nodeType":"YulIdentifier","src":"4775:39:22"},"nativeSrc":"4775:67:22","nodeType":"YulFunctionCall","src":"4775:67:22"},"nativeSrc":"4775:67:22","nodeType":"YulExpressionStatement","src":"4775:67:22"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4635:214:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4701:9:22","nodeType":"YulTypedName","src":"4701:9:22","type":""},{"name":"value0","nativeSrc":"4713:6:22","nodeType":"YulTypedName","src":"4713:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4724:4:22","nodeType":"YulTypedName","src":"4724:4:22","type":""}],"src":"4635:214:22"},{"body":{"nativeSrc":"4900:32:22","nodeType":"YulBlock","src":"4900:32:22","statements":[{"nativeSrc":"4910:16:22","nodeType":"YulAssignment","src":"4910:16:22","value":{"name":"value","nativeSrc":"4921:5:22","nodeType":"YulIdentifier","src":"4921:5:22"},"variableNames":[{"name":"cleaned","nativeSrc":"4910:7:22","nodeType":"YulIdentifier","src":"4910:7:22"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4855:77:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4882:5:22","nodeType":"YulTypedName","src":"4882:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4892:7:22","nodeType":"YulTypedName","src":"4892:7:22","type":""}],"src":"4855:77:22"},{"body":{"nativeSrc":"5003:53:22","nodeType":"YulBlock","src":"5003:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5020:3:22","nodeType":"YulIdentifier","src":"5020:3:22"},{"arguments":[{"name":"value","nativeSrc":"5043:5:22","nodeType":"YulIdentifier","src":"5043:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5025:17:22","nodeType":"YulIdentifier","src":"5025:17:22"},"nativeSrc":"5025:24:22","nodeType":"YulFunctionCall","src":"5025:24:22"}],"functionName":{"name":"mstore","nativeSrc":"5013:6:22","nodeType":"YulIdentifier","src":"5013:6:22"},"nativeSrc":"5013:37:22","nodeType":"YulFunctionCall","src":"5013:37:22"},"nativeSrc":"5013:37:22","nodeType":"YulExpressionStatement","src":"5013:37:22"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4938:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4991:5:22","nodeType":"YulTypedName","src":"4991:5:22","type":""},{"name":"pos","nativeSrc":"4998:3:22","nodeType":"YulTypedName","src":"4998:3:22","type":""}],"src":"4938:118:22"},{"body":{"nativeSrc":"5160:124:22","nodeType":"YulBlock","src":"5160:124:22","statements":[{"nativeSrc":"5170:26:22","nodeType":"YulAssignment","src":"5170:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5182:9:22","nodeType":"YulIdentifier","src":"5182:9:22"},{"kind":"number","nativeSrc":"5193:2:22","nodeType":"YulLiteral","src":"5193:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5178:3:22","nodeType":"YulIdentifier","src":"5178:3:22"},"nativeSrc":"5178:18:22","nodeType":"YulFunctionCall","src":"5178:18:22"},"variableNames":[{"name":"tail","nativeSrc":"5170:4:22","nodeType":"YulIdentifier","src":"5170:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5250:6:22","nodeType":"YulIdentifier","src":"5250:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"5263:9:22","nodeType":"YulIdentifier","src":"5263:9:22"},{"kind":"number","nativeSrc":"5274:1:22","nodeType":"YulLiteral","src":"5274:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5259:3:22","nodeType":"YulIdentifier","src":"5259:3:22"},"nativeSrc":"5259:17:22","nodeType":"YulFunctionCall","src":"5259:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5206:43:22","nodeType":"YulIdentifier","src":"5206:43:22"},"nativeSrc":"5206:71:22","nodeType":"YulFunctionCall","src":"5206:71:22"},"nativeSrc":"5206:71:22","nodeType":"YulExpressionStatement","src":"5206:71:22"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5062:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5132:9:22","nodeType":"YulTypedName","src":"5132:9:22","type":""},{"name":"value0","nativeSrc":"5144:6:22","nodeType":"YulTypedName","src":"5144:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5155:4:22","nodeType":"YulTypedName","src":"5155:4:22","type":""}],"src":"5062:222:22"},{"body":{"nativeSrc":"5356:263:22","nodeType":"YulBlock","src":"5356:263:22","statements":[{"body":{"nativeSrc":"5402:83:22","nodeType":"YulBlock","src":"5402:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5404:77:22","nodeType":"YulIdentifier","src":"5404:77:22"},"nativeSrc":"5404:79:22","nodeType":"YulFunctionCall","src":"5404:79:22"},"nativeSrc":"5404:79:22","nodeType":"YulExpressionStatement","src":"5404:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5377:7:22","nodeType":"YulIdentifier","src":"5377:7:22"},{"name":"headStart","nativeSrc":"5386:9:22","nodeType":"YulIdentifier","src":"5386:9:22"}],"functionName":{"name":"sub","nativeSrc":"5373:3:22","nodeType":"YulIdentifier","src":"5373:3:22"},"nativeSrc":"5373:23:22","nodeType":"YulFunctionCall","src":"5373:23:22"},{"kind":"number","nativeSrc":"5398:2:22","nodeType":"YulLiteral","src":"5398:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5369:3:22","nodeType":"YulIdentifier","src":"5369:3:22"},"nativeSrc":"5369:32:22","nodeType":"YulFunctionCall","src":"5369:32:22"},"nativeSrc":"5366:119:22","nodeType":"YulIf","src":"5366:119:22"},{"nativeSrc":"5495:117:22","nodeType":"YulBlock","src":"5495:117:22","statements":[{"nativeSrc":"5510:15:22","nodeType":"YulVariableDeclaration","src":"5510:15:22","value":{"kind":"number","nativeSrc":"5524:1:22","nodeType":"YulLiteral","src":"5524:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5514:6:22","nodeType":"YulTypedName","src":"5514:6:22","type":""}]},{"nativeSrc":"5539:63:22","nodeType":"YulAssignment","src":"5539:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5574:9:22","nodeType":"YulIdentifier","src":"5574:9:22"},{"name":"offset","nativeSrc":"5585:6:22","nodeType":"YulIdentifier","src":"5585:6:22"}],"functionName":{"name":"add","nativeSrc":"5570:3:22","nodeType":"YulIdentifier","src":"5570:3:22"},"nativeSrc":"5570:22:22","nodeType":"YulFunctionCall","src":"5570:22:22"},{"name":"dataEnd","nativeSrc":"5594:7:22","nodeType":"YulIdentifier","src":"5594:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5549:20:22","nodeType":"YulIdentifier","src":"5549:20:22"},"nativeSrc":"5549:53:22","nodeType":"YulFunctionCall","src":"5549:53:22"},"variableNames":[{"name":"value0","nativeSrc":"5539:6:22","nodeType":"YulIdentifier","src":"5539:6:22"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5290:329:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5326:9:22","nodeType":"YulTypedName","src":"5326:9:22","type":""},{"name":"dataEnd","nativeSrc":"5337:7:22","nodeType":"YulTypedName","src":"5337:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5349:6:22","nodeType":"YulTypedName","src":"5349:6:22","type":""}],"src":"5290:329:22"},{"body":{"nativeSrc":"5669:105:22","nodeType":"YulBlock","src":"5669:105:22","statements":[{"nativeSrc":"5679:89:22","nodeType":"YulAssignment","src":"5679:89:22","value":{"arguments":[{"name":"value","nativeSrc":"5694:5:22","nodeType":"YulIdentifier","src":"5694:5:22"},{"kind":"number","nativeSrc":"5701:66:22","nodeType":"YulLiteral","src":"5701:66:22","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"5690:3:22","nodeType":"YulIdentifier","src":"5690:3:22"},"nativeSrc":"5690:78:22","nodeType":"YulFunctionCall","src":"5690:78:22"},"variableNames":[{"name":"cleaned","nativeSrc":"5679:7:22","nodeType":"YulIdentifier","src":"5679:7:22"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"5625:149:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5651:5:22","nodeType":"YulTypedName","src":"5651:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5661:7:22","nodeType":"YulTypedName","src":"5661:7:22","type":""}],"src":"5625:149:22"},{"body":{"nativeSrc":"5843:52:22","nodeType":"YulBlock","src":"5843:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5860:3:22","nodeType":"YulIdentifier","src":"5860:3:22"},{"arguments":[{"name":"value","nativeSrc":"5882:5:22","nodeType":"YulIdentifier","src":"5882:5:22"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"5865:16:22","nodeType":"YulIdentifier","src":"5865:16:22"},"nativeSrc":"5865:23:22","nodeType":"YulFunctionCall","src":"5865:23:22"}],"functionName":{"name":"mstore","nativeSrc":"5853:6:22","nodeType":"YulIdentifier","src":"5853:6:22"},"nativeSrc":"5853:36:22","nodeType":"YulFunctionCall","src":"5853:36:22"},"nativeSrc":"5853:36:22","nodeType":"YulExpressionStatement","src":"5853:36:22"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"5780:115:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5831:5:22","nodeType":"YulTypedName","src":"5831:5:22","type":""},{"name":"pos","nativeSrc":"5838:3:22","nodeType":"YulTypedName","src":"5838:3:22","type":""}],"src":"5780:115:22"},{"body":{"nativeSrc":"5966:53:22","nodeType":"YulBlock","src":"5966:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5983:3:22","nodeType":"YulIdentifier","src":"5983:3:22"},{"arguments":[{"name":"value","nativeSrc":"6006:5:22","nodeType":"YulIdentifier","src":"6006:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5988:17:22","nodeType":"YulIdentifier","src":"5988:17:22"},"nativeSrc":"5988:24:22","nodeType":"YulFunctionCall","src":"5988:24:22"}],"functionName":{"name":"mstore","nativeSrc":"5976:6:22","nodeType":"YulIdentifier","src":"5976:6:22"},"nativeSrc":"5976:37:22","nodeType":"YulFunctionCall","src":"5976:37:22"},"nativeSrc":"5976:37:22","nodeType":"YulExpressionStatement","src":"5976:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5901:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5954:5:22","nodeType":"YulTypedName","src":"5954:5:22","type":""},{"name":"pos","nativeSrc":"5961:3:22","nodeType":"YulTypedName","src":"5961:3:22","type":""}],"src":"5901:118:22"},{"body":{"nativeSrc":"6099:40:22","nodeType":"YulBlock","src":"6099:40:22","statements":[{"nativeSrc":"6110:22:22","nodeType":"YulAssignment","src":"6110:22:22","value":{"arguments":[{"name":"value","nativeSrc":"6126:5:22","nodeType":"YulIdentifier","src":"6126:5:22"}],"functionName":{"name":"mload","nativeSrc":"6120:5:22","nodeType":"YulIdentifier","src":"6120:5:22"},"nativeSrc":"6120:12:22","nodeType":"YulFunctionCall","src":"6120:12:22"},"variableNames":[{"name":"length","nativeSrc":"6110:6:22","nodeType":"YulIdentifier","src":"6110:6:22"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6025:114:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6082:5:22","nodeType":"YulTypedName","src":"6082:5:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6092:6:22","nodeType":"YulTypedName","src":"6092:6:22","type":""}],"src":"6025:114:22"},{"body":{"nativeSrc":"6256:73:22","nodeType":"YulBlock","src":"6256:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6273:3:22","nodeType":"YulIdentifier","src":"6273:3:22"},{"name":"length","nativeSrc":"6278:6:22","nodeType":"YulIdentifier","src":"6278:6:22"}],"functionName":{"name":"mstore","nativeSrc":"6266:6:22","nodeType":"YulIdentifier","src":"6266:6:22"},"nativeSrc":"6266:19:22","nodeType":"YulFunctionCall","src":"6266:19:22"},"nativeSrc":"6266:19:22","nodeType":"YulExpressionStatement","src":"6266:19:22"},{"nativeSrc":"6294:29:22","nodeType":"YulAssignment","src":"6294:29:22","value":{"arguments":[{"name":"pos","nativeSrc":"6313:3:22","nodeType":"YulIdentifier","src":"6313:3:22"},{"kind":"number","nativeSrc":"6318:4:22","nodeType":"YulLiteral","src":"6318:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6309:3:22","nodeType":"YulIdentifier","src":"6309:3:22"},"nativeSrc":"6309:14:22","nodeType":"YulFunctionCall","src":"6309:14:22"},"variableNames":[{"name":"updated_pos","nativeSrc":"6294:11:22","nodeType":"YulIdentifier","src":"6294:11:22"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6145:184:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6228:3:22","nodeType":"YulTypedName","src":"6228:3:22","type":""},{"name":"length","nativeSrc":"6233:6:22","nodeType":"YulTypedName","src":"6233:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6244:11:22","nodeType":"YulTypedName","src":"6244:11:22","type":""}],"src":"6145:184:22"},{"body":{"nativeSrc":"6407:60:22","nodeType":"YulBlock","src":"6407:60:22","statements":[{"nativeSrc":"6417:11:22","nodeType":"YulAssignment","src":"6417:11:22","value":{"name":"ptr","nativeSrc":"6425:3:22","nodeType":"YulIdentifier","src":"6425:3:22"},"variableNames":[{"name":"data","nativeSrc":"6417:4:22","nodeType":"YulIdentifier","src":"6417:4:22"}]},{"nativeSrc":"6438:22:22","nodeType":"YulAssignment","src":"6438:22:22","value":{"arguments":[{"name":"ptr","nativeSrc":"6450:3:22","nodeType":"YulIdentifier","src":"6450:3:22"},{"kind":"number","nativeSrc":"6455:4:22","nodeType":"YulLiteral","src":"6455:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6446:3:22","nodeType":"YulIdentifier","src":"6446:3:22"},"nativeSrc":"6446:14:22","nodeType":"YulFunctionCall","src":"6446:14:22"},"variableNames":[{"name":"data","nativeSrc":"6438:4:22","nodeType":"YulIdentifier","src":"6438:4:22"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6335:132:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6394:3:22","nodeType":"YulTypedName","src":"6394:3:22","type":""}],"returnVariables":[{"name":"data","nativeSrc":"6402:4:22","nodeType":"YulTypedName","src":"6402:4:22","type":""}],"src":"6335:132:22"},{"body":{"nativeSrc":"6528:53:22","nodeType":"YulBlock","src":"6528:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6545:3:22","nodeType":"YulIdentifier","src":"6545:3:22"},{"arguments":[{"name":"value","nativeSrc":"6568:5:22","nodeType":"YulIdentifier","src":"6568:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6550:17:22","nodeType":"YulIdentifier","src":"6550:17:22"},"nativeSrc":"6550:24:22","nodeType":"YulFunctionCall","src":"6550:24:22"}],"functionName":{"name":"mstore","nativeSrc":"6538:6:22","nodeType":"YulIdentifier","src":"6538:6:22"},"nativeSrc":"6538:37:22","nodeType":"YulFunctionCall","src":"6538:37:22"},"nativeSrc":"6538:37:22","nodeType":"YulExpressionStatement","src":"6538:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6473:108:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6516:5:22","nodeType":"YulTypedName","src":"6516:5:22","type":""},{"name":"pos","nativeSrc":"6523:3:22","nodeType":"YulTypedName","src":"6523:3:22","type":""}],"src":"6473:108:22"},{"body":{"nativeSrc":"6667:99:22","nodeType":"YulBlock","src":"6667:99:22","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"6711:6:22","nodeType":"YulIdentifier","src":"6711:6:22"},{"name":"pos","nativeSrc":"6719:3:22","nodeType":"YulIdentifier","src":"6719:3:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6677:33:22","nodeType":"YulIdentifier","src":"6677:33:22"},"nativeSrc":"6677:46:22","nodeType":"YulFunctionCall","src":"6677:46:22"},"nativeSrc":"6677:46:22","nodeType":"YulExpressionStatement","src":"6677:46:22"},{"nativeSrc":"6732:28:22","nodeType":"YulAssignment","src":"6732:28:22","value":{"arguments":[{"name":"pos","nativeSrc":"6750:3:22","nodeType":"YulIdentifier","src":"6750:3:22"},{"kind":"number","nativeSrc":"6755:4:22","nodeType":"YulLiteral","src":"6755:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6746:3:22","nodeType":"YulIdentifier","src":"6746:3:22"},"nativeSrc":"6746:14:22","nodeType":"YulFunctionCall","src":"6746:14:22"},"variableNames":[{"name":"updatedPos","nativeSrc":"6732:10:22","nodeType":"YulIdentifier","src":"6732:10:22"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"6587:179:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"6640:6:22","nodeType":"YulTypedName","src":"6640:6:22","type":""},{"name":"pos","nativeSrc":"6648:3:22","nodeType":"YulTypedName","src":"6648:3:22","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"6656:10:22","nodeType":"YulTypedName","src":"6656:10:22","type":""}],"src":"6587:179:22"},{"body":{"nativeSrc":"6847:38:22","nodeType":"YulBlock","src":"6847:38:22","statements":[{"nativeSrc":"6857:22:22","nodeType":"YulAssignment","src":"6857:22:22","value":{"arguments":[{"name":"ptr","nativeSrc":"6869:3:22","nodeType":"YulIdentifier","src":"6869:3:22"},{"kind":"number","nativeSrc":"6874:4:22","nodeType":"YulLiteral","src":"6874:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6865:3:22","nodeType":"YulIdentifier","src":"6865:3:22"},"nativeSrc":"6865:14:22","nodeType":"YulFunctionCall","src":"6865:14:22"},"variableNames":[{"name":"next","nativeSrc":"6857:4:22","nodeType":"YulIdentifier","src":"6857:4:22"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6772:113:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6834:3:22","nodeType":"YulTypedName","src":"6834:3:22","type":""}],"returnVariables":[{"name":"next","nativeSrc":"6842:4:22","nodeType":"YulTypedName","src":"6842:4:22","type":""}],"src":"6772:113:22"},{"body":{"nativeSrc":"7045:608:22","nodeType":"YulBlock","src":"7045:608:22","statements":[{"nativeSrc":"7055:68:22","nodeType":"YulVariableDeclaration","src":"7055:68:22","value":{"arguments":[{"name":"value","nativeSrc":"7117:5:22","nodeType":"YulIdentifier","src":"7117:5:22"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7069:47:22","nodeType":"YulIdentifier","src":"7069:47:22"},"nativeSrc":"7069:54:22","nodeType":"YulFunctionCall","src":"7069:54:22"},"variables":[{"name":"length","nativeSrc":"7059:6:22","nodeType":"YulTypedName","src":"7059:6:22","type":""}]},{"nativeSrc":"7132:93:22","nodeType":"YulAssignment","src":"7132:93:22","value":{"arguments":[{"name":"pos","nativeSrc":"7213:3:22","nodeType":"YulIdentifier","src":"7213:3:22"},{"name":"length","nativeSrc":"7218:6:22","nodeType":"YulIdentifier","src":"7218:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7139:73:22","nodeType":"YulIdentifier","src":"7139:73:22"},"nativeSrc":"7139:86:22","nodeType":"YulFunctionCall","src":"7139:86:22"},"variableNames":[{"name":"pos","nativeSrc":"7132:3:22","nodeType":"YulIdentifier","src":"7132:3:22"}]},{"nativeSrc":"7234:71:22","nodeType":"YulVariableDeclaration","src":"7234:71:22","value":{"arguments":[{"name":"value","nativeSrc":"7299:5:22","nodeType":"YulIdentifier","src":"7299:5:22"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7249:49:22","nodeType":"YulIdentifier","src":"7249:49:22"},"nativeSrc":"7249:56:22","nodeType":"YulFunctionCall","src":"7249:56:22"},"variables":[{"name":"baseRef","nativeSrc":"7238:7:22","nodeType":"YulTypedName","src":"7238:7:22","type":""}]},{"nativeSrc":"7314:21:22","nodeType":"YulVariableDeclaration","src":"7314:21:22","value":{"name":"baseRef","nativeSrc":"7328:7:22","nodeType":"YulIdentifier","src":"7328:7:22"},"variables":[{"name":"srcPtr","nativeSrc":"7318:6:22","nodeType":"YulTypedName","src":"7318:6:22","type":""}]},{"body":{"nativeSrc":"7404:224:22","nodeType":"YulBlock","src":"7404:224:22","statements":[{"nativeSrc":"7418:34:22","nodeType":"YulVariableDeclaration","src":"7418:34:22","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7445:6:22","nodeType":"YulIdentifier","src":"7445:6:22"}],"functionName":{"name":"mload","nativeSrc":"7439:5:22","nodeType":"YulIdentifier","src":"7439:5:22"},"nativeSrc":"7439:13:22","nodeType":"YulFunctionCall","src":"7439:13:22"},"variables":[{"name":"elementValue0","nativeSrc":"7422:13:22","nodeType":"YulTypedName","src":"7422:13:22","type":""}]},{"nativeSrc":"7465:70:22","nodeType":"YulAssignment","src":"7465:70:22","value":{"arguments":[{"name":"elementValue0","nativeSrc":"7516:13:22","nodeType":"YulIdentifier","src":"7516:13:22"},{"name":"pos","nativeSrc":"7531:3:22","nodeType":"YulIdentifier","src":"7531:3:22"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"7472:43:22","nodeType":"YulIdentifier","src":"7472:43:22"},"nativeSrc":"7472:63:22","nodeType":"YulFunctionCall","src":"7472:63:22"},"variableNames":[{"name":"pos","nativeSrc":"7465:3:22","nodeType":"YulIdentifier","src":"7465:3:22"}]},{"nativeSrc":"7548:70:22","nodeType":"YulAssignment","src":"7548:70:22","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7611:6:22","nodeType":"YulIdentifier","src":"7611:6:22"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7558:52:22","nodeType":"YulIdentifier","src":"7558:52:22"},"nativeSrc":"7558:60:22","nodeType":"YulFunctionCall","src":"7558:60:22"},"variableNames":[{"name":"srcPtr","nativeSrc":"7548:6:22","nodeType":"YulIdentifier","src":"7548:6:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7366:1:22","nodeType":"YulIdentifier","src":"7366:1:22"},{"name":"length","nativeSrc":"7369:6:22","nodeType":"YulIdentifier","src":"7369:6:22"}],"functionName":{"name":"lt","nativeSrc":"7363:2:22","nodeType":"YulIdentifier","src":"7363:2:22"},"nativeSrc":"7363:13:22","nodeType":"YulFunctionCall","src":"7363:13:22"},"nativeSrc":"7344:284:22","nodeType":"YulForLoop","post":{"nativeSrc":"7377:18:22","nodeType":"YulBlock","src":"7377:18:22","statements":[{"nativeSrc":"7379:14:22","nodeType":"YulAssignment","src":"7379:14:22","value":{"arguments":[{"name":"i","nativeSrc":"7388:1:22","nodeType":"YulIdentifier","src":"7388:1:22"},{"kind":"number","nativeSrc":"7391:1:22","nodeType":"YulLiteral","src":"7391:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7384:3:22","nodeType":"YulIdentifier","src":"7384:3:22"},"nativeSrc":"7384:9:22","nodeType":"YulFunctionCall","src":"7384:9:22"},"variableNames":[{"name":"i","nativeSrc":"7379:1:22","nodeType":"YulIdentifier","src":"7379:1:22"}]}]},"pre":{"nativeSrc":"7348:14:22","nodeType":"YulBlock","src":"7348:14:22","statements":[{"nativeSrc":"7350:10:22","nodeType":"YulVariableDeclaration","src":"7350:10:22","value":{"kind":"number","nativeSrc":"7359:1:22","nodeType":"YulLiteral","src":"7359:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7354:1:22","nodeType":"YulTypedName","src":"7354:1:22","type":""}]}]},"src":"7344:284:22"},{"nativeSrc":"7637:10:22","nodeType":"YulAssignment","src":"7637:10:22","value":{"name":"pos","nativeSrc":"7644:3:22","nodeType":"YulIdentifier","src":"7644:3:22"},"variableNames":[{"name":"end","nativeSrc":"7637:3:22","nodeType":"YulIdentifier","src":"7637:3:22"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6921:732:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7024:5:22","nodeType":"YulTypedName","src":"7024:5:22","type":""},{"name":"pos","nativeSrc":"7031:3:22","nodeType":"YulTypedName","src":"7031:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7040:3:22","nodeType":"YulTypedName","src":"7040:3:22","type":""}],"src":"6921:732:22"},{"body":{"nativeSrc":"8013:861:22","nodeType":"YulBlock","src":"8013:861:22","statements":[{"nativeSrc":"8023:27:22","nodeType":"YulAssignment","src":"8023:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8035:9:22","nodeType":"YulIdentifier","src":"8035:9:22"},{"kind":"number","nativeSrc":"8046:3:22","nodeType":"YulLiteral","src":"8046:3:22","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"8031:3:22","nodeType":"YulIdentifier","src":"8031:3:22"},"nativeSrc":"8031:19:22","nodeType":"YulFunctionCall","src":"8031:19:22"},"variableNames":[{"name":"tail","nativeSrc":"8023:4:22","nodeType":"YulIdentifier","src":"8023:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8102:6:22","nodeType":"YulIdentifier","src":"8102:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"8115:9:22","nodeType":"YulIdentifier","src":"8115:9:22"},{"kind":"number","nativeSrc":"8126:1:22","nodeType":"YulLiteral","src":"8126:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8111:3:22","nodeType":"YulIdentifier","src":"8111:3:22"},"nativeSrc":"8111:17:22","nodeType":"YulFunctionCall","src":"8111:17:22"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"8060:41:22","nodeType":"YulIdentifier","src":"8060:41:22"},"nativeSrc":"8060:69:22","nodeType":"YulFunctionCall","src":"8060:69:22"},"nativeSrc":"8060:69:22","nodeType":"YulExpressionStatement","src":"8060:69:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8150:9:22","nodeType":"YulIdentifier","src":"8150:9:22"},{"kind":"number","nativeSrc":"8161:2:22","nodeType":"YulLiteral","src":"8161:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8146:3:22","nodeType":"YulIdentifier","src":"8146:3:22"},"nativeSrc":"8146:18:22","nodeType":"YulFunctionCall","src":"8146:18:22"},{"arguments":[{"name":"tail","nativeSrc":"8170:4:22","nodeType":"YulIdentifier","src":"8170:4:22"},{"name":"headStart","nativeSrc":"8176:9:22","nodeType":"YulIdentifier","src":"8176:9:22"}],"functionName":{"name":"sub","nativeSrc":"8166:3:22","nodeType":"YulIdentifier","src":"8166:3:22"},"nativeSrc":"8166:20:22","nodeType":"YulFunctionCall","src":"8166:20:22"}],"functionName":{"name":"mstore","nativeSrc":"8139:6:22","nodeType":"YulIdentifier","src":"8139:6:22"},"nativeSrc":"8139:48:22","nodeType":"YulFunctionCall","src":"8139:48:22"},"nativeSrc":"8139:48:22","nodeType":"YulExpressionStatement","src":"8139:48:22"},{"nativeSrc":"8196:86:22","nodeType":"YulAssignment","src":"8196:86:22","value":{"arguments":[{"name":"value1","nativeSrc":"8268:6:22","nodeType":"YulIdentifier","src":"8268:6:22"},{"name":"tail","nativeSrc":"8277:4:22","nodeType":"YulIdentifier","src":"8277:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8204:63:22","nodeType":"YulIdentifier","src":"8204:63:22"},"nativeSrc":"8204:78:22","nodeType":"YulFunctionCall","src":"8204:78:22"},"variableNames":[{"name":"tail","nativeSrc":"8196:4:22","nodeType":"YulIdentifier","src":"8196:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8303:9:22","nodeType":"YulIdentifier","src":"8303:9:22"},{"kind":"number","nativeSrc":"8314:2:22","nodeType":"YulLiteral","src":"8314:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8299:3:22","nodeType":"YulIdentifier","src":"8299:3:22"},"nativeSrc":"8299:18:22","nodeType":"YulFunctionCall","src":"8299:18:22"},{"arguments":[{"name":"tail","nativeSrc":"8323:4:22","nodeType":"YulIdentifier","src":"8323:4:22"},{"name":"headStart","nativeSrc":"8329:9:22","nodeType":"YulIdentifier","src":"8329:9:22"}],"functionName":{"name":"sub","nativeSrc":"8319:3:22","nodeType":"YulIdentifier","src":"8319:3:22"},"nativeSrc":"8319:20:22","nodeType":"YulFunctionCall","src":"8319:20:22"}],"functionName":{"name":"mstore","nativeSrc":"8292:6:22","nodeType":"YulIdentifier","src":"8292:6:22"},"nativeSrc":"8292:48:22","nodeType":"YulFunctionCall","src":"8292:48:22"},"nativeSrc":"8292:48:22","nodeType":"YulExpressionStatement","src":"8292:48:22"},{"nativeSrc":"8349:86:22","nodeType":"YulAssignment","src":"8349:86:22","value":{"arguments":[{"name":"value2","nativeSrc":"8421:6:22","nodeType":"YulIdentifier","src":"8421:6:22"},{"name":"tail","nativeSrc":"8430:4:22","nodeType":"YulIdentifier","src":"8430:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8357:63:22","nodeType":"YulIdentifier","src":"8357:63:22"},"nativeSrc":"8357:78:22","nodeType":"YulFunctionCall","src":"8357:78:22"},"variableNames":[{"name":"tail","nativeSrc":"8349:4:22","nodeType":"YulIdentifier","src":"8349:4:22"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8489:6:22","nodeType":"YulIdentifier","src":"8489:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"8502:9:22","nodeType":"YulIdentifier","src":"8502:9:22"},{"kind":"number","nativeSrc":"8513:2:22","nodeType":"YulLiteral","src":"8513:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8498:3:22","nodeType":"YulIdentifier","src":"8498:3:22"},"nativeSrc":"8498:18:22","nodeType":"YulFunctionCall","src":"8498:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8445:43:22","nodeType":"YulIdentifier","src":"8445:43:22"},"nativeSrc":"8445:72:22","nodeType":"YulFunctionCall","src":"8445:72:22"},"nativeSrc":"8445:72:22","nodeType":"YulExpressionStatement","src":"8445:72:22"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"8571:6:22","nodeType":"YulIdentifier","src":"8571:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"8584:9:22","nodeType":"YulIdentifier","src":"8584:9:22"},{"kind":"number","nativeSrc":"8595:3:22","nodeType":"YulLiteral","src":"8595:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8580:3:22","nodeType":"YulIdentifier","src":"8580:3:22"},"nativeSrc":"8580:19:22","nodeType":"YulFunctionCall","src":"8580:19:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8527:43:22","nodeType":"YulIdentifier","src":"8527:43:22"},"nativeSrc":"8527:73:22","nodeType":"YulFunctionCall","src":"8527:73:22"},"nativeSrc":"8527:73:22","nodeType":"YulExpressionStatement","src":"8527:73:22"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"8654:6:22","nodeType":"YulIdentifier","src":"8654:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"8667:9:22","nodeType":"YulIdentifier","src":"8667:9:22"},{"kind":"number","nativeSrc":"8678:3:22","nodeType":"YulLiteral","src":"8678:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8663:3:22","nodeType":"YulIdentifier","src":"8663:3:22"},"nativeSrc":"8663:19:22","nodeType":"YulFunctionCall","src":"8663:19:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8610:43:22","nodeType":"YulIdentifier","src":"8610:43:22"},"nativeSrc":"8610:73:22","nodeType":"YulFunctionCall","src":"8610:73:22"},"nativeSrc":"8610:73:22","nodeType":"YulExpressionStatement","src":"8610:73:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8704:9:22","nodeType":"YulIdentifier","src":"8704:9:22"},{"kind":"number","nativeSrc":"8715:3:22","nodeType":"YulLiteral","src":"8715:3:22","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8700:3:22","nodeType":"YulIdentifier","src":"8700:3:22"},"nativeSrc":"8700:19:22","nodeType":"YulFunctionCall","src":"8700:19:22"},{"arguments":[{"name":"tail","nativeSrc":"8725:4:22","nodeType":"YulIdentifier","src":"8725:4:22"},{"name":"headStart","nativeSrc":"8731:9:22","nodeType":"YulIdentifier","src":"8731:9:22"}],"functionName":{"name":"sub","nativeSrc":"8721:3:22","nodeType":"YulIdentifier","src":"8721:3:22"},"nativeSrc":"8721:20:22","nodeType":"YulFunctionCall","src":"8721:20:22"}],"functionName":{"name":"mstore","nativeSrc":"8693:6:22","nodeType":"YulIdentifier","src":"8693:6:22"},"nativeSrc":"8693:49:22","nodeType":"YulFunctionCall","src":"8693:49:22"},"nativeSrc":"8693:49:22","nodeType":"YulExpressionStatement","src":"8693:49:22"},{"nativeSrc":"8751:116:22","nodeType":"YulAssignment","src":"8751:116:22","value":{"arguments":[{"name":"value6","nativeSrc":"8853:6:22","nodeType":"YulIdentifier","src":"8853:6:22"},{"name":"tail","nativeSrc":"8862:4:22","nodeType":"YulIdentifier","src":"8862:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8759:93:22","nodeType":"YulIdentifier","src":"8759:93:22"},"nativeSrc":"8759:108:22","nodeType":"YulFunctionCall","src":"8759:108:22"},"variableNames":[{"name":"tail","nativeSrc":"8751:4:22","nodeType":"YulIdentifier","src":"8751:4:22"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7659:1215:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7937:9:22","nodeType":"YulTypedName","src":"7937:9:22","type":""},{"name":"value6","nativeSrc":"7949:6:22","nodeType":"YulTypedName","src":"7949:6:22","type":""},{"name":"value5","nativeSrc":"7957:6:22","nodeType":"YulTypedName","src":"7957:6:22","type":""},{"name":"value4","nativeSrc":"7965:6:22","nodeType":"YulTypedName","src":"7965:6:22","type":""},{"name":"value3","nativeSrc":"7973:6:22","nodeType":"YulTypedName","src":"7973:6:22","type":""},{"name":"value2","nativeSrc":"7981:6:22","nodeType":"YulTypedName","src":"7981:6:22","type":""},{"name":"value1","nativeSrc":"7989:6:22","nodeType":"YulTypedName","src":"7989:6:22","type":""},{"name":"value0","nativeSrc":"7997:6:22","nodeType":"YulTypedName","src":"7997:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8008:4:22","nodeType":"YulTypedName","src":"8008:4:22","type":""}],"src":"7659:1215:22"},{"body":{"nativeSrc":"8978:124:22","nodeType":"YulBlock","src":"8978:124:22","statements":[{"nativeSrc":"8988:26:22","nodeType":"YulAssignment","src":"8988:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9000:9:22","nodeType":"YulIdentifier","src":"9000:9:22"},{"kind":"number","nativeSrc":"9011:2:22","nodeType":"YulLiteral","src":"9011:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8996:3:22","nodeType":"YulIdentifier","src":"8996:3:22"},"nativeSrc":"8996:18:22","nodeType":"YulFunctionCall","src":"8996:18:22"},"variableNames":[{"name":"tail","nativeSrc":"8988:4:22","nodeType":"YulIdentifier","src":"8988:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9068:6:22","nodeType":"YulIdentifier","src":"9068:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"9081:9:22","nodeType":"YulIdentifier","src":"9081:9:22"},{"kind":"number","nativeSrc":"9092:1:22","nodeType":"YulLiteral","src":"9092:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9077:3:22","nodeType":"YulIdentifier","src":"9077:3:22"},"nativeSrc":"9077:17:22","nodeType":"YulFunctionCall","src":"9077:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9024:43:22","nodeType":"YulIdentifier","src":"9024:43:22"},"nativeSrc":"9024:71:22","nodeType":"YulFunctionCall","src":"9024:71:22"},"nativeSrc":"9024:71:22","nodeType":"YulExpressionStatement","src":"9024:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"8880:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8950:9:22","nodeType":"YulTypedName","src":"8950:9:22","type":""},{"name":"value0","nativeSrc":"8962:6:22","nodeType":"YulTypedName","src":"8962:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8973:4:22","nodeType":"YulTypedName","src":"8973:4:22","type":""}],"src":"8880:222:22"},{"body":{"nativeSrc":"9149:77:22","nodeType":"YulBlock","src":"9149:77:22","statements":[{"body":{"nativeSrc":"9204:16:22","nodeType":"YulBlock","src":"9204:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9213:1:22","nodeType":"YulLiteral","src":"9213:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9216:1:22","nodeType":"YulLiteral","src":"9216:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9206:6:22","nodeType":"YulIdentifier","src":"9206:6:22"},"nativeSrc":"9206:12:22","nodeType":"YulFunctionCall","src":"9206:12:22"},"nativeSrc":"9206:12:22","nodeType":"YulExpressionStatement","src":"9206:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9172:5:22","nodeType":"YulIdentifier","src":"9172:5:22"},{"arguments":[{"name":"value","nativeSrc":"9195:5:22","nodeType":"YulIdentifier","src":"9195:5:22"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"9179:15:22","nodeType":"YulIdentifier","src":"9179:15:22"},"nativeSrc":"9179:22:22","nodeType":"YulFunctionCall","src":"9179:22:22"}],"functionName":{"name":"eq","nativeSrc":"9169:2:22","nodeType":"YulIdentifier","src":"9169:2:22"},"nativeSrc":"9169:33:22","nodeType":"YulFunctionCall","src":"9169:33:22"}],"functionName":{"name":"iszero","nativeSrc":"9162:6:22","nodeType":"YulIdentifier","src":"9162:6:22"},"nativeSrc":"9162:41:22","nodeType":"YulFunctionCall","src":"9162:41:22"},"nativeSrc":"9159:61:22","nodeType":"YulIf","src":"9159:61:22"}]},"name":"validator_revert_t_uint8","nativeSrc":"9108:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9142:5:22","nodeType":"YulTypedName","src":"9142:5:22","type":""}],"src":"9108:118:22"},{"body":{"nativeSrc":"9282:85:22","nodeType":"YulBlock","src":"9282:85:22","statements":[{"nativeSrc":"9292:29:22","nodeType":"YulAssignment","src":"9292:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"9314:6:22","nodeType":"YulIdentifier","src":"9314:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"9301:12:22","nodeType":"YulIdentifier","src":"9301:12:22"},"nativeSrc":"9301:20:22","nodeType":"YulFunctionCall","src":"9301:20:22"},"variableNames":[{"name":"value","nativeSrc":"9292:5:22","nodeType":"YulIdentifier","src":"9292:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9355:5:22","nodeType":"YulIdentifier","src":"9355:5:22"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"9330:24:22","nodeType":"YulIdentifier","src":"9330:24:22"},"nativeSrc":"9330:31:22","nodeType":"YulFunctionCall","src":"9330:31:22"},"nativeSrc":"9330:31:22","nodeType":"YulExpressionStatement","src":"9330:31:22"}]},"name":"abi_decode_t_uint8","nativeSrc":"9232:135:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9260:6:22","nodeType":"YulTypedName","src":"9260:6:22","type":""},{"name":"end","nativeSrc":"9268:3:22","nodeType":"YulTypedName","src":"9268:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9276:5:22","nodeType":"YulTypedName","src":"9276:5:22","type":""}],"src":"9232:135:22"},{"body":{"nativeSrc":"9416:79:22","nodeType":"YulBlock","src":"9416:79:22","statements":[{"body":{"nativeSrc":"9473:16:22","nodeType":"YulBlock","src":"9473:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9482:1:22","nodeType":"YulLiteral","src":"9482:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9485:1:22","nodeType":"YulLiteral","src":"9485:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9475:6:22","nodeType":"YulIdentifier","src":"9475:6:22"},"nativeSrc":"9475:12:22","nodeType":"YulFunctionCall","src":"9475:12:22"},"nativeSrc":"9475:12:22","nodeType":"YulExpressionStatement","src":"9475:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9439:5:22","nodeType":"YulIdentifier","src":"9439:5:22"},{"arguments":[{"name":"value","nativeSrc":"9464:5:22","nodeType":"YulIdentifier","src":"9464:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"9446:17:22","nodeType":"YulIdentifier","src":"9446:17:22"},"nativeSrc":"9446:24:22","nodeType":"YulFunctionCall","src":"9446:24:22"}],"functionName":{"name":"eq","nativeSrc":"9436:2:22","nodeType":"YulIdentifier","src":"9436:2:22"},"nativeSrc":"9436:35:22","nodeType":"YulFunctionCall","src":"9436:35:22"}],"functionName":{"name":"iszero","nativeSrc":"9429:6:22","nodeType":"YulIdentifier","src":"9429:6:22"},"nativeSrc":"9429:43:22","nodeType":"YulFunctionCall","src":"9429:43:22"},"nativeSrc":"9426:63:22","nodeType":"YulIf","src":"9426:63:22"}]},"name":"validator_revert_t_bytes32","nativeSrc":"9373:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9409:5:22","nodeType":"YulTypedName","src":"9409:5:22","type":""}],"src":"9373:122:22"},{"body":{"nativeSrc":"9553:87:22","nodeType":"YulBlock","src":"9553:87:22","statements":[{"nativeSrc":"9563:29:22","nodeType":"YulAssignment","src":"9563:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"9585:6:22","nodeType":"YulIdentifier","src":"9585:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"9572:12:22","nodeType":"YulIdentifier","src":"9572:12:22"},"nativeSrc":"9572:20:22","nodeType":"YulFunctionCall","src":"9572:20:22"},"variableNames":[{"name":"value","nativeSrc":"9563:5:22","nodeType":"YulIdentifier","src":"9563:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9628:5:22","nodeType":"YulIdentifier","src":"9628:5:22"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"9601:26:22","nodeType":"YulIdentifier","src":"9601:26:22"},"nativeSrc":"9601:33:22","nodeType":"YulFunctionCall","src":"9601:33:22"},"nativeSrc":"9601:33:22","nodeType":"YulExpressionStatement","src":"9601:33:22"}]},"name":"abi_decode_t_bytes32","nativeSrc":"9501:139:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9531:6:22","nodeType":"YulTypedName","src":"9531:6:22","type":""},{"name":"end","nativeSrc":"9539:3:22","nodeType":"YulTypedName","src":"9539:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9547:5:22","nodeType":"YulTypedName","src":"9547:5:22","type":""}],"src":"9501:139:22"},{"body":{"nativeSrc":"9812:1033:22","nodeType":"YulBlock","src":"9812:1033:22","statements":[{"body":{"nativeSrc":"9859:83:22","nodeType":"YulBlock","src":"9859:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9861:77:22","nodeType":"YulIdentifier","src":"9861:77:22"},"nativeSrc":"9861:79:22","nodeType":"YulFunctionCall","src":"9861:79:22"},"nativeSrc":"9861:79:22","nodeType":"YulExpressionStatement","src":"9861:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9833:7:22","nodeType":"YulIdentifier","src":"9833:7:22"},{"name":"headStart","nativeSrc":"9842:9:22","nodeType":"YulIdentifier","src":"9842:9:22"}],"functionName":{"name":"sub","nativeSrc":"9829:3:22","nodeType":"YulIdentifier","src":"9829:3:22"},"nativeSrc":"9829:23:22","nodeType":"YulFunctionCall","src":"9829:23:22"},{"kind":"number","nativeSrc":"9854:3:22","nodeType":"YulLiteral","src":"9854:3:22","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"9825:3:22","nodeType":"YulIdentifier","src":"9825:3:22"},"nativeSrc":"9825:33:22","nodeType":"YulFunctionCall","src":"9825:33:22"},"nativeSrc":"9822:120:22","nodeType":"YulIf","src":"9822:120:22"},{"nativeSrc":"9952:117:22","nodeType":"YulBlock","src":"9952:117:22","statements":[{"nativeSrc":"9967:15:22","nodeType":"YulVariableDeclaration","src":"9967:15:22","value":{"kind":"number","nativeSrc":"9981:1:22","nodeType":"YulLiteral","src":"9981:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9971:6:22","nodeType":"YulTypedName","src":"9971:6:22","type":""}]},{"nativeSrc":"9996:63:22","nodeType":"YulAssignment","src":"9996:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10031:9:22","nodeType":"YulIdentifier","src":"10031:9:22"},{"name":"offset","nativeSrc":"10042:6:22","nodeType":"YulIdentifier","src":"10042:6:22"}],"functionName":{"name":"add","nativeSrc":"10027:3:22","nodeType":"YulIdentifier","src":"10027:3:22"},"nativeSrc":"10027:22:22","nodeType":"YulFunctionCall","src":"10027:22:22"},{"name":"dataEnd","nativeSrc":"10051:7:22","nodeType":"YulIdentifier","src":"10051:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10006:20:22","nodeType":"YulIdentifier","src":"10006:20:22"},"nativeSrc":"10006:53:22","nodeType":"YulFunctionCall","src":"10006:53:22"},"variableNames":[{"name":"value0","nativeSrc":"9996:6:22","nodeType":"YulIdentifier","src":"9996:6:22"}]}]},{"nativeSrc":"10079:118:22","nodeType":"YulBlock","src":"10079:118:22","statements":[{"nativeSrc":"10094:16:22","nodeType":"YulVariableDeclaration","src":"10094:16:22","value":{"kind":"number","nativeSrc":"10108:2:22","nodeType":"YulLiteral","src":"10108:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10098:6:22","nodeType":"YulTypedName","src":"10098:6:22","type":""}]},{"nativeSrc":"10124:63:22","nodeType":"YulAssignment","src":"10124:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10159:9:22","nodeType":"YulIdentifier","src":"10159:9:22"},{"name":"offset","nativeSrc":"10170:6:22","nodeType":"YulIdentifier","src":"10170:6:22"}],"functionName":{"name":"add","nativeSrc":"10155:3:22","nodeType":"YulIdentifier","src":"10155:3:22"},"nativeSrc":"10155:22:22","nodeType":"YulFunctionCall","src":"10155:22:22"},{"name":"dataEnd","nativeSrc":"10179:7:22","nodeType":"YulIdentifier","src":"10179:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10134:20:22","nodeType":"YulIdentifier","src":"10134:20:22"},"nativeSrc":"10134:53:22","nodeType":"YulFunctionCall","src":"10134:53:22"},"variableNames":[{"name":"value1","nativeSrc":"10124:6:22","nodeType":"YulIdentifier","src":"10124:6:22"}]}]},{"nativeSrc":"10207:118:22","nodeType":"YulBlock","src":"10207:118:22","statements":[{"nativeSrc":"10222:16:22","nodeType":"YulVariableDeclaration","src":"10222:16:22","value":{"kind":"number","nativeSrc":"10236:2:22","nodeType":"YulLiteral","src":"10236:2:22","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"10226:6:22","nodeType":"YulTypedName","src":"10226:6:22","type":""}]},{"nativeSrc":"10252:63:22","nodeType":"YulAssignment","src":"10252:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10287:9:22","nodeType":"YulIdentifier","src":"10287:9:22"},{"name":"offset","nativeSrc":"10298:6:22","nodeType":"YulIdentifier","src":"10298:6:22"}],"functionName":{"name":"add","nativeSrc":"10283:3:22","nodeType":"YulIdentifier","src":"10283:3:22"},"nativeSrc":"10283:22:22","nodeType":"YulFunctionCall","src":"10283:22:22"},{"name":"dataEnd","nativeSrc":"10307:7:22","nodeType":"YulIdentifier","src":"10307:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10262:20:22","nodeType":"YulIdentifier","src":"10262:20:22"},"nativeSrc":"10262:53:22","nodeType":"YulFunctionCall","src":"10262:53:22"},"variableNames":[{"name":"value2","nativeSrc":"10252:6:22","nodeType":"YulIdentifier","src":"10252:6:22"}]}]},{"nativeSrc":"10335:118:22","nodeType":"YulBlock","src":"10335:118:22","statements":[{"nativeSrc":"10350:16:22","nodeType":"YulVariableDeclaration","src":"10350:16:22","value":{"kind":"number","nativeSrc":"10364:2:22","nodeType":"YulLiteral","src":"10364:2:22","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"10354:6:22","nodeType":"YulTypedName","src":"10354:6:22","type":""}]},{"nativeSrc":"10380:63:22","nodeType":"YulAssignment","src":"10380:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10415:9:22","nodeType":"YulIdentifier","src":"10415:9:22"},{"name":"offset","nativeSrc":"10426:6:22","nodeType":"YulIdentifier","src":"10426:6:22"}],"functionName":{"name":"add","nativeSrc":"10411:3:22","nodeType":"YulIdentifier","src":"10411:3:22"},"nativeSrc":"10411:22:22","nodeType":"YulFunctionCall","src":"10411:22:22"},{"name":"dataEnd","nativeSrc":"10435:7:22","nodeType":"YulIdentifier","src":"10435:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10390:20:22","nodeType":"YulIdentifier","src":"10390:20:22"},"nativeSrc":"10390:53:22","nodeType":"YulFunctionCall","src":"10390:53:22"},"variableNames":[{"name":"value3","nativeSrc":"10380:6:22","nodeType":"YulIdentifier","src":"10380:6:22"}]}]},{"nativeSrc":"10463:117:22","nodeType":"YulBlock","src":"10463:117:22","statements":[{"nativeSrc":"10478:17:22","nodeType":"YulVariableDeclaration","src":"10478:17:22","value":{"kind":"number","nativeSrc":"10492:3:22","nodeType":"YulLiteral","src":"10492:3:22","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"10482:6:22","nodeType":"YulTypedName","src":"10482:6:22","type":""}]},{"nativeSrc":"10509:61:22","nodeType":"YulAssignment","src":"10509:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10542:9:22","nodeType":"YulIdentifier","src":"10542:9:22"},{"name":"offset","nativeSrc":"10553:6:22","nodeType":"YulIdentifier","src":"10553:6:22"}],"functionName":{"name":"add","nativeSrc":"10538:3:22","nodeType":"YulIdentifier","src":"10538:3:22"},"nativeSrc":"10538:22:22","nodeType":"YulFunctionCall","src":"10538:22:22"},{"name":"dataEnd","nativeSrc":"10562:7:22","nodeType":"YulIdentifier","src":"10562:7:22"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"10519:18:22","nodeType":"YulIdentifier","src":"10519:18:22"},"nativeSrc":"10519:51:22","nodeType":"YulFunctionCall","src":"10519:51:22"},"variableNames":[{"name":"value4","nativeSrc":"10509:6:22","nodeType":"YulIdentifier","src":"10509:6:22"}]}]},{"nativeSrc":"10590:119:22","nodeType":"YulBlock","src":"10590:119:22","statements":[{"nativeSrc":"10605:17:22","nodeType":"YulVariableDeclaration","src":"10605:17:22","value":{"kind":"number","nativeSrc":"10619:3:22","nodeType":"YulLiteral","src":"10619:3:22","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"10609:6:22","nodeType":"YulTypedName","src":"10609:6:22","type":""}]},{"nativeSrc":"10636:63:22","nodeType":"YulAssignment","src":"10636:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10671:9:22","nodeType":"YulIdentifier","src":"10671:9:22"},{"name":"offset","nativeSrc":"10682:6:22","nodeType":"YulIdentifier","src":"10682:6:22"}],"functionName":{"name":"add","nativeSrc":"10667:3:22","nodeType":"YulIdentifier","src":"10667:3:22"},"nativeSrc":"10667:22:22","nodeType":"YulFunctionCall","src":"10667:22:22"},{"name":"dataEnd","nativeSrc":"10691:7:22","nodeType":"YulIdentifier","src":"10691:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"10646:20:22","nodeType":"YulIdentifier","src":"10646:20:22"},"nativeSrc":"10646:53:22","nodeType":"YulFunctionCall","src":"10646:53:22"},"variableNames":[{"name":"value5","nativeSrc":"10636:6:22","nodeType":"YulIdentifier","src":"10636:6:22"}]}]},{"nativeSrc":"10719:119:22","nodeType":"YulBlock","src":"10719:119:22","statements":[{"nativeSrc":"10734:17:22","nodeType":"YulVariableDeclaration","src":"10734:17:22","value":{"kind":"number","nativeSrc":"10748:3:22","nodeType":"YulLiteral","src":"10748:3:22","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"10738:6:22","nodeType":"YulTypedName","src":"10738:6:22","type":""}]},{"nativeSrc":"10765:63:22","nodeType":"YulAssignment","src":"10765:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10800:9:22","nodeType":"YulIdentifier","src":"10800:9:22"},{"name":"offset","nativeSrc":"10811:6:22","nodeType":"YulIdentifier","src":"10811:6:22"}],"functionName":{"name":"add","nativeSrc":"10796:3:22","nodeType":"YulIdentifier","src":"10796:3:22"},"nativeSrc":"10796:22:22","nodeType":"YulFunctionCall","src":"10796:22:22"},{"name":"dataEnd","nativeSrc":"10820:7:22","nodeType":"YulIdentifier","src":"10820:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"10775:20:22","nodeType":"YulIdentifier","src":"10775:20:22"},"nativeSrc":"10775:53:22","nodeType":"YulFunctionCall","src":"10775:53:22"},"variableNames":[{"name":"value6","nativeSrc":"10765:6:22","nodeType":"YulIdentifier","src":"10765:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"9646:1199:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9734:9:22","nodeType":"YulTypedName","src":"9734:9:22","type":""},{"name":"dataEnd","nativeSrc":"9745:7:22","nodeType":"YulTypedName","src":"9745:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9757:6:22","nodeType":"YulTypedName","src":"9757:6:22","type":""},{"name":"value1","nativeSrc":"9765:6:22","nodeType":"YulTypedName","src":"9765:6:22","type":""},{"name":"value2","nativeSrc":"9773:6:22","nodeType":"YulTypedName","src":"9773:6:22","type":""},{"name":"value3","nativeSrc":"9781:6:22","nodeType":"YulTypedName","src":"9781:6:22","type":""},{"name":"value4","nativeSrc":"9789:6:22","nodeType":"YulTypedName","src":"9789:6:22","type":""},{"name":"value5","nativeSrc":"9797:6:22","nodeType":"YulTypedName","src":"9797:6:22","type":""},{"name":"value6","nativeSrc":"9805:6:22","nodeType":"YulTypedName","src":"9805:6:22","type":""}],"src":"9646:1199:22"},{"body":{"nativeSrc":"10934:391:22","nodeType":"YulBlock","src":"10934:391:22","statements":[{"body":{"nativeSrc":"10980:83:22","nodeType":"YulBlock","src":"10980:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10982:77:22","nodeType":"YulIdentifier","src":"10982:77:22"},"nativeSrc":"10982:79:22","nodeType":"YulFunctionCall","src":"10982:79:22"},"nativeSrc":"10982:79:22","nodeType":"YulExpressionStatement","src":"10982:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10955:7:22","nodeType":"YulIdentifier","src":"10955:7:22"},{"name":"headStart","nativeSrc":"10964:9:22","nodeType":"YulIdentifier","src":"10964:9:22"}],"functionName":{"name":"sub","nativeSrc":"10951:3:22","nodeType":"YulIdentifier","src":"10951:3:22"},"nativeSrc":"10951:23:22","nodeType":"YulFunctionCall","src":"10951:23:22"},{"kind":"number","nativeSrc":"10976:2:22","nodeType":"YulLiteral","src":"10976:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10947:3:22","nodeType":"YulIdentifier","src":"10947:3:22"},"nativeSrc":"10947:32:22","nodeType":"YulFunctionCall","src":"10947:32:22"},"nativeSrc":"10944:119:22","nodeType":"YulIf","src":"10944:119:22"},{"nativeSrc":"11073:117:22","nodeType":"YulBlock","src":"11073:117:22","statements":[{"nativeSrc":"11088:15:22","nodeType":"YulVariableDeclaration","src":"11088:15:22","value":{"kind":"number","nativeSrc":"11102:1:22","nodeType":"YulLiteral","src":"11102:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11092:6:22","nodeType":"YulTypedName","src":"11092:6:22","type":""}]},{"nativeSrc":"11117:63:22","nodeType":"YulAssignment","src":"11117:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11152:9:22","nodeType":"YulIdentifier","src":"11152:9:22"},{"name":"offset","nativeSrc":"11163:6:22","nodeType":"YulIdentifier","src":"11163:6:22"}],"functionName":{"name":"add","nativeSrc":"11148:3:22","nodeType":"YulIdentifier","src":"11148:3:22"},"nativeSrc":"11148:22:22","nodeType":"YulFunctionCall","src":"11148:22:22"},{"name":"dataEnd","nativeSrc":"11172:7:22","nodeType":"YulIdentifier","src":"11172:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11127:20:22","nodeType":"YulIdentifier","src":"11127:20:22"},"nativeSrc":"11127:53:22","nodeType":"YulFunctionCall","src":"11127:53:22"},"variableNames":[{"name":"value0","nativeSrc":"11117:6:22","nodeType":"YulIdentifier","src":"11117:6:22"}]}]},{"nativeSrc":"11200:118:22","nodeType":"YulBlock","src":"11200:118:22","statements":[{"nativeSrc":"11215:16:22","nodeType":"YulVariableDeclaration","src":"11215:16:22","value":{"kind":"number","nativeSrc":"11229:2:22","nodeType":"YulLiteral","src":"11229:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11219:6:22","nodeType":"YulTypedName","src":"11219:6:22","type":""}]},{"nativeSrc":"11245:63:22","nodeType":"YulAssignment","src":"11245:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11280:9:22","nodeType":"YulIdentifier","src":"11280:9:22"},{"name":"offset","nativeSrc":"11291:6:22","nodeType":"YulIdentifier","src":"11291:6:22"}],"functionName":{"name":"add","nativeSrc":"11276:3:22","nodeType":"YulIdentifier","src":"11276:3:22"},"nativeSrc":"11276:22:22","nodeType":"YulFunctionCall","src":"11276:22:22"},{"name":"dataEnd","nativeSrc":"11300:7:22","nodeType":"YulIdentifier","src":"11300:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11255:20:22","nodeType":"YulIdentifier","src":"11255:20:22"},"nativeSrc":"11255:53:22","nodeType":"YulFunctionCall","src":"11255:53:22"},"variableNames":[{"name":"value1","nativeSrc":"11245:6:22","nodeType":"YulIdentifier","src":"11245:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"10851:474:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10896:9:22","nodeType":"YulTypedName","src":"10896:9:22","type":""},{"name":"dataEnd","nativeSrc":"10907:7:22","nodeType":"YulTypedName","src":"10907:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10919:6:22","nodeType":"YulTypedName","src":"10919:6:22","type":""},{"name":"value1","nativeSrc":"10927:6:22","nodeType":"YulTypedName","src":"10927:6:22","type":""}],"src":"10851:474:22"},{"body":{"nativeSrc":"11359:152:22","nodeType":"YulBlock","src":"11359:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11376:1:22","nodeType":"YulLiteral","src":"11376:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"11379:77:22","nodeType":"YulLiteral","src":"11379:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11369:6:22","nodeType":"YulIdentifier","src":"11369:6:22"},"nativeSrc":"11369:88:22","nodeType":"YulFunctionCall","src":"11369:88:22"},"nativeSrc":"11369:88:22","nodeType":"YulExpressionStatement","src":"11369:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11473:1:22","nodeType":"YulLiteral","src":"11473:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"11476:4:22","nodeType":"YulLiteral","src":"11476:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"11466:6:22","nodeType":"YulIdentifier","src":"11466:6:22"},"nativeSrc":"11466:15:22","nodeType":"YulFunctionCall","src":"11466:15:22"},"nativeSrc":"11466:15:22","nodeType":"YulExpressionStatement","src":"11466:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11497:1:22","nodeType":"YulLiteral","src":"11497:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"11500:4:22","nodeType":"YulLiteral","src":"11500:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11490:6:22","nodeType":"YulIdentifier","src":"11490:6:22"},"nativeSrc":"11490:15:22","nodeType":"YulFunctionCall","src":"11490:15:22"},"nativeSrc":"11490:15:22","nodeType":"YulExpressionStatement","src":"11490:15:22"}]},"name":"panic_error_0x22","nativeSrc":"11331:180:22","nodeType":"YulFunctionDefinition","src":"11331:180:22"},{"body":{"nativeSrc":"11568:269:22","nodeType":"YulBlock","src":"11568:269:22","statements":[{"nativeSrc":"11578:22:22","nodeType":"YulAssignment","src":"11578:22:22","value":{"arguments":[{"name":"data","nativeSrc":"11592:4:22","nodeType":"YulIdentifier","src":"11592:4:22"},{"kind":"number","nativeSrc":"11598:1:22","nodeType":"YulLiteral","src":"11598:1:22","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"11588:3:22","nodeType":"YulIdentifier","src":"11588:3:22"},"nativeSrc":"11588:12:22","nodeType":"YulFunctionCall","src":"11588:12:22"},"variableNames":[{"name":"length","nativeSrc":"11578:6:22","nodeType":"YulIdentifier","src":"11578:6:22"}]},{"nativeSrc":"11609:38:22","nodeType":"YulVariableDeclaration","src":"11609:38:22","value":{"arguments":[{"name":"data","nativeSrc":"11639:4:22","nodeType":"YulIdentifier","src":"11639:4:22"},{"kind":"number","nativeSrc":"11645:1:22","nodeType":"YulLiteral","src":"11645:1:22","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11635:3:22","nodeType":"YulIdentifier","src":"11635:3:22"},"nativeSrc":"11635:12:22","nodeType":"YulFunctionCall","src":"11635:12:22"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"11613:18:22","nodeType":"YulTypedName","src":"11613:18:22","type":""}]},{"body":{"nativeSrc":"11686:51:22","nodeType":"YulBlock","src":"11686:51:22","statements":[{"nativeSrc":"11700:27:22","nodeType":"YulAssignment","src":"11700:27:22","value":{"arguments":[{"name":"length","nativeSrc":"11714:6:22","nodeType":"YulIdentifier","src":"11714:6:22"},{"kind":"number","nativeSrc":"11722:4:22","nodeType":"YulLiteral","src":"11722:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"11710:3:22","nodeType":"YulIdentifier","src":"11710:3:22"},"nativeSrc":"11710:17:22","nodeType":"YulFunctionCall","src":"11710:17:22"},"variableNames":[{"name":"length","nativeSrc":"11700:6:22","nodeType":"YulIdentifier","src":"11700:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11666:18:22","nodeType":"YulIdentifier","src":"11666:18:22"}],"functionName":{"name":"iszero","nativeSrc":"11659:6:22","nodeType":"YulIdentifier","src":"11659:6:22"},"nativeSrc":"11659:26:22","nodeType":"YulFunctionCall","src":"11659:26:22"},"nativeSrc":"11656:81:22","nodeType":"YulIf","src":"11656:81:22"},{"body":{"nativeSrc":"11789:42:22","nodeType":"YulBlock","src":"11789:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"11803:16:22","nodeType":"YulIdentifier","src":"11803:16:22"},"nativeSrc":"11803:18:22","nodeType":"YulFunctionCall","src":"11803:18:22"},"nativeSrc":"11803:18:22","nodeType":"YulExpressionStatement","src":"11803:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11753:18:22","nodeType":"YulIdentifier","src":"11753:18:22"},{"arguments":[{"name":"length","nativeSrc":"11776:6:22","nodeType":"YulIdentifier","src":"11776:6:22"},{"kind":"number","nativeSrc":"11784:2:22","nodeType":"YulLiteral","src":"11784:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11773:2:22","nodeType":"YulIdentifier","src":"11773:2:22"},"nativeSrc":"11773:14:22","nodeType":"YulFunctionCall","src":"11773:14:22"}],"functionName":{"name":"eq","nativeSrc":"11750:2:22","nodeType":"YulIdentifier","src":"11750:2:22"},"nativeSrc":"11750:38:22","nodeType":"YulFunctionCall","src":"11750:38:22"},"nativeSrc":"11747:84:22","nodeType":"YulIf","src":"11747:84:22"}]},"name":"extract_byte_array_length","nativeSrc":"11517:320:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"11552:4:22","nodeType":"YulTypedName","src":"11552:4:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11561:6:22","nodeType":"YulTypedName","src":"11561:6:22","type":""}],"src":"11517:320:22"},{"body":{"nativeSrc":"11949:64:22","nodeType":"YulBlock","src":"11949:64:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11971:6:22","nodeType":"YulIdentifier","src":"11971:6:22"},{"kind":"number","nativeSrc":"11979:1:22","nodeType":"YulLiteral","src":"11979:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11967:3:22","nodeType":"YulIdentifier","src":"11967:3:22"},"nativeSrc":"11967:14:22","nodeType":"YulFunctionCall","src":"11967:14:22"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nativeSrc":"11983:22:22","nodeType":"YulLiteral","src":"11983:22:22","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nativeSrc":"11960:6:22","nodeType":"YulIdentifier","src":"11960:6:22"},"nativeSrc":"11960:46:22","nodeType":"YulFunctionCall","src":"11960:46:22"},"nativeSrc":"11960:46:22","nodeType":"YulExpressionStatement","src":"11960:46:22"}]},"name":"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","nativeSrc":"11843:170:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11941:6:22","nodeType":"YulTypedName","src":"11941:6:22","type":""}],"src":"11843:170:22"},{"body":{"nativeSrc":"12165:220:22","nodeType":"YulBlock","src":"12165:220:22","statements":[{"nativeSrc":"12175:74:22","nodeType":"YulAssignment","src":"12175:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"12241:3:22","nodeType":"YulIdentifier","src":"12241:3:22"},{"kind":"number","nativeSrc":"12246:2:22","nodeType":"YulLiteral","src":"12246:2:22","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12182:58:22","nodeType":"YulIdentifier","src":"12182:58:22"},"nativeSrc":"12182:67:22","nodeType":"YulFunctionCall","src":"12182:67:22"},"variableNames":[{"name":"pos","nativeSrc":"12175:3:22","nodeType":"YulIdentifier","src":"12175:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"12347:3:22","nodeType":"YulIdentifier","src":"12347:3:22"}],"functionName":{"name":"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","nativeSrc":"12258:88:22","nodeType":"YulIdentifier","src":"12258:88:22"},"nativeSrc":"12258:93:22","nodeType":"YulFunctionCall","src":"12258:93:22"},"nativeSrc":"12258:93:22","nodeType":"YulExpressionStatement","src":"12258:93:22"},{"nativeSrc":"12360:19:22","nodeType":"YulAssignment","src":"12360:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"12371:3:22","nodeType":"YulIdentifier","src":"12371:3:22"},{"kind":"number","nativeSrc":"12376:2:22","nodeType":"YulLiteral","src":"12376:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12367:3:22","nodeType":"YulIdentifier","src":"12367:3:22"},"nativeSrc":"12367:12:22","nodeType":"YulFunctionCall","src":"12367:12:22"},"variableNames":[{"name":"end","nativeSrc":"12360:3:22","nodeType":"YulIdentifier","src":"12360:3:22"}]}]},"name":"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack","nativeSrc":"12019:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12153:3:22","nodeType":"YulTypedName","src":"12153:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12161:3:22","nodeType":"YulTypedName","src":"12161:3:22","type":""}],"src":"12019:366:22"},{"body":{"nativeSrc":"12562:248:22","nodeType":"YulBlock","src":"12562:248:22","statements":[{"nativeSrc":"12572:26:22","nodeType":"YulAssignment","src":"12572:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"12584:9:22","nodeType":"YulIdentifier","src":"12584:9:22"},{"kind":"number","nativeSrc":"12595:2:22","nodeType":"YulLiteral","src":"12595:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12580:3:22","nodeType":"YulIdentifier","src":"12580:3:22"},"nativeSrc":"12580:18:22","nodeType":"YulFunctionCall","src":"12580:18:22"},"variableNames":[{"name":"tail","nativeSrc":"12572:4:22","nodeType":"YulIdentifier","src":"12572:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12619:9:22","nodeType":"YulIdentifier","src":"12619:9:22"},{"kind":"number","nativeSrc":"12630:1:22","nodeType":"YulLiteral","src":"12630:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12615:3:22","nodeType":"YulIdentifier","src":"12615:3:22"},"nativeSrc":"12615:17:22","nodeType":"YulFunctionCall","src":"12615:17:22"},{"arguments":[{"name":"tail","nativeSrc":"12638:4:22","nodeType":"YulIdentifier","src":"12638:4:22"},{"name":"headStart","nativeSrc":"12644:9:22","nodeType":"YulIdentifier","src":"12644:9:22"}],"functionName":{"name":"sub","nativeSrc":"12634:3:22","nodeType":"YulIdentifier","src":"12634:3:22"},"nativeSrc":"12634:20:22","nodeType":"YulFunctionCall","src":"12634:20:22"}],"functionName":{"name":"mstore","nativeSrc":"12608:6:22","nodeType":"YulIdentifier","src":"12608:6:22"},"nativeSrc":"12608:47:22","nodeType":"YulFunctionCall","src":"12608:47:22"},"nativeSrc":"12608:47:22","nodeType":"YulExpressionStatement","src":"12608:47:22"},{"nativeSrc":"12664:139:22","nodeType":"YulAssignment","src":"12664:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"12798:4:22","nodeType":"YulIdentifier","src":"12798:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack","nativeSrc":"12672:124:22","nodeType":"YulIdentifier","src":"12672:124:22"},"nativeSrc":"12672:131:22","nodeType":"YulFunctionCall","src":"12672:131:22"},"variableNames":[{"name":"tail","nativeSrc":"12664:4:22","nodeType":"YulIdentifier","src":"12664:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12391:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12542:9:22","nodeType":"YulTypedName","src":"12542:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12557:4:22","nodeType":"YulTypedName","src":"12557:4:22","type":""}],"src":"12391:419:22"},{"body":{"nativeSrc":"12844:152:22","nodeType":"YulBlock","src":"12844:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12861:1:22","nodeType":"YulLiteral","src":"12861:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"12864:77:22","nodeType":"YulLiteral","src":"12864:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12854:6:22","nodeType":"YulIdentifier","src":"12854:6:22"},"nativeSrc":"12854:88:22","nodeType":"YulFunctionCall","src":"12854:88:22"},"nativeSrc":"12854:88:22","nodeType":"YulExpressionStatement","src":"12854:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12958:1:22","nodeType":"YulLiteral","src":"12958:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"12961:4:22","nodeType":"YulLiteral","src":"12961:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"12951:6:22","nodeType":"YulIdentifier","src":"12951:6:22"},"nativeSrc":"12951:15:22","nodeType":"YulFunctionCall","src":"12951:15:22"},"nativeSrc":"12951:15:22","nodeType":"YulExpressionStatement","src":"12951:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12982:1:22","nodeType":"YulLiteral","src":"12982:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"12985:4:22","nodeType":"YulLiteral","src":"12985:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12975:6:22","nodeType":"YulIdentifier","src":"12975:6:22"},"nativeSrc":"12975:15:22","nodeType":"YulFunctionCall","src":"12975:15:22"},"nativeSrc":"12975:15:22","nodeType":"YulExpressionStatement","src":"12975:15:22"}]},"name":"panic_error_0x41","nativeSrc":"12816:180:22","nodeType":"YulFunctionDefinition","src":"12816:180:22"},{"body":{"nativeSrc":"13240:537:22","nodeType":"YulBlock","src":"13240:537:22","statements":[{"nativeSrc":"13250:27:22","nodeType":"YulAssignment","src":"13250:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"13262:9:22","nodeType":"YulIdentifier","src":"13262:9:22"},{"kind":"number","nativeSrc":"13273:3:22","nodeType":"YulLiteral","src":"13273:3:22","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"13258:3:22","nodeType":"YulIdentifier","src":"13258:3:22"},"nativeSrc":"13258:19:22","nodeType":"YulFunctionCall","src":"13258:19:22"},"variableNames":[{"name":"tail","nativeSrc":"13250:4:22","nodeType":"YulIdentifier","src":"13250:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13331:6:22","nodeType":"YulIdentifier","src":"13331:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"13344:9:22","nodeType":"YulIdentifier","src":"13344:9:22"},{"kind":"number","nativeSrc":"13355:1:22","nodeType":"YulLiteral","src":"13355:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13340:3:22","nodeType":"YulIdentifier","src":"13340:3:22"},"nativeSrc":"13340:17:22","nodeType":"YulFunctionCall","src":"13340:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"13287:43:22","nodeType":"YulIdentifier","src":"13287:43:22"},"nativeSrc":"13287:71:22","nodeType":"YulFunctionCall","src":"13287:71:22"},"nativeSrc":"13287:71:22","nodeType":"YulExpressionStatement","src":"13287:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13412:6:22","nodeType":"YulIdentifier","src":"13412:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"13425:9:22","nodeType":"YulIdentifier","src":"13425:9:22"},{"kind":"number","nativeSrc":"13436:2:22","nodeType":"YulLiteral","src":"13436:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13421:3:22","nodeType":"YulIdentifier","src":"13421:3:22"},"nativeSrc":"13421:18:22","nodeType":"YulFunctionCall","src":"13421:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13368:43:22","nodeType":"YulIdentifier","src":"13368:43:22"},"nativeSrc":"13368:72:22","nodeType":"YulFunctionCall","src":"13368:72:22"},"nativeSrc":"13368:72:22","nodeType":"YulExpressionStatement","src":"13368:72:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13494:6:22","nodeType":"YulIdentifier","src":"13494:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"13507:9:22","nodeType":"YulIdentifier","src":"13507:9:22"},{"kind":"number","nativeSrc":"13518:2:22","nodeType":"YulLiteral","src":"13518:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13503:3:22","nodeType":"YulIdentifier","src":"13503:3:22"},"nativeSrc":"13503:18:22","nodeType":"YulFunctionCall","src":"13503:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13450:43:22","nodeType":"YulIdentifier","src":"13450:43:22"},"nativeSrc":"13450:72:22","nodeType":"YulFunctionCall","src":"13450:72:22"},"nativeSrc":"13450:72:22","nodeType":"YulExpressionStatement","src":"13450:72:22"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"13576:6:22","nodeType":"YulIdentifier","src":"13576:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"13589:9:22","nodeType":"YulIdentifier","src":"13589:9:22"},{"kind":"number","nativeSrc":"13600:2:22","nodeType":"YulLiteral","src":"13600:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13585:3:22","nodeType":"YulIdentifier","src":"13585:3:22"},"nativeSrc":"13585:18:22","nodeType":"YulFunctionCall","src":"13585:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13532:43:22","nodeType":"YulIdentifier","src":"13532:43:22"},"nativeSrc":"13532:72:22","nodeType":"YulFunctionCall","src":"13532:72:22"},"nativeSrc":"13532:72:22","nodeType":"YulExpressionStatement","src":"13532:72:22"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"13658:6:22","nodeType":"YulIdentifier","src":"13658:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"13671:9:22","nodeType":"YulIdentifier","src":"13671:9:22"},{"kind":"number","nativeSrc":"13682:3:22","nodeType":"YulLiteral","src":"13682:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13667:3:22","nodeType":"YulIdentifier","src":"13667:3:22"},"nativeSrc":"13667:19:22","nodeType":"YulFunctionCall","src":"13667:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13614:43:22","nodeType":"YulIdentifier","src":"13614:43:22"},"nativeSrc":"13614:73:22","nodeType":"YulFunctionCall","src":"13614:73:22"},"nativeSrc":"13614:73:22","nodeType":"YulExpressionStatement","src":"13614:73:22"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"13741:6:22","nodeType":"YulIdentifier","src":"13741:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"13754:9:22","nodeType":"YulIdentifier","src":"13754:9:22"},{"kind":"number","nativeSrc":"13765:3:22","nodeType":"YulLiteral","src":"13765:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"13750:3:22","nodeType":"YulIdentifier","src":"13750:3:22"},"nativeSrc":"13750:19:22","nodeType":"YulFunctionCall","src":"13750:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13697:43:22","nodeType":"YulIdentifier","src":"13697:43:22"},"nativeSrc":"13697:73:22","nodeType":"YulFunctionCall","src":"13697:73:22"},"nativeSrc":"13697:73:22","nodeType":"YulExpressionStatement","src":"13697:73:22"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13002:775:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13172:9:22","nodeType":"YulTypedName","src":"13172:9:22","type":""},{"name":"value5","nativeSrc":"13184:6:22","nodeType":"YulTypedName","src":"13184:6:22","type":""},{"name":"value4","nativeSrc":"13192:6:22","nodeType":"YulTypedName","src":"13192:6:22","type":""},{"name":"value3","nativeSrc":"13200:6:22","nodeType":"YulTypedName","src":"13200:6:22","type":""},{"name":"value2","nativeSrc":"13208:6:22","nodeType":"YulTypedName","src":"13208:6:22","type":""},{"name":"value1","nativeSrc":"13216:6:22","nodeType":"YulTypedName","src":"13216:6:22","type":""},{"name":"value0","nativeSrc":"13224:6:22","nodeType":"YulTypedName","src":"13224:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13235:4:22","nodeType":"YulTypedName","src":"13235:4:22","type":""}],"src":"13002:775:22"},{"body":{"nativeSrc":"13909:206:22","nodeType":"YulBlock","src":"13909:206:22","statements":[{"nativeSrc":"13919:26:22","nodeType":"YulAssignment","src":"13919:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"13931:9:22","nodeType":"YulIdentifier","src":"13931:9:22"},{"kind":"number","nativeSrc":"13942:2:22","nodeType":"YulLiteral","src":"13942:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13927:3:22","nodeType":"YulIdentifier","src":"13927:3:22"},"nativeSrc":"13927:18:22","nodeType":"YulFunctionCall","src":"13927:18:22"},"variableNames":[{"name":"tail","nativeSrc":"13919:4:22","nodeType":"YulIdentifier","src":"13919:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13999:6:22","nodeType":"YulIdentifier","src":"13999:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"14012:9:22","nodeType":"YulIdentifier","src":"14012:9:22"},{"kind":"number","nativeSrc":"14023:1:22","nodeType":"YulLiteral","src":"14023:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14008:3:22","nodeType":"YulIdentifier","src":"14008:3:22"},"nativeSrc":"14008:17:22","nodeType":"YulFunctionCall","src":"14008:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13955:43:22","nodeType":"YulIdentifier","src":"13955:43:22"},"nativeSrc":"13955:71:22","nodeType":"YulFunctionCall","src":"13955:71:22"},"nativeSrc":"13955:71:22","nodeType":"YulExpressionStatement","src":"13955:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14080:6:22","nodeType":"YulIdentifier","src":"14080:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"14093:9:22","nodeType":"YulIdentifier","src":"14093:9:22"},{"kind":"number","nativeSrc":"14104:2:22","nodeType":"YulLiteral","src":"14104:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14089:3:22","nodeType":"YulIdentifier","src":"14089:3:22"},"nativeSrc":"14089:18:22","nodeType":"YulFunctionCall","src":"14089:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14036:43:22","nodeType":"YulIdentifier","src":"14036:43:22"},"nativeSrc":"14036:72:22","nodeType":"YulFunctionCall","src":"14036:72:22"},"nativeSrc":"14036:72:22","nodeType":"YulExpressionStatement","src":"14036:72:22"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"13783:332:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13873:9:22","nodeType":"YulTypedName","src":"13873:9:22","type":""},{"name":"value1","nativeSrc":"13885:6:22","nodeType":"YulTypedName","src":"13885:6:22","type":""},{"name":"value0","nativeSrc":"13893:6:22","nodeType":"YulTypedName","src":"13893:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13904:4:22","nodeType":"YulTypedName","src":"13904:4:22","type":""}],"src":"13783:332:22"},{"body":{"nativeSrc":"14275:288:22","nodeType":"YulBlock","src":"14275:288:22","statements":[{"nativeSrc":"14285:26:22","nodeType":"YulAssignment","src":"14285:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"14297:9:22","nodeType":"YulIdentifier","src":"14297:9:22"},{"kind":"number","nativeSrc":"14308:2:22","nodeType":"YulLiteral","src":"14308:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14293:3:22","nodeType":"YulIdentifier","src":"14293:3:22"},"nativeSrc":"14293:18:22","nodeType":"YulFunctionCall","src":"14293:18:22"},"variableNames":[{"name":"tail","nativeSrc":"14285:4:22","nodeType":"YulIdentifier","src":"14285:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14365:6:22","nodeType":"YulIdentifier","src":"14365:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"14378:9:22","nodeType":"YulIdentifier","src":"14378:9:22"},{"kind":"number","nativeSrc":"14389:1:22","nodeType":"YulLiteral","src":"14389:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14374:3:22","nodeType":"YulIdentifier","src":"14374:3:22"},"nativeSrc":"14374:17:22","nodeType":"YulFunctionCall","src":"14374:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14321:43:22","nodeType":"YulIdentifier","src":"14321:43:22"},"nativeSrc":"14321:71:22","nodeType":"YulFunctionCall","src":"14321:71:22"},"nativeSrc":"14321:71:22","nodeType":"YulExpressionStatement","src":"14321:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14446:6:22","nodeType":"YulIdentifier","src":"14446:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"14459:9:22","nodeType":"YulIdentifier","src":"14459:9:22"},{"kind":"number","nativeSrc":"14470:2:22","nodeType":"YulLiteral","src":"14470:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14455:3:22","nodeType":"YulIdentifier","src":"14455:3:22"},"nativeSrc":"14455:18:22","nodeType":"YulFunctionCall","src":"14455:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14402:43:22","nodeType":"YulIdentifier","src":"14402:43:22"},"nativeSrc":"14402:72:22","nodeType":"YulFunctionCall","src":"14402:72:22"},"nativeSrc":"14402:72:22","nodeType":"YulExpressionStatement","src":"14402:72:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14528:6:22","nodeType":"YulIdentifier","src":"14528:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"14541:9:22","nodeType":"YulIdentifier","src":"14541:9:22"},{"kind":"number","nativeSrc":"14552:2:22","nodeType":"YulLiteral","src":"14552:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14537:3:22","nodeType":"YulIdentifier","src":"14537:3:22"},"nativeSrc":"14537:18:22","nodeType":"YulFunctionCall","src":"14537:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14484:43:22","nodeType":"YulIdentifier","src":"14484:43:22"},"nativeSrc":"14484:72:22","nodeType":"YulFunctionCall","src":"14484:72:22"},"nativeSrc":"14484:72:22","nodeType":"YulExpressionStatement","src":"14484:72:22"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"14121:442:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14231:9:22","nodeType":"YulTypedName","src":"14231:9:22","type":""},{"name":"value2","nativeSrc":"14243:6:22","nodeType":"YulTypedName","src":"14243:6:22","type":""},{"name":"value1","nativeSrc":"14251:6:22","nodeType":"YulTypedName","src":"14251:6:22","type":""},{"name":"value0","nativeSrc":"14259:6:22","nodeType":"YulTypedName","src":"14259:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14270:4:22","nodeType":"YulTypedName","src":"14270:4:22","type":""}],"src":"14121:442:22"},{"body":{"nativeSrc":"14597:152:22","nodeType":"YulBlock","src":"14597:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14614:1:22","nodeType":"YulLiteral","src":"14614:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"14617:77:22","nodeType":"YulLiteral","src":"14617:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14607:6:22","nodeType":"YulIdentifier","src":"14607:6:22"},"nativeSrc":"14607:88:22","nodeType":"YulFunctionCall","src":"14607:88:22"},"nativeSrc":"14607:88:22","nodeType":"YulExpressionStatement","src":"14607:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14711:1:22","nodeType":"YulLiteral","src":"14711:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"14714:4:22","nodeType":"YulLiteral","src":"14714:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"14704:6:22","nodeType":"YulIdentifier","src":"14704:6:22"},"nativeSrc":"14704:15:22","nodeType":"YulFunctionCall","src":"14704:15:22"},"nativeSrc":"14704:15:22","nodeType":"YulExpressionStatement","src":"14704:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14735:1:22","nodeType":"YulLiteral","src":"14735:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"14738:4:22","nodeType":"YulLiteral","src":"14738:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14728:6:22","nodeType":"YulIdentifier","src":"14728:6:22"},"nativeSrc":"14728:15:22","nodeType":"YulFunctionCall","src":"14728:15:22"},"nativeSrc":"14728:15:22","nodeType":"YulExpressionStatement","src":"14728:15:22"}]},"name":"panic_error_0x11","nativeSrc":"14569:180:22","nodeType":"YulFunctionDefinition","src":"14569:180:22"},{"body":{"nativeSrc":"14799:147:22","nodeType":"YulBlock","src":"14799:147:22","statements":[{"nativeSrc":"14809:25:22","nodeType":"YulAssignment","src":"14809:25:22","value":{"arguments":[{"name":"x","nativeSrc":"14832:1:22","nodeType":"YulIdentifier","src":"14832:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14814:17:22","nodeType":"YulIdentifier","src":"14814:17:22"},"nativeSrc":"14814:20:22","nodeType":"YulFunctionCall","src":"14814:20:22"},"variableNames":[{"name":"x","nativeSrc":"14809:1:22","nodeType":"YulIdentifier","src":"14809:1:22"}]},{"nativeSrc":"14843:25:22","nodeType":"YulAssignment","src":"14843:25:22","value":{"arguments":[{"name":"y","nativeSrc":"14866:1:22","nodeType":"YulIdentifier","src":"14866:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14848:17:22","nodeType":"YulIdentifier","src":"14848:17:22"},"nativeSrc":"14848:20:22","nodeType":"YulFunctionCall","src":"14848:20:22"},"variableNames":[{"name":"y","nativeSrc":"14843:1:22","nodeType":"YulIdentifier","src":"14843:1:22"}]},{"nativeSrc":"14877:16:22","nodeType":"YulAssignment","src":"14877:16:22","value":{"arguments":[{"name":"x","nativeSrc":"14888:1:22","nodeType":"YulIdentifier","src":"14888:1:22"},{"name":"y","nativeSrc":"14891:1:22","nodeType":"YulIdentifier","src":"14891:1:22"}],"functionName":{"name":"add","nativeSrc":"14884:3:22","nodeType":"YulIdentifier","src":"14884:3:22"},"nativeSrc":"14884:9:22","nodeType":"YulFunctionCall","src":"14884:9:22"},"variableNames":[{"name":"sum","nativeSrc":"14877:3:22","nodeType":"YulIdentifier","src":"14877:3:22"}]},{"body":{"nativeSrc":"14917:22:22","nodeType":"YulBlock","src":"14917:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14919:16:22","nodeType":"YulIdentifier","src":"14919:16:22"},"nativeSrc":"14919:18:22","nodeType":"YulFunctionCall","src":"14919:18:22"},"nativeSrc":"14919:18:22","nodeType":"YulExpressionStatement","src":"14919:18:22"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"14909:1:22","nodeType":"YulIdentifier","src":"14909:1:22"},{"name":"sum","nativeSrc":"14912:3:22","nodeType":"YulIdentifier","src":"14912:3:22"}],"functionName":{"name":"gt","nativeSrc":"14906:2:22","nodeType":"YulIdentifier","src":"14906:2:22"},"nativeSrc":"14906:10:22","nodeType":"YulFunctionCall","src":"14906:10:22"},"nativeSrc":"14903:36:22","nodeType":"YulIf","src":"14903:36:22"}]},"name":"checked_add_t_uint256","nativeSrc":"14755:191:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14786:1:22","nodeType":"YulTypedName","src":"14786:1:22","type":""},{"name":"y","nativeSrc":"14789:1:22","nodeType":"YulTypedName","src":"14789:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"14795:3:22","nodeType":"YulTypedName","src":"14795:3:22","type":""}],"src":"14755:191:22"},{"body":{"nativeSrc":"15162:454:22","nodeType":"YulBlock","src":"15162:454:22","statements":[{"nativeSrc":"15172:27:22","nodeType":"YulAssignment","src":"15172:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"15184:9:22","nodeType":"YulIdentifier","src":"15184:9:22"},{"kind":"number","nativeSrc":"15195:3:22","nodeType":"YulLiteral","src":"15195:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"15180:3:22","nodeType":"YulIdentifier","src":"15180:3:22"},"nativeSrc":"15180:19:22","nodeType":"YulFunctionCall","src":"15180:19:22"},"variableNames":[{"name":"tail","nativeSrc":"15172:4:22","nodeType":"YulIdentifier","src":"15172:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15253:6:22","nodeType":"YulIdentifier","src":"15253:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"15266:9:22","nodeType":"YulIdentifier","src":"15266:9:22"},{"kind":"number","nativeSrc":"15277:1:22","nodeType":"YulLiteral","src":"15277:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15262:3:22","nodeType":"YulIdentifier","src":"15262:3:22"},"nativeSrc":"15262:17:22","nodeType":"YulFunctionCall","src":"15262:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15209:43:22","nodeType":"YulIdentifier","src":"15209:43:22"},"nativeSrc":"15209:71:22","nodeType":"YulFunctionCall","src":"15209:71:22"},"nativeSrc":"15209:71:22","nodeType":"YulExpressionStatement","src":"15209:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15334:6:22","nodeType":"YulIdentifier","src":"15334:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"15347:9:22","nodeType":"YulIdentifier","src":"15347:9:22"},{"kind":"number","nativeSrc":"15358:2:22","nodeType":"YulLiteral","src":"15358:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15343:3:22","nodeType":"YulIdentifier","src":"15343:3:22"},"nativeSrc":"15343:18:22","nodeType":"YulFunctionCall","src":"15343:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15290:43:22","nodeType":"YulIdentifier","src":"15290:43:22"},"nativeSrc":"15290:72:22","nodeType":"YulFunctionCall","src":"15290:72:22"},"nativeSrc":"15290:72:22","nodeType":"YulExpressionStatement","src":"15290:72:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15416:6:22","nodeType":"YulIdentifier","src":"15416:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"15429:9:22","nodeType":"YulIdentifier","src":"15429:9:22"},{"kind":"number","nativeSrc":"15440:2:22","nodeType":"YulLiteral","src":"15440:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15425:3:22","nodeType":"YulIdentifier","src":"15425:3:22"},"nativeSrc":"15425:18:22","nodeType":"YulFunctionCall","src":"15425:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15372:43:22","nodeType":"YulIdentifier","src":"15372:43:22"},"nativeSrc":"15372:72:22","nodeType":"YulFunctionCall","src":"15372:72:22"},"nativeSrc":"15372:72:22","nodeType":"YulExpressionStatement","src":"15372:72:22"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"15498:6:22","nodeType":"YulIdentifier","src":"15498:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"15511:9:22","nodeType":"YulIdentifier","src":"15511:9:22"},{"kind":"number","nativeSrc":"15522:2:22","nodeType":"YulLiteral","src":"15522:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15507:3:22","nodeType":"YulIdentifier","src":"15507:3:22"},"nativeSrc":"15507:18:22","nodeType":"YulFunctionCall","src":"15507:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15454:43:22","nodeType":"YulIdentifier","src":"15454:43:22"},"nativeSrc":"15454:72:22","nodeType":"YulFunctionCall","src":"15454:72:22"},"nativeSrc":"15454:72:22","nodeType":"YulExpressionStatement","src":"15454:72:22"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"15580:6:22","nodeType":"YulIdentifier","src":"15580:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"15593:9:22","nodeType":"YulIdentifier","src":"15593:9:22"},{"kind":"number","nativeSrc":"15604:3:22","nodeType":"YulLiteral","src":"15604:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15589:3:22","nodeType":"YulIdentifier","src":"15589:3:22"},"nativeSrc":"15589:19:22","nodeType":"YulFunctionCall","src":"15589:19:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15536:43:22","nodeType":"YulIdentifier","src":"15536:43:22"},"nativeSrc":"15536:73:22","nodeType":"YulFunctionCall","src":"15536:73:22"},"nativeSrc":"15536:73:22","nodeType":"YulExpressionStatement","src":"15536:73:22"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"14952:664:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15102:9:22","nodeType":"YulTypedName","src":"15102:9:22","type":""},{"name":"value4","nativeSrc":"15114:6:22","nodeType":"YulTypedName","src":"15114:6:22","type":""},{"name":"value3","nativeSrc":"15122:6:22","nodeType":"YulTypedName","src":"15122:6:22","type":""},{"name":"value2","nativeSrc":"15130:6:22","nodeType":"YulTypedName","src":"15130:6:22","type":""},{"name":"value1","nativeSrc":"15138:6:22","nodeType":"YulTypedName","src":"15138:6:22","type":""},{"name":"value0","nativeSrc":"15146:6:22","nodeType":"YulTypedName","src":"15146:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15157:4:22","nodeType":"YulTypedName","src":"15157:4:22","type":""}],"src":"14952:664:22"},{"body":{"nativeSrc":"15800:367:22","nodeType":"YulBlock","src":"15800:367:22","statements":[{"nativeSrc":"15810:27:22","nodeType":"YulAssignment","src":"15810:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"15822:9:22","nodeType":"YulIdentifier","src":"15822:9:22"},{"kind":"number","nativeSrc":"15833:3:22","nodeType":"YulLiteral","src":"15833:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15818:3:22","nodeType":"YulIdentifier","src":"15818:3:22"},"nativeSrc":"15818:19:22","nodeType":"YulFunctionCall","src":"15818:19:22"},"variableNames":[{"name":"tail","nativeSrc":"15810:4:22","nodeType":"YulIdentifier","src":"15810:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15891:6:22","nodeType":"YulIdentifier","src":"15891:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"15904:9:22","nodeType":"YulIdentifier","src":"15904:9:22"},{"kind":"number","nativeSrc":"15915:1:22","nodeType":"YulLiteral","src":"15915:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15900:3:22","nodeType":"YulIdentifier","src":"15900:3:22"},"nativeSrc":"15900:17:22","nodeType":"YulFunctionCall","src":"15900:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15847:43:22","nodeType":"YulIdentifier","src":"15847:43:22"},"nativeSrc":"15847:71:22","nodeType":"YulFunctionCall","src":"15847:71:22"},"nativeSrc":"15847:71:22","nodeType":"YulExpressionStatement","src":"15847:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15968:6:22","nodeType":"YulIdentifier","src":"15968:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"15981:9:22","nodeType":"YulIdentifier","src":"15981:9:22"},{"kind":"number","nativeSrc":"15992:2:22","nodeType":"YulLiteral","src":"15992:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15977:3:22","nodeType":"YulIdentifier","src":"15977:3:22"},"nativeSrc":"15977:18:22","nodeType":"YulFunctionCall","src":"15977:18:22"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"15928:39:22","nodeType":"YulIdentifier","src":"15928:39:22"},"nativeSrc":"15928:68:22","nodeType":"YulFunctionCall","src":"15928:68:22"},"nativeSrc":"15928:68:22","nodeType":"YulExpressionStatement","src":"15928:68:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"16050:6:22","nodeType":"YulIdentifier","src":"16050:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"16063:9:22","nodeType":"YulIdentifier","src":"16063:9:22"},{"kind":"number","nativeSrc":"16074:2:22","nodeType":"YulLiteral","src":"16074:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16059:3:22","nodeType":"YulIdentifier","src":"16059:3:22"},"nativeSrc":"16059:18:22","nodeType":"YulFunctionCall","src":"16059:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"16006:43:22","nodeType":"YulIdentifier","src":"16006:43:22"},"nativeSrc":"16006:72:22","nodeType":"YulFunctionCall","src":"16006:72:22"},"nativeSrc":"16006:72:22","nodeType":"YulExpressionStatement","src":"16006:72:22"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"16132:6:22","nodeType":"YulIdentifier","src":"16132:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"16145:9:22","nodeType":"YulIdentifier","src":"16145:9:22"},{"kind":"number","nativeSrc":"16156:2:22","nodeType":"YulLiteral","src":"16156:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16141:3:22","nodeType":"YulIdentifier","src":"16141:3:22"},"nativeSrc":"16141:18:22","nodeType":"YulFunctionCall","src":"16141:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"16088:43:22","nodeType":"YulIdentifier","src":"16088:43:22"},"nativeSrc":"16088:72:22","nodeType":"YulFunctionCall","src":"16088:72:22"},"nativeSrc":"16088:72:22","nodeType":"YulExpressionStatement","src":"16088:72:22"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"15622:545:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15748:9:22","nodeType":"YulTypedName","src":"15748:9:22","type":""},{"name":"value3","nativeSrc":"15760:6:22","nodeType":"YulTypedName","src":"15760:6:22","type":""},{"name":"value2","nativeSrc":"15768:6:22","nodeType":"YulTypedName","src":"15768:6:22","type":""},{"name":"value1","nativeSrc":"15776:6:22","nodeType":"YulTypedName","src":"15776:6:22","type":""},{"name":"value0","nativeSrc":"15784:6:22","nodeType":"YulTypedName","src":"15784:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15795:4:22","nodeType":"YulTypedName","src":"15795:4:22","type":""}],"src":"15622:545:22"},{"body":{"nativeSrc":"16201:152:22","nodeType":"YulBlock","src":"16201:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16218:1:22","nodeType":"YulLiteral","src":"16218:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"16221:77:22","nodeType":"YulLiteral","src":"16221:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16211:6:22","nodeType":"YulIdentifier","src":"16211:6:22"},"nativeSrc":"16211:88:22","nodeType":"YulFunctionCall","src":"16211:88:22"},"nativeSrc":"16211:88:22","nodeType":"YulExpressionStatement","src":"16211:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16315:1:22","nodeType":"YulLiteral","src":"16315:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"16318:4:22","nodeType":"YulLiteral","src":"16318:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"16308:6:22","nodeType":"YulIdentifier","src":"16308:6:22"},"nativeSrc":"16308:15:22","nodeType":"YulFunctionCall","src":"16308:15:22"},"nativeSrc":"16308:15:22","nodeType":"YulExpressionStatement","src":"16308:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16339:1:22","nodeType":"YulLiteral","src":"16339:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"16342:4:22","nodeType":"YulLiteral","src":"16342:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16332:6:22","nodeType":"YulIdentifier","src":"16332:6:22"},"nativeSrc":"16332:15:22","nodeType":"YulFunctionCall","src":"16332:15:22"},"nativeSrc":"16332:15:22","nodeType":"YulExpressionStatement","src":"16332:15:22"}]},"name":"panic_error_0x21","nativeSrc":"16173:180:22","nodeType":"YulFunctionDefinition","src":"16173:180:22"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3178":[{"length":32,"start":3115}],"3180":[{"length":32,"start":3074}],"3182":[{"length":32,"start":2988}],"3184":[{"length":32,"start":5039}],"3186":[{"length":32,"start":5072}],"3189":[{"length":32,"start":3712}],"3192":[{"length":32,"start":3771}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad57806395d89b411161007157806395d89b41146102fe578063a9059cbb1461031c578063d505accf1461034c578063dd62ed3e14610368578063f2fde38b1461039857610121565b8063715018a6146102665780637ecebe001461027057806381a4af15146102a057806384b0196e146102bc5780638da5cb5b146102e057610121565b806323b872dd116100f457806323b872dd146101ae578063313ce567146101de5780633644e515146101fc57806340c10f191461021a57806370a082311461023657610121565b806306fdde0314610126578063095ea7b3146101445780630d1118ce1461017457806318160ddd14610190575b600080fd5b61012e6103b4565b60405161013b91906118bd565b60405180910390f35b61015e60048036038101906101599190611978565b610446565b60405161016b91906119d3565b60405180910390f35b61018e60048036038101906101899190611978565b610469565b005b6101986104c2565b6040516101a591906119fd565b60405180910390f35b6101c860048036038101906101c39190611a18565b6104cc565b6040516101d591906119d3565b60405180910390f35b6101e66104fb565b6040516101f39190611a87565b60405180910390f35b610204610504565b6040516102119190611abb565b60405180910390f35b610234600480360381019061022f9190611978565b610513565b005b610250600480360381019061024b9190611ad6565b610529565b60405161025d91906119fd565b60405180910390f35b61026e610571565b005b61028a60048036038101906102859190611ad6565b610585565b60405161029791906119fd565b60405180910390f35b6102ba60048036038101906102b59190611978565b610597565b005b6102c46105a5565b6040516102d79796959493929190611c0b565b60405180910390f35b6102e861064f565b6040516102f59190611c8f565b60405180910390f35b610306610679565b60405161031391906118bd565b60405180910390f35b61033660048036038101906103319190611978565b61070b565b60405161034391906119d3565b60405180910390f35b61036660048036038101906103619190611d02565b61072e565b005b610382600480360381019061037d9190611da4565b610876565b60405161038f91906119fd565b60405180910390f35b6103b260048036038101906103ad9190611ad6565b6108fd565b005b6060600380546103c390611e13565b80601f01602080910402602001604051908101604052809291908181526020018280546103ef90611e13565b801561043c5780601f106104115761010080835404028352916020019161043c565b820191906000526020600020905b81548152906001019060200180831161041f57829003601f168201915b5050505050905090565b600080610451610983565b905061045e81858561098b565b600191505092915050565b8061047383610529565b10156104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab90611e90565b60405180910390fd5b6104be828261099d565b5050565b6000600254905090565b6000806104d7610983565b90506104e4858285610a1f565b6104ef858585610ab4565b60019150509392505050565b60006012905090565b600061050e610ba8565b905090565b61051b610c5f565b6105258282610ce6565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610579610c5f565b6105836000610d68565b565b600061059082610e2e565b9050919050565b6105a18282610ce6565b5050565b6000606080600080600060606105b9610e77565b6105c1610eb2565b46306000801b600067ffffffffffffffff8111156105e2576105e1611eb0565b5b6040519080825280602002602001820160405280156106105781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461068890611e13565b80601f01602080910402602001604051908101604052809291908181526020018280546106b490611e13565b80156107015780601f106106d657610100808354040283529160200191610701565b820191906000526020600020905b8154815290600101906020018083116106e457829003601f168201915b5050505050905090565b600080610716610983565b9050610723818585610ab4565b600191505092915050565b8342111561077357836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161076a91906119fd565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107a28c610eed565b896040516020016107b896959493929190611edf565b60405160208183030381529060405280519060200120905060006107db82610f44565b905060006107eb82878787610f5e565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461085f57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610856929190611f40565b60405180910390fd5b61086a8a8a8a61098b565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610905610c5f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109775760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161096e9190611c8f565b60405180910390fd5b61098081610d68565b50565b600033905090565b6109988383836001610f8e565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a0f5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a069190611c8f565b60405180910390fd5b610a1b82600083611165565b5050565b6000610a2b8484610876565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610aae5781811015610a9e578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a9593929190611f69565b60405180910390fd5b610aad84848484036000610f8e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b265760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b1d9190611c8f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b985760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b8f9190611c8f565b60405180910390fd5b610ba3838383611165565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610c2457507f000000000000000000000000000000000000000000000000000000000000000046145b15610c51577f00000000000000000000000000000000000000000000000000000000000000009050610c5c565b610c5961138a565b90505b90565b610c67610983565b73ffffffffffffffffffffffffffffffffffffffff16610c8561064f565b73ffffffffffffffffffffffffffffffffffffffff1614610ce457610ca8610983565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cdb9190611c8f565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d585760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d4f9190611c8f565b60405180910390fd5b610d6460008383611165565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610ead60067f000000000000000000000000000000000000000000000000000000000000000061142090919063ffffffff16565b905090565b6060610ee860077f000000000000000000000000000000000000000000000000000000000000000061142090919063ffffffff16565b905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6000610f57610f51610ba8565b836114d0565b9050919050565b600080600080610f7088888888611511565b925092509250610f808282611605565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110005760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ff79190611c8f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110725760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110699190611c8f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561115f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161115691906119fd565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111b75780600260008282546111ab9190611fcf565b9250508190555061128a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611243578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161123a93929190611f69565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112d35780600260008282540392505081905550611320565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161137d91906119fd565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611405959493929190612003565b60405160208183030381529060405280519060200120905090565b606060ff60001b831461143d5761143683611769565b90506114ca565b81805461144990611e13565b80601f016020809104026020016040519081016040528092919081815260200182805461147590611e13565b80156114c25780601f10611497576101008083540402835291602001916114c2565b820191906000526020600020905b8154815290600101906020018083116114a557829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156115515760006003859250925092506115fb565b6000600188888888604051600081526020016040526040516115769493929190612056565b6020604051602081039080840390855afa158015611598573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115ec57600060016000801b935093509350506115fb565b8060008060001b935093509350505b9450945094915050565b600060038111156116195761161861209b565b5b82600381111561162c5761162b61209b565b5b031561176557600160038111156116465761164561209b565b5b8260038111156116595761165861209b565b5b03611690576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156116a4576116a361209b565b5b8260038111156116b7576116b661209b565b5b036116fc578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016116f391906119fd565b60405180910390fd5b60038081111561170f5761170e61209b565b5b8260038111156117225761172161209b565b5b0361176457806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161175b9190611abb565b60405180910390fd5b5b5050565b60606000611776836117dd565b90506000602067ffffffffffffffff81111561179557611794611eb0565b5b6040519080825280601f01601f1916602001820160405280156117c75781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f811115611824576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561186757808201518184015260208101905061184c565b60008484015250505050565b6000601f19601f8301169050919050565b600061188f8261182d565b6118998185611838565b93506118a9818560208601611849565b6118b281611873565b840191505092915050565b600060208201905081810360008301526118d78184611884565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061190f826118e4565b9050919050565b61191f81611904565b811461192a57600080fd5b50565b60008135905061193c81611916565b92915050565b6000819050919050565b61195581611942565b811461196057600080fd5b50565b6000813590506119728161194c565b92915050565b6000806040838503121561198f5761198e6118df565b5b600061199d8582860161192d565b92505060206119ae85828601611963565b9150509250929050565b60008115159050919050565b6119cd816119b8565b82525050565b60006020820190506119e860008301846119c4565b92915050565b6119f781611942565b82525050565b6000602082019050611a1260008301846119ee565b92915050565b600080600060608486031215611a3157611a306118df565b5b6000611a3f8682870161192d565b9350506020611a508682870161192d565b9250506040611a6186828701611963565b9150509250925092565b600060ff82169050919050565b611a8181611a6b565b82525050565b6000602082019050611a9c6000830184611a78565b92915050565b6000819050919050565b611ab581611aa2565b82525050565b6000602082019050611ad06000830184611aac565b92915050565b600060208284031215611aec57611aeb6118df565b5b6000611afa8482850161192d565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611b3881611b03565b82525050565b611b4781611904565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611b8281611942565b82525050565b6000611b948383611b79565b60208301905092915050565b6000602082019050919050565b6000611bb882611b4d565b611bc28185611b58565b9350611bcd83611b69565b8060005b83811015611bfe578151611be58882611b88565b9750611bf083611ba0565b925050600181019050611bd1565b5085935050505092915050565b600060e082019050611c20600083018a611b2f565b8181036020830152611c328189611884565b90508181036040830152611c468188611884565b9050611c5560608301876119ee565b611c626080830186611b3e565b611c6f60a0830185611aac565b81810360c0830152611c818184611bad565b905098975050505050505050565b6000602082019050611ca46000830184611b3e565b92915050565b611cb381611a6b565b8114611cbe57600080fd5b50565b600081359050611cd081611caa565b92915050565b611cdf81611aa2565b8114611cea57600080fd5b50565b600081359050611cfc81611cd6565b92915050565b600080600080600080600060e0888a031215611d2157611d206118df565b5b6000611d2f8a828b0161192d565b9750506020611d408a828b0161192d565b9650506040611d518a828b01611963565b9550506060611d628a828b01611963565b9450506080611d738a828b01611cc1565b93505060a0611d848a828b01611ced565b92505060c0611d958a828b01611ced565b91505092959891949750929550565b60008060408385031215611dbb57611dba6118df565b5b6000611dc98582860161192d565b9250506020611dda8582860161192d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e2b57607f821691505b602082108103611e3e57611e3d611de4565b5b50919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000611e7a601483611838565b9150611e8582611e44565b602082019050919050565b60006020820190508181036000830152611ea981611e6d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050611ef46000830189611aac565b611f016020830188611b3e565b611f0e6040830187611b3e565b611f1b60608301866119ee565b611f2860808301856119ee565b611f3560a08301846119ee565b979650505050505050565b6000604082019050611f556000830185611b3e565b611f626020830184611b3e565b9392505050565b6000606082019050611f7e6000830186611b3e565b611f8b60208301856119ee565b611f9860408301846119ee565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611fda82611942565b9150611fe583611942565b9250828201905080821115611ffd57611ffc611fa0565b5b92915050565b600060a0820190506120186000830188611aac565b6120256020830187611aac565b6120326040830186611aac565b61203f60608301856119ee565b61204c6080830184611b3e565b9695505050505050565b600060808201905061206b6000830187611aac565b6120786020830186611a78565b6120856040830185611aac565b6120926060830184611aac565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220487d16cfb7397aaaefaa06327d67caa16db992c6abc253dcfbc06a10f8155c2b64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x398 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x81A4AF15 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x236 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xD1118CE EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x190 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x198 PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH2 0x571 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C4 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x1D02 JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x382 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3C3 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3EF SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x43C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x411 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x43C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x41F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x451 PUSH2 0x983 JUMP JUMPDEST SWAP1 POP PUSH2 0x45E DUP2 DUP6 DUP6 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x473 DUP4 PUSH2 0x529 JUMP JUMPDEST LT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AB SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4BE DUP3 DUP3 PUSH2 0x99D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4D7 PUSH2 0x983 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E4 DUP6 DUP3 DUP6 PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x4EF DUP6 DUP6 DUP6 PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E PUSH2 0xBA8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x51B PUSH2 0xC5F JUMP JUMPDEST PUSH2 0x525 DUP3 DUP3 PUSH2 0xCE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x579 PUSH2 0xC5F JUMP JUMPDEST PUSH2 0x583 PUSH1 0x0 PUSH2 0xD68 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x590 DUP3 PUSH2 0xE2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A1 DUP3 DUP3 PUSH2 0xCE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x5B9 PUSH2 0xE77 JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0xEB2 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E2 JUMPI PUSH2 0x5E1 PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x610 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x688 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B4 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x701 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x701 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x716 PUSH2 0x983 JUMP JUMPDEST SWAP1 POP PUSH2 0x723 DUP2 DUP6 DUP6 PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x773 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x7A2 DUP13 PUSH2 0xEED JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x7DB DUP3 PUSH2 0xF44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7EB DUP3 DUP8 DUP8 DUP8 PUSH2 0xF5E JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x85F JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x856 SWAP3 SWAP2 SWAP1 PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x86A DUP11 DUP11 DUP11 PUSH2 0x98B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x905 PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x977 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96E SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x980 DUP2 PUSH2 0xD68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x998 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF8E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA0F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1B DUP3 PUSH1 0x0 DUP4 PUSH2 0x1165 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2B DUP5 DUP5 PUSH2 0x876 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xAAE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA9E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA95 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAAD DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xF8E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB26 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1D SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB98 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8F SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA3 DUP4 DUP4 DUP4 PUSH2 0x1165 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC24 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xC51 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xC5C JUMP JUMPDEST PUSH2 0xC59 PUSH2 0x138A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC67 PUSH2 0x983 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC85 PUSH2 0x64F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE4 JUMPI PUSH2 0xCA8 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD58 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4F SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD64 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1165 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEAD PUSH1 0x6 PUSH32 0x0 PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEE8 PUSH1 0x7 PUSH32 0x0 PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF57 PUSH2 0xF51 PUSH2 0xBA8 JUMP JUMPDEST DUP4 PUSH2 0x14D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xF70 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xF80 DUP3 DUP3 PUSH2 0x1605 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1000 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF7 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1072 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x115F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1156 SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B7 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x1FCF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1243 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D3 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1320 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x137D SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1405 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x143D JUMPI PUSH2 0x1436 DUP4 PUSH2 0x1769 JUMP JUMPDEST SWAP1 POP PUSH2 0x14CA JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1449 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1475 SWAP1 PUSH2 0x1E13 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1497 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1576 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1598 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15EC JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x15FB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1619 JUMPI PUSH2 0x1618 PUSH2 0x209B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x162C JUMPI PUSH2 0x162B PUSH2 0x209B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1765 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1646 JUMPI PUSH2 0x1645 PUSH2 0x209B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1659 JUMPI PUSH2 0x1658 PUSH2 0x209B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1690 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16A4 JUMPI PUSH2 0x16A3 PUSH2 0x209B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16B7 JUMPI PUSH2 0x16B6 PUSH2 0x209B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16FC JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F3 SWAP2 SWAP1 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x170F JUMPI PUSH2 0x170E PUSH2 0x209B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1722 JUMPI PUSH2 0x1721 PUSH2 0x209B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1764 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175B SWAP2 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1776 DUP4 PUSH2 0x17DD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1794 PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17C7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1824 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1867 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x184C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188F DUP3 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1899 DUP2 DUP6 PUSH2 0x1838 JUMP JUMPDEST SWAP4 POP PUSH2 0x18A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x18B2 DUP2 PUSH2 0x1873 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18D7 DUP2 DUP5 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190F DUP3 PUSH2 0x18E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x191F DUP2 PUSH2 0x1904 JUMP JUMPDEST DUP2 EQ PUSH2 0x192A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x193C DUP2 PUSH2 0x1916 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1955 DUP2 PUSH2 0x1942 JUMP JUMPDEST DUP2 EQ PUSH2 0x1960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1972 DUP2 PUSH2 0x194C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198F JUMPI PUSH2 0x198E PUSH2 0x18DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x199D DUP6 DUP3 DUP7 ADD PUSH2 0x192D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19AE DUP6 DUP3 DUP7 ADD PUSH2 0x1963 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CD DUP2 PUSH2 0x19B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19F7 DUP2 PUSH2 0x1942 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A12 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A31 JUMPI PUSH2 0x1A30 PUSH2 0x18DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A3F DUP7 DUP3 DUP8 ADD PUSH2 0x192D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A50 DUP7 DUP3 DUP8 ADD PUSH2 0x192D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A61 DUP7 DUP3 DUP8 ADD PUSH2 0x1963 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A81 DUP2 PUSH2 0x1A6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB5 DUP2 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEC JUMPI PUSH2 0x1AEB PUSH2 0x18DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AFA DUP5 DUP3 DUP6 ADD PUSH2 0x192D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B38 DUP2 PUSH2 0x1B03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B47 DUP2 PUSH2 0x1904 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B82 DUP2 PUSH2 0x1942 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B94 DUP4 DUP4 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB8 DUP3 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x1BC2 DUP2 DUP6 PUSH2 0x1B58 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BCD DUP4 PUSH2 0x1B69 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BFE JUMPI DUP2 MLOAD PUSH2 0x1BE5 DUP9 DUP3 PUSH2 0x1B88 JUMP JUMPDEST SWAP8 POP PUSH2 0x1BF0 DUP4 PUSH2 0x1BA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1BD1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1C20 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1B2F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 DUP10 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1C46 DUP2 DUP9 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C55 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x1C62 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1C6F PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1AAC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1C81 DUP2 DUP5 PUSH2 0x1BAD JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CB3 DUP2 PUSH2 0x1A6B JUMP JUMPDEST DUP2 EQ PUSH2 0x1CBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CD0 DUP2 PUSH2 0x1CAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CDF DUP2 PUSH2 0x1AA2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CFC DUP2 PUSH2 0x1CD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1D21 JUMPI PUSH2 0x1D20 PUSH2 0x18DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D2F DUP11 DUP3 DUP12 ADD PUSH2 0x192D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1D40 DUP11 DUP3 DUP12 ADD PUSH2 0x192D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1D51 DUP11 DUP3 DUP12 ADD PUSH2 0x1963 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1D62 DUP11 DUP3 DUP12 ADD PUSH2 0x1963 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1D73 DUP11 DUP3 DUP12 ADD PUSH2 0x1CC1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1D84 DUP11 DUP3 DUP12 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1D95 DUP11 DUP3 DUP12 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DBB JUMPI PUSH2 0x1DBA PUSH2 0x18DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DC9 DUP6 DUP3 DUP7 ADD PUSH2 0x192D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DDA DUP6 DUP3 DUP7 ADD PUSH2 0x192D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E2B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E3E JUMPI PUSH2 0x1E3D PUSH2 0x1DE4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7A PUSH1 0x14 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E85 DUP3 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EA9 DUP2 PUSH2 0x1E6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1EF4 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x1F01 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1F0E PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1F1B PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x1F28 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x1F35 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x19EE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1F62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B3E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F7E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1F8B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x1F98 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FDA DUP3 PUSH2 0x1942 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE5 DUP4 PUSH2 0x1942 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FFD JUMPI PUSH2 0x1FFC PUSH2 0x1FA0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2018 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x2025 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x2032 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x203F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x204C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1B3E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x206B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x2078 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A78 JUMP JUMPDEST PUSH2 0x2085 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x2092 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1AAC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE PUSH30 0x16CFB7397AAAEFAA06327D67CAA16DB992C6ABC253DCFBC06A10F8155C2B PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"345:996:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:91:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4124:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1060:166:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2933:99:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4924:249;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2784:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2738:114:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;643:95:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3095:118:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2368:103:0;;;:::i;:::-;;2480:145:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1234:100:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5257:580:15;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1693:87:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2041:95:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3418:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1726:695:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3663:142:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2626:220:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:91:3;1876:13;1909:5;1902:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:91;:::o;4124:190::-;4197:4;4214:13;4230:12;:10;:12::i;:::-;4214:28;;4253:31;4262:5;4269:7;4278:5;4253:8;:31::i;:::-;4302:4;4295:11;;;4124:190;;;;:::o;1060:166:20:-;1157:6;1138:15;1148:4;1138:9;:15::i;:::-;:25;;1130:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1199:19;1205:4;1211:6;1199:5;:19::i;:::-;1060:166;;:::o;2933:99:3:-;2985:7;3012:12;;3005:19;;2933:99;:::o;4924:249::-;5011:4;5028:15;5046:12;:10;:12::i;:::-;5028:30;;5069:37;5085:4;5091:7;5100:5;5069:15;:37::i;:::-;5117:26;5127:4;5133:2;5137:5;5117:9;:26::i;:::-;5161:4;5154:11;;;4924:249;;;;;:::o;2784:84::-;2833:5;2858:2;2851:9;;2784:84;:::o;2738:114:5:-;2797:7;2824:20;:18;:20::i;:::-;2817:27;;2738:114;:::o;643:95:20:-;1579:13:0;:11;:13::i;:::-;713:17:20::1;719:2;723:6;713:5;:17::i;:::-;643:95:::0;;:::o;3095:118:3:-;3160:7;3187:9;:18;3197:7;3187:18;;;;;;;;;;;;;;;;3180:25;;3095:118;;;:::o;2368:103:0:-;1579:13;:11;:13::i;:::-;2433:30:::1;2460:1;2433:18;:30::i;:::-;2368:103::o:0;2480:145:5:-;2571:7;2598:19;2611:5;2598:12;:19::i;:::-;2591:26;;2480:145;;;:::o;1234:100:20:-;1307:19;1313:4;1319:6;1307:5;:19::i;:::-;1234:100;;:::o;5257:580:15:-;5360:13;5388:18;5421:21;5457:15;5487:25;5527:12;5554:27;5662:13;:11;:13::i;:::-;5690:16;:14;:16::i;:::-;5721:13;5757:4;5785:1;5777:10;;5816:1;5802:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5609:220;;;;;;;;;;;;;;;;;;;;;5257:580;;;;;;;:::o;1693:87:0:-;1739:7;1766:6;;;;;;;;;;;1759:13;;1693:87;:::o;2041:95:3:-;2088:13;2121:7;2114:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2041:95;:::o;3418:182::-;3487:4;3504:13;3520:12;:10;:12::i;:::-;3504:28;;3543:27;3553:5;3560:2;3564:5;3543:9;:27::i;:::-;3588:4;3581:11;;;3418:182;;;;:::o;1726:695:5:-;1956:8;1938:15;:26;1934:99;;;2012:8;1988:33;;;;;;;;;;;:::i;:::-;;;;;;;;1934:99;2045:18;1045:95;2104:5;2111:7;2120:5;2127:16;2137:5;2127:9;:16::i;:::-;2145:8;2076:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2066:89;;;;;;2045:110;;2168:12;2183:28;2200:10;2183:16;:28::i;:::-;2168:43;;2224:14;2241:28;2255:4;2261:1;2264;2267;2241:13;:28::i;:::-;2224:45;;2294:5;2284:15;;:6;:15;;;2280:90;;2344:6;2352:5;2323:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2280:90;2382:31;2391:5;2398:7;2407:5;2382:8;:31::i;:::-;1923:498;;;1726:695;;;;;;;:::o;3663:142:3:-;3743:7;3770:11;:18;3782:5;3770:18;;;;;;;;;;;;;;;:27;3789:7;3770:27;;;;;;;;;;;;;;;;3763:34;;3663:142;;;;:::o;2626:220:0:-;1579:13;:11;:13::i;:::-;2731:1:::1;2711:22;;:8;:22;;::::0;2707:93:::1;;2785:1;2757:31;;;;;;;;;;;:::i;:::-;;;;;;;;2707:93;2810:28;2829:8;2810:18;:28::i;:::-;2626:220:::0;:::o;672:98:8:-;725:7;752:10;745:17;;672:98;:::o;8983:130:3:-;9068:37;9077:5;9084:7;9093:5;9100:4;9068:8;:37::i;:::-;8983:130;;;:::o;8219:211::-;8309:1;8290:21;;:7;:21;;;8286:91;;8362:1;8335:30;;;;;;;;;;;:::i;:::-;;;;;;;;8286:91;8387:35;8395:7;8412:1;8416:5;8387:7;:35::i;:::-;8219:211;;:::o;10715:486::-;10815:24;10842:25;10852:5;10859:7;10842:9;:25::i;:::-;10815:52;;10901:17;10882:16;:36;10878:316;;;10958:5;10939:16;:24;10935:132;;;11018:7;11027:16;11045:5;10991:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10935:132;11110:57;11119:5;11126:7;11154:5;11135:16;:24;11161:5;11110:8;:57::i;:::-;10878:316;10804:397;10715:486;;;:::o;5558:308::-;5658:1;5642:18;;:4;:18;;;5638:88;;5711:1;5684:30;;;;;;;;;;;:::i;:::-;;;;;;;;5638:88;5754:1;5740:16;;:2;:16;;;5736:88;;5809:1;5780:32;;;;;;;;;;;:::i;:::-;;;;;;;;5736:88;5834:24;5842:4;5848:2;5852:5;5834:7;:24::i;:::-;5558:308;;;:::o;3924:268:15:-;3977:7;4018:11;4001:28;;4009:4;4001:28;;;:63;;;;;4050:14;4033:13;:31;4001:63;3997:188;;;4088:22;4081:29;;;;3997:188;4150:23;:21;:23::i;:::-;4143:30;;3924:268;;:::o;1858:166:0:-;1929:12;:10;:12::i;:::-;1918:23;;:7;:5;:7::i;:::-;:23;;;1914:103;;1992:12;:10;:12::i;:::-;1965:40;;;;;;;;;;;:::i;:::-;;;;;;;;1914:103;1858:166::o;7678:213:3:-;7768:1;7749:21;;:7;:21;;;7745:93;;7823:1;7794:32;;;;;;;;;;;:::i;:::-;;;;;;;;7745:93;7848:35;7864:1;7868:7;7877:5;7848:7;:35::i;:::-;7678:213;;:::o;3006:191:0:-;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;556:109:9:-;616:7;643;:14;651:5;643:14;;;;;;;;;;;;;;;;636:21;;556:109;;;:::o;6166:128:15:-;6212:13;6245:41;6272:13;6245:5;:26;;:41;;;;:::i;:::-;6238:48;;6166:128;:::o;6629:137::-;6678:13;6711:47;6741:16;6711:8;:29;;:47;;;;:::i;:::-;6704:54;;6629:137;:::o;786:402:9:-;846:7;1153;:14;1161:5;1153:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1146:23;;786:402;;;:::o;5023:178:15:-;5100:7;5127:66;5160:20;:18;:20::i;:::-;5182:10;5127:32;:66::i;:::-;5120:73;;5023:178;;;:::o;7046:264:14:-;7131:7;7152:17;7171:18;7191:16;7211:25;7222:4;7228:1;7231;7234;7211:10;:25::i;:::-;7151:85;;;;;;7247:28;7259:5;7266:8;7247:11;:28::i;:::-;7293:9;7286:16;;;;;7046:264;;;;;;:::o;9980:443:3:-;10110:1;10093:19;;:5;:19;;;10089:91;;10165:1;10136:32;;;;;;;;;;;:::i;:::-;;;;;;;;10089:91;10213:1;10194:21;;:7;:21;;;10190:92;;10267:1;10239:31;;;;;;;;;;;:::i;:::-;;;;;;;;10190:92;10322:5;10292:11;:18;10304:5;10292:18;;;;;;;;;;;;;;;:27;10311:7;10292:27;;;;;;;;;;;;;;;:35;;;;10342:9;10338:78;;;10389:7;10373:31;;10382:5;10373:31;;;10398:5;10373:31;;;;;;:::i;:::-;;;;;;;;10338:78;9980:443;;;;:::o;6190:1135::-;6296:1;6280:18;;:4;:18;;;6276:552;;6434:5;6418:12;;:21;;;;;;;:::i;:::-;;;;;;;;6276:552;;;6472:19;6494:9;:15;6504:4;6494:15;;;;;;;;;;;;;;;;6472:37;;6542:5;6528:11;:19;6524:117;;;6600:4;6606:11;6619:5;6575:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6524:117;6796:5;6782:11;:19;6764:9;:15;6774:4;6764:15;;;;;;;;;;;;;;;:37;;;;6457:371;6276:552;6858:1;6844:16;;:2;:16;;;6840:435;;7026:5;7010:12;;:21;;;;;;;;;;;6840:435;;;7243:5;7226:9;:13;7236:2;7226:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6840:435;7307:2;7292:25;;7301:4;7292:25;;;7311:5;7292:25;;;;;;:::i;:::-;;;;;;;;6190:1135;;;:::o;4200:181:15:-;4255:7;2116:95;4314:11;4327:14;4343:13;4366:4;4292:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4282:91;;;;;;4275:98;;4200:181;:::o;3457:273:11:-;3551:13;1431:66;3610:17;;3600:5;3581:46;3577:146;;3651:15;3660:5;3651:8;:15::i;:::-;3644:22;;;;3577:146;3706:5;3699:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3457:273;;;;;:::o;3400:382:16:-;3493:14;3577:4;3571:11;3608:10;3603:3;3596:23;3656:15;3649:4;3644:3;3640:14;3633:39;3709:10;3702:4;3697:3;3693:14;3686:34;3759:4;3754:3;3744:20;3734:30;;3545:230;3400:382;;;;:::o;5330:1577:14:-;5461:17;5480:16;5498:14;6425:66;6420:1;6412:10;;:79;6408:166;;;6524:1;6528:30;6560:1;6508:54;;;;;;;;6408:166;6671:14;6688:24;6698:4;6704:1;6707;6710;6688:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6671:41;;6745:1;6727:20;;:6;:20;;;6723:115;;6780:1;6784:29;6823:1;6815:10;;6764:62;;;;;;;;;6723:115;6858:6;6866:20;6896:1;6888:10;;6850:49;;;;;;;5330:1577;;;;;;;;;:::o;7448:542::-;7544:20;7535:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7531:452;7581:7;7531:452;7642:29;7633:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7629:354;;7695:23;;;;;;;;;;;;;;7629:354;7749:35;7740:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7736:247;;7844:8;7836:17;;7808:46;;;;;;;;;;;:::i;:::-;;;;;;;;7736:247;7885:30;7876:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7872:111;;7962:8;7939:32;;;;;;;;;;;:::i;:::-;;;;;;;;7872:111;7448:542;;;:::o;2140:387:11:-;2199:13;2225:11;2239:16;2250:4;2239:10;:16::i;:::-;2225:30;;2345:17;2376:2;2365:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2345:34;;2442:3;2437;2430:16;2483:4;2476;2471:3;2467:14;2460:28;2516:3;2509:10;;;;2140:387;;;:::o;2604:251::-;2665:7;2685:14;2738:4;2729;2702:33;;:40;2685:57;;2766:2;2757:6;:11;2753:71;;;2792:20;;;;;;;;;;;;;;2753:71;2841:6;2834:13;;;2604:251;;;:::o;7:99:22:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:77::-;4892:7;4921:5;4910:16;;4855:77;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:329::-;5349:6;5398:2;5386:9;5377:7;5373:23;5369:32;5366:119;;;5404:79;;:::i;:::-;5366:119;5524:1;5549:53;5594:7;5585:6;5574:9;5570:22;5549:53;:::i;:::-;5539:63;;5495:117;5290:329;;;;:::o;5625:149::-;5661:7;5701:66;5694:5;5690:78;5679:89;;5625:149;;;:::o;5780:115::-;5865:23;5882:5;5865:23;:::i;:::-;5860:3;5853:36;5780:115;;:::o;5901:118::-;5988:24;6006:5;5988:24;:::i;:::-;5983:3;5976:37;5901:118;;:::o;6025:114::-;6092:6;6126:5;6120:12;6110:22;;6025:114;;;:::o;6145:184::-;6244:11;6278:6;6273:3;6266:19;6318:4;6313:3;6309:14;6294:29;;6145:184;;;;:::o;6335:132::-;6402:4;6425:3;6417:11;;6455:4;6450:3;6446:14;6438:22;;6335:132;;;:::o;6473:108::-;6550:24;6568:5;6550:24;:::i;:::-;6545:3;6538:37;6473:108;;:::o;6587:179::-;6656:10;6677:46;6719:3;6711:6;6677:46;:::i;:::-;6755:4;6750:3;6746:14;6732:28;;6587:179;;;;:::o;6772:113::-;6842:4;6874;6869:3;6865:14;6857:22;;6772:113;;;:::o;6921:732::-;7040:3;7069:54;7117:5;7069:54;:::i;:::-;7139:86;7218:6;7213:3;7139:86;:::i;:::-;7132:93;;7249:56;7299:5;7249:56;:::i;:::-;7328:7;7359:1;7344:284;7369:6;7366:1;7363:13;7344:284;;;7445:6;7439:13;7472:63;7531:3;7516:13;7472:63;:::i;:::-;7465:70;;7558:60;7611:6;7558:60;:::i;:::-;7548:70;;7404:224;7391:1;7388;7384:9;7379:14;;7344:284;;;7348:14;7644:3;7637:10;;7045:608;;;6921:732;;;;:::o;7659:1215::-;8008:4;8046:3;8035:9;8031:19;8023:27;;8060:69;8126:1;8115:9;8111:17;8102:6;8060:69;:::i;:::-;8176:9;8170:4;8166:20;8161:2;8150:9;8146:18;8139:48;8204:78;8277:4;8268:6;8204:78;:::i;:::-;8196:86;;8329:9;8323:4;8319:20;8314:2;8303:9;8299:18;8292:48;8357:78;8430:4;8421:6;8357:78;:::i;:::-;8349:86;;8445:72;8513:2;8502:9;8498:18;8489:6;8445:72;:::i;:::-;8527:73;8595:3;8584:9;8580:19;8571:6;8527:73;:::i;:::-;8610;8678:3;8667:9;8663:19;8654:6;8610:73;:::i;:::-;8731:9;8725:4;8721:20;8715:3;8704:9;8700:19;8693:49;8759:108;8862:4;8853:6;8759:108;:::i;:::-;8751:116;;7659:1215;;;;;;;;;;:::o;8880:222::-;8973:4;9011:2;9000:9;8996:18;8988:26;;9024:71;9092:1;9081:9;9077:17;9068:6;9024:71;:::i;:::-;8880:222;;;;:::o;9108:118::-;9179:22;9195:5;9179:22;:::i;:::-;9172:5;9169:33;9159:61;;9216:1;9213;9206:12;9159:61;9108:118;:::o;9232:135::-;9276:5;9314:6;9301:20;9292:29;;9330:31;9355:5;9330:31;:::i;:::-;9232:135;;;;:::o;9373:122::-;9446:24;9464:5;9446:24;:::i;:::-;9439:5;9436:35;9426:63;;9485:1;9482;9475:12;9426:63;9373:122;:::o;9501:139::-;9547:5;9585:6;9572:20;9563:29;;9601:33;9628:5;9601:33;:::i;:::-;9501:139;;;;:::o;9646:1199::-;9757:6;9765;9773;9781;9789;9797;9805;9854:3;9842:9;9833:7;9829:23;9825:33;9822:120;;;9861:79;;:::i;:::-;9822:120;9981:1;10006:53;10051:7;10042:6;10031:9;10027:22;10006:53;:::i;:::-;9996:63;;9952:117;10108:2;10134:53;10179:7;10170:6;10159:9;10155:22;10134:53;:::i;:::-;10124:63;;10079:118;10236:2;10262:53;10307:7;10298:6;10287:9;10283:22;10262:53;:::i;:::-;10252:63;;10207:118;10364:2;10390:53;10435:7;10426:6;10415:9;10411:22;10390:53;:::i;:::-;10380:63;;10335:118;10492:3;10519:51;10562:7;10553:6;10542:9;10538:22;10519:51;:::i;:::-;10509:61;;10463:117;10619:3;10646:53;10691:7;10682:6;10671:9;10667:22;10646:53;:::i;:::-;10636:63;;10590:119;10748:3;10775:53;10820:7;10811:6;10800:9;10796:22;10775:53;:::i;:::-;10765:63;;10719:119;9646:1199;;;;;;;;;;:::o;10851:474::-;10919:6;10927;10976:2;10964:9;10955:7;10951:23;10947:32;10944:119;;;10982:79;;:::i;:::-;10944:119;11102:1;11127:53;11172:7;11163:6;11152:9;11148:22;11127:53;:::i;:::-;11117:63;;11073:117;11229:2;11255:53;11300:7;11291:6;11280:9;11276:22;11255:53;:::i;:::-;11245:63;;11200:118;10851:474;;;;;:::o;11331:180::-;11379:77;11376:1;11369:88;11476:4;11473:1;11466:15;11500:4;11497:1;11490:15;11517:320;11561:6;11598:1;11592:4;11588:12;11578:22;;11645:1;11639:4;11635:12;11666:18;11656:81;;11722:4;11714:6;11710:17;11700:27;;11656:81;11784:2;11776:6;11773:14;11753:18;11750:38;11747:84;;11803:18;;:::i;:::-;11747:84;11568:269;11517:320;;;:::o;11843:170::-;11983:22;11979:1;11971:6;11967:14;11960:46;11843:170;:::o;12019:366::-;12161:3;12182:67;12246:2;12241:3;12182:67;:::i;:::-;12175:74;;12258:93;12347:3;12258:93;:::i;:::-;12376:2;12371:3;12367:12;12360:19;;12019:366;;;:::o;12391:419::-;12557:4;12595:2;12584:9;12580:18;12572:26;;12644:9;12638:4;12634:20;12630:1;12619:9;12615:17;12608:47;12672:131;12798:4;12672:131;:::i;:::-;12664:139;;12391:419;;;:::o;12816:180::-;12864:77;12861:1;12854:88;12961:4;12958:1;12951:15;12985:4;12982:1;12975:15;13002:775;13235:4;13273:3;13262:9;13258:19;13250:27;;13287:71;13355:1;13344:9;13340:17;13331:6;13287:71;:::i;:::-;13368:72;13436:2;13425:9;13421:18;13412:6;13368:72;:::i;:::-;13450;13518:2;13507:9;13503:18;13494:6;13450:72;:::i;:::-;13532;13600:2;13589:9;13585:18;13576:6;13532:72;:::i;:::-;13614:73;13682:3;13671:9;13667:19;13658:6;13614:73;:::i;:::-;13697;13765:3;13754:9;13750:19;13741:6;13697:73;:::i;:::-;13002:775;;;;;;;;;:::o;13783:332::-;13904:4;13942:2;13931:9;13927:18;13919:26;;13955:71;14023:1;14012:9;14008:17;13999:6;13955:71;:::i;:::-;14036:72;14104:2;14093:9;14089:18;14080:6;14036:72;:::i;:::-;13783:332;;;;;:::o;14121:442::-;14270:4;14308:2;14297:9;14293:18;14285:26;;14321:71;14389:1;14378:9;14374:17;14365:6;14321:71;:::i;:::-;14402:72;14470:2;14459:9;14455:18;14446:6;14402:72;:::i;:::-;14484;14552:2;14541:9;14537:18;14528:6;14484:72;:::i;:::-;14121:442;;;;;;:::o;14569:180::-;14617:77;14614:1;14607:88;14714:4;14711:1;14704:15;14738:4;14735:1;14728:15;14755:191;14795:3;14814:20;14832:1;14814:20;:::i;:::-;14809:25;;14848:20;14866:1;14848:20;:::i;:::-;14843:25;;14891:1;14888;14884:9;14877:16;;14912:3;14909:1;14906:10;14903:36;;;14919:18;;:::i;:::-;14903:36;14755:191;;;;:::o;14952:664::-;15157:4;15195:3;15184:9;15180:19;15172:27;;15209:71;15277:1;15266:9;15262:17;15253:6;15209:71;:::i;:::-;15290:72;15358:2;15347:9;15343:18;15334:6;15290:72;:::i;:::-;15372;15440:2;15429:9;15425:18;15416:6;15372:72;:::i;:::-;15454;15522:2;15511:9;15507:18;15498:6;15454:72;:::i;:::-;15536:73;15604:3;15593:9;15589:19;15580:6;15536:73;:::i;:::-;14952:664;;;;;;;;:::o;15622:545::-;15795:4;15833:3;15822:9;15818:19;15810:27;;15847:71;15915:1;15904:9;15900:17;15891:6;15847:71;:::i;:::-;15928:68;15992:2;15981:9;15977:18;15968:6;15928:68;:::i;:::-;16006:72;16074:2;16063:9;16059:18;16050:6;16006:72;:::i;:::-;16088;16156:2;16145:9;16141:18;16132:6;16088:72;:::i;:::-;15622:545;;;;;;;:::o;16173:180::-;16221:77;16218:1;16211:88;16318:4;16315:1;16308:15;16342:4;16339:1;16332:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burnTokens(address,uint256)":"0d1118ce","decimals()":"313ce567","eip712Domain()":"84b0196e","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","rewardTokens(address,uint256)":"81a4af15","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CampusToken.sol\":\"CampusToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdd0a585e22b0ee75d9b326c251df05a910d8edccab17e4db3cfd7e00f7169b84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6f23becda6cd87e9d96803e35647b3a8973dadc082b0d7344b0fd3232f83c25\",\"dweb:/ipfs/QmdXggVZu4S5eP7uAvW1STAxtfXnAaiUFB3LDU5ohQv6e9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x75d915918e62946caf04224552ec67cec8761941907c8a144c1ea8167856c430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://165246da467a540613d7ec3b2758eafdb724d87576088dde94483b02e8136353\",\"dweb:/ipfs/QmQp41YPLHyKAdy7MyMmTzBRaZhA6xxXMt1oUmfEss8bmv\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x79ee51693b808ffdb306266b04709183c403b04078211b149794bc11d6c3fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b360520e990c689b887ed508c6f6acff9309dc207c0f05ad8ebcacf4b98cb\",\"dweb:/ipfs/QmeXjWT5Z5X5UzMbiBd3MoEUnfNAtV8HpoasznLkq34JWZ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0xb2ac469a92e3980b87267eacabd4e470df6cf278858efa230f69c723316c138d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ce61d28f35bf80f21d884b285b4061c938e400a0d90d7a8176e2cacf29b5eaf\",\"dweb:/ipfs/Qmar9FHYkwMVvQYtDoeJFETryVwBPTPs1dxhvKG1AMah1c\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x077980096776135bbc9dd792d7bac26933c055854431d5015de62ad756ca86a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e233f83b0dd2c741dae729bbbe1177af49ce7d78185eb89657cae14444525b2a\",\"dweb:/ipfs/QmWR6XzkTNynXjhCFHkYMVTUoM9bjBNv3jorGTzzrgUnXW\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x4698a3b9e053c05db8466bddc85fe5732d4e52eeede6b03769dc0fe099998078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db853b48d7358744ec277afa884a0514c595d90933d497835b75738ade9586b4\",\"dweb:/ipfs/QmTRBWHtor5jHpheZDA3g5Kf5mPqBQi77X25Q1CQRrS2SJ\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbe22c37080f9052e0e18062a527a19f9354703ee48888c71baf0abd747a34a8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb85649fce273c8c19eeba7db292f92b6653263ae39f12e427a066b998c9cec4\",\"dweb:/ipfs/QmRaTEqA15siRJoiPCuvtzK29dgXxQu94n4JBabHUSFXXQ\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x312a8b2d6e47bdeffa1f275e000fd7a58c73a0687706c24f677fd019dfec10fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8f6a3338774e6d948e9ae84534d6bb2125cac94cfb8cf67e980284e5d2a923\",\"dweb:/ipfs/QmNmysmWKYvn1R8jVKhz6GNedzbDbB6G95hvVEJyCuqWDC\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x70d0d56812a450b9295367b992c591f809559673805fc7749ac9e67491c905b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://218fbb6cd38c6eaae3c1a013a0de481b7250a19845df788eeb6604c66e05b435\",\"dweb:/ipfs/QmQETgZDZyc8EimR5h3woEzWPVogKBNsj8Lhw5bQnvRoyg\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x6fc9a48c3d39d70e64acac472509822e001b9ca996653576efb17b19c56b38f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fb4a208e464691b05cc33477e138dc837372e8fe3192efee08094aa5fad4acc\",\"dweb:/ipfs/QmcLuyckN8xRPBNDVV9dqBn1FNQrN9R3GktDJSW3s7r2ts\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]},\"contracts/CampusToken.sol\":{\"keccak256\":\"0x965c02d9af82976c93e9497d79cd3872e7eecb2af7ba57210f5667fe6e369e0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59dd10344e98d1cc9ffaa3f5c6041f4abf49d360cb2a60e911f9a516f1892878\",\"dweb:/ipfs/Qmam54kfBubHPXhf5tSrKkW15GUXrLBM7vLSRdgVSftZnL\"]}},\"version\":1}"}},"contracts/participate.sol":{"participate":{"abi":[{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reportId","type":"uint256"},{"indexed":false,"internalType":"address","name":"uploader","type":"address"}],"name":"ReportRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reportId","type":"uint256"},{"indexed":false,"internalType":"address","name":"voter","type":"address"}],"name":"VoteRevoked","type":"event"},{"inputs":[],"name":"REPORT_REWARD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REPORT_STAKE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VALIDATE_REWARD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VALIDATE_STAKE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"reportId","type":"uint256"}],"name":"finalizeReport","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getVoteWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reportCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"reports","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"uploader","type":"address"},{"internalType":"int256","name":"net_votes","type":"int256"},{"internalType":"bool","name":"validated","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"reportId","type":"uint256"}],"name":"revoke_report","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"reportId","type":"uint256"}],"name":"revoke_vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakedTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"reportId","type":"uint256"}],"name":"submitReport","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract CampusToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"reportId","type":"uint256"},{"internalType":"int8","name":"vote","type":"int8"}],"name":"validate","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_7140":{"entryPoint":null,"id":7140,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":224,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":162,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":130,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":125,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":180,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1199:22","nodeType":"YulBlock","src":"0:1199:22","statements":[{"body":{"nativeSrc":"47:35:22","nodeType":"YulBlock","src":"47:35:22","statements":[{"nativeSrc":"57:19:22","nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:22","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:22","nodeType":"YulIdentifier","src":"67:5:22"},"nativeSrc":"67:9:22","nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:22","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:22","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:22","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nativeSrc":"177:28:22","nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:22","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:22","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:22","nodeType":"YulIdentifier","src":"187:6:22"},"nativeSrc":"187:12:22","nodeType":"YulFunctionCall","src":"187:12:22"},"nativeSrc":"187:12:22","nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:22","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nativeSrc":"300:28:22","nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:22","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:22","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:22","nodeType":"YulIdentifier","src":"310:6:22"},"nativeSrc":"310:12:22","nodeType":"YulFunctionCall","src":"310:12:22"},"nativeSrc":"310:12:22","nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:22","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nativeSrc":"379:81:22","nodeType":"YulBlock","src":"379:81:22","statements":[{"nativeSrc":"389:65:22","nodeType":"YulAssignment","src":"389:65:22","value":{"arguments":[{"name":"value","nativeSrc":"404:5:22","nodeType":"YulIdentifier","src":"404:5:22"},{"kind":"number","nativeSrc":"411:42:22","nodeType":"YulLiteral","src":"411:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:22","nodeType":"YulIdentifier","src":"400:3:22"},"nativeSrc":"400:54:22","nodeType":"YulFunctionCall","src":"400:54:22"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:22","nodeType":"YulIdentifier","src":"389:7:22"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:22","nodeType":"YulTypedName","src":"361:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:22","nodeType":"YulTypedName","src":"371:7:22","type":""}],"src":"334:126:22"},{"body":{"nativeSrc":"511:51:22","nodeType":"YulBlock","src":"511:51:22","statements":[{"nativeSrc":"521:35:22","nodeType":"YulAssignment","src":"521:35:22","value":{"arguments":[{"name":"value","nativeSrc":"550:5:22","nodeType":"YulIdentifier","src":"550:5:22"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:22","nodeType":"YulIdentifier","src":"532:17:22"},"nativeSrc":"532:24:22","nodeType":"YulFunctionCall","src":"532:24:22"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:22","nodeType":"YulIdentifier","src":"521:7:22"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:22","nodeType":"YulTypedName","src":"493:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:22","nodeType":"YulTypedName","src":"503:7:22","type":""}],"src":"466:96:22"},{"body":{"nativeSrc":"611:79:22","nodeType":"YulBlock","src":"611:79:22","statements":[{"body":{"nativeSrc":"668:16:22","nodeType":"YulBlock","src":"668:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:22","nodeType":"YulLiteral","src":"677:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:22","nodeType":"YulLiteral","src":"680:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:22","nodeType":"YulIdentifier","src":"670:6:22"},"nativeSrc":"670:12:22","nodeType":"YulFunctionCall","src":"670:12:22"},"nativeSrc":"670:12:22","nodeType":"YulExpressionStatement","src":"670:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:22","nodeType":"YulIdentifier","src":"634:5:22"},{"arguments":[{"name":"value","nativeSrc":"659:5:22","nodeType":"YulIdentifier","src":"659:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:22","nodeType":"YulIdentifier","src":"641:17:22"},"nativeSrc":"641:24:22","nodeType":"YulFunctionCall","src":"641:24:22"}],"functionName":{"name":"eq","nativeSrc":"631:2:22","nodeType":"YulIdentifier","src":"631:2:22"},"nativeSrc":"631:35:22","nodeType":"YulFunctionCall","src":"631:35:22"}],"functionName":{"name":"iszero","nativeSrc":"624:6:22","nodeType":"YulIdentifier","src":"624:6:22"},"nativeSrc":"624:43:22","nodeType":"YulFunctionCall","src":"624:43:22"},"nativeSrc":"621:63:22","nodeType":"YulIf","src":"621:63:22"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:22","nodeType":"YulTypedName","src":"604:5:22","type":""}],"src":"568:122:22"},{"body":{"nativeSrc":"759:80:22","nodeType":"YulBlock","src":"759:80:22","statements":[{"nativeSrc":"769:22:22","nodeType":"YulAssignment","src":"769:22:22","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:22","nodeType":"YulIdentifier","src":"784:6:22"}],"functionName":{"name":"mload","nativeSrc":"778:5:22","nodeType":"YulIdentifier","src":"778:5:22"},"nativeSrc":"778:13:22","nodeType":"YulFunctionCall","src":"778:13:22"},"variableNames":[{"name":"value","nativeSrc":"769:5:22","nodeType":"YulIdentifier","src":"769:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:22","nodeType":"YulIdentifier","src":"827:5:22"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:22","nodeType":"YulIdentifier","src":"800:26:22"},"nativeSrc":"800:33:22","nodeType":"YulFunctionCall","src":"800:33:22"},"nativeSrc":"800:33:22","nodeType":"YulExpressionStatement","src":"800:33:22"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:22","nodeType":"YulTypedName","src":"737:6:22","type":""},{"name":"end","nativeSrc":"745:3:22","nodeType":"YulTypedName","src":"745:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:22","nodeType":"YulTypedName","src":"753:5:22","type":""}],"src":"696:143:22"},{"body":{"nativeSrc":"922:274:22","nodeType":"YulBlock","src":"922:274:22","statements":[{"body":{"nativeSrc":"968:83:22","nodeType":"YulBlock","src":"968:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:22","nodeType":"YulIdentifier","src":"970:77:22"},"nativeSrc":"970:79:22","nodeType":"YulFunctionCall","src":"970:79:22"},"nativeSrc":"970:79:22","nodeType":"YulExpressionStatement","src":"970:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:22","nodeType":"YulIdentifier","src":"943:7:22"},{"name":"headStart","nativeSrc":"952:9:22","nodeType":"YulIdentifier","src":"952:9:22"}],"functionName":{"name":"sub","nativeSrc":"939:3:22","nodeType":"YulIdentifier","src":"939:3:22"},"nativeSrc":"939:23:22","nodeType":"YulFunctionCall","src":"939:23:22"},{"kind":"number","nativeSrc":"964:2:22","nodeType":"YulLiteral","src":"964:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:22","nodeType":"YulIdentifier","src":"935:3:22"},"nativeSrc":"935:32:22","nodeType":"YulFunctionCall","src":"935:32:22"},"nativeSrc":"932:119:22","nodeType":"YulIf","src":"932:119:22"},{"nativeSrc":"1061:128:22","nodeType":"YulBlock","src":"1061:128:22","statements":[{"nativeSrc":"1076:15:22","nodeType":"YulVariableDeclaration","src":"1076:15:22","value":{"kind":"number","nativeSrc":"1090:1:22","nodeType":"YulLiteral","src":"1090:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:22","nodeType":"YulTypedName","src":"1080:6:22","type":""}]},{"nativeSrc":"1105:74:22","nodeType":"YulAssignment","src":"1105:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:22","nodeType":"YulIdentifier","src":"1151:9:22"},{"name":"offset","nativeSrc":"1162:6:22","nodeType":"YulIdentifier","src":"1162:6:22"}],"functionName":{"name":"add","nativeSrc":"1147:3:22","nodeType":"YulIdentifier","src":"1147:3:22"},"nativeSrc":"1147:22:22","nodeType":"YulFunctionCall","src":"1147:22:22"},{"name":"dataEnd","nativeSrc":"1171:7:22","nodeType":"YulIdentifier","src":"1171:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:22","nodeType":"YulIdentifier","src":"1115:31:22"},"nativeSrc":"1115:64:22","nodeType":"YulFunctionCall","src":"1115:64:22"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:22","nodeType":"YulIdentifier","src":"1105:6:22"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:22","nodeType":"YulTypedName","src":"892:9:22","type":""},{"name":"dataEnd","nativeSrc":"903:7:22","nodeType":"YulTypedName","src":"903:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:22","nodeType":"YulTypedName","src":"915:6:22","type":""}],"src":"845:351:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052600060015534801561001557600080fd5b50604051612064380380612064833981810160405281019061003791906100e0565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ad82610082565b9050919050565b6100bd816100a2565b81146100c857600080fd5b50565b6000815190506100da816100b4565b92915050565b6000602082840312156100f6576100f561007d565b5b6000610104848285016100cb565b91505092915050565b611f488061011c6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063b12f55eb1161008c578063ed1957d911610066578063ed1957d91461024e578063f26eb2771461026c578063fa9c48b714610288578063fc0c546a146102a4576100ea565b8063b12f55eb146101e1578063c942adf7146101ff578063ca93ef1914610232576100ea565b80635ff2c42c116100c85780635ff2c42c146101475780636b38516f14610165578063a5b39cfb14610181578063a730117e146101b1576100ea565b8063185c6f84146100ef57806342530abd1461010d5780635790411e14610129575b600080fd5b6100f76102c2565b60405161010491906116ac565b60405180910390f35b61012760048036038101906101229190611731565b6102c8565b005b6101316106be565b60405161013e91906116ac565b60405180910390f35b61014f6106ca565b60405161015c91906116ac565b60405180910390f35b61017f600480360381019061017a9190611771565b6106d7565b005b61019b600480360381019061019691906117fc565b61099d565b6040516101a891906116ac565b60405180910390f35b6101cb60048036038101906101c691906117fc565b6109b5565b6040516101d891906116ac565b60405180910390f35b6101e9610a95565b6040516101f691906116ac565b60405180910390f35b61021960048036038101906102149190611771565b610aa1565b604051610229949392919061186c565b60405180910390f35b61024c60048036038101906102479190611771565b610afe565b005b610256610dc0565b60405161026391906116ac565b60405180910390f35b61028660048036038101906102819190611771565b610dcd565b005b6102a2600480360381019061029d9190611771565b61104d565b005b6102ac61117f565b6040516102b99190611910565b60405180910390f35b60015481565b60006002600084815260200190815260200160002090506802b5e3af16b188000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610342919061192b565b602060405180830381865afa15801561035f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610383919061195b565b10156103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bb906119e5565b60405180910390fd5b60018260000b14806103f857507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260000b145b610437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042e90611a51565b60405180910390fd5b60008160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460000b60000b146104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c290611abd565b60405180910390fd5b6802b5e3af16b1880000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105239190611b0c565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d1118ce336802b5e3af16b18800006040518363ffffffff1660e01b815260040161058e929190611b40565b600060405180830381600087803b1580156105a857600080fd5b505af11580156105bc573d6000803e3d6000fd5b5050505060006105cb336109b5565b9050808360000b6105dc9190611b69565b8260020160008282546105ef9190611be1565b92505081905550828260050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360000b60ff16021790555081600401339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b678ac7230489e8000081565b68056bc75e2d6310000081565b600060026000838152602001908152602001600020905060008160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460000b60000b03610782576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077990611c97565b60405180910390fd5b60008160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460000b90506802b5e3af16b1880000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461082d9190611cb7565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381a4af15336802b5e3af16b18800006040518363ffffffff1660e01b8152600401610898929190611b40565b600060405180830381600087803b1580156108b257600080fd5b505af11580156108c6573d6000803e3d6000fd5b5050505060006108d5336109b5565b9050808260000b6108e69190611b69565b8360020160008282546108f99190611ceb565b9250508190555060008360050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360000b60ff1602179055507fb6c537d4d5cd45cf3082c7458c198a25e5e551611604a18df485c806c2125c40843360405161098f929190611d2e565b60405180910390a150505050565b60036020528060005260406000206000915090505481565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610a11919061192b565b602060405180830381865afa158015610a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a52919061195b565b9050683635c9adc5dea00000811115610a6f576003915050610a90565b681b1ae4d6e2ef500000811115610a8a576001915050610a90565b60019150505b919050565b674563918244f4000081565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b60006002600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e90611da3565b60405180910390fd5b8060030160009054906101000a900460ff1615610bf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf090611e0f565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381a4af158260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1668056bc75e2d631000006040518363ffffffff1660e01b8152600401610c81929190611b40565b600060405180830381600087803b158015610c9b57600080fd5b505af1158015610caf573d6000803e3d6000fd5b5050505068056bc75e2d63100000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d0b9190611cb7565b92505081905550600260008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff0219169055600482016000610d819190611655565b50507fd70d884c5bc88c9a05d6a19993baba89fc62d9c3a7a02925bd6a748b2051d0bf8233604051610db4929190611d2e565b60405180910390a15050565b6802b5e3af16b188000081565b68056bc75e2d6310000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610e30919061192b565b602060405180830381865afa158015610e4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e71919061195b565b1015610eb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea9906119e5565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d1118ce3368056bc75e2d631000006040518363ffffffff1660e01b8152600401610f16929190611b40565b600060405180830381600087803b158015610f3057600080fd5b505af1158015610f44573d6000803e3d6000fd5b5050505068056bc75e2d63100000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fa09190611b0c565b9250508190555060016000815480929190610fba90611e2f565b91905055506000600260008381526020019081526020016000209050818160000181905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000816002018190555060008160030160006101000a81548160ff0219169083151502179055505050565b60006002600083815260200190815260200160002090508060030160009054906101000a900460ff16156110b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ad90611ec3565b60405180910390fd5b60018160030160006101000a81548160ff02191690831515021790555068056bc75e2d63100000600360008360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461114f9190611cb7565b925050819055506000816002015413156111715761116c826111a3565b61117b565b61117a82611453565b5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060026000838152602001908152602001600020905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381a4af158260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1668056bc75e2d63100000674563918244f400006112389190611b0c565b6040518363ffffffff1660e01b8152600401611255929190611b40565b600060405180830381600087803b15801561126f57600080fd5b505af1158015611283573d6000803e3d6000fd5b5050505060005b816004018054905081101561144e5760008260040182815481106112b1576112b0611ee3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060018360050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460000b60000b036113e15760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381a4af15826802b5e3af16b1880000678ac7230489e800006113919190611b0c565b6040518363ffffffff1660e01b81526004016113ae929190611b40565b600060405180830381600087803b1580156113c857600080fd5b505af11580156113dc573d6000803e3d6000fd5b505050505b6802b5e3af16b1880000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114399190611cb7565b9250508190555050808060010191505061128a565b505050565b600060026000838152602001908152602001600020905060005b816004018054905081101561165057600082600401828154811061149457611493611ee3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460000b60000b036115e35760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381a4af15826802b5e3af16b1880000678ac7230489e800006115939190611b0c565b6040518363ffffffff1660e01b81526004016115b0929190611b40565b600060405180830381600087803b1580156115ca57600080fd5b505af11580156115de573d6000803e3d6000fd5b505050505b6802b5e3af16b1880000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461163b9190611cb7565b9250508190555050808060010191505061146d565b505050565b50805460008255906000526020600020908101906116739190611676565b50565b5b8082111561168f576000816000905550600101611677565b5090565b6000819050919050565b6116a681611693565b82525050565b60006020820190506116c1600083018461169d565b92915050565b600080fd5b6116d581611693565b81146116e057600080fd5b50565b6000813590506116f2816116cc565b92915050565b60008160000b9050919050565b61170e816116f8565b811461171957600080fd5b50565b60008135905061172b81611705565b92915050565b60008060408385031215611748576117476116c7565b5b6000611756858286016116e3565b92505060206117678582860161171c565b9150509250929050565b600060208284031215611787576117866116c7565b5b6000611795848285016116e3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117c98261179e565b9050919050565b6117d9816117be565b81146117e457600080fd5b50565b6000813590506117f6816117d0565b92915050565b600060208284031215611812576118116116c7565b5b6000611820848285016117e7565b91505092915050565b611832816117be565b82525050565b6000819050919050565b61184b81611838565b82525050565b60008115159050919050565b61186681611851565b82525050565b6000608082019050611881600083018761169d565b61188e6020830186611829565b61189b6040830185611842565b6118a8606083018461185d565b95945050505050565b6000819050919050565b60006118d66118d16118cc8461179e565b6118b1565b61179e565b9050919050565b60006118e8826118bb565b9050919050565b60006118fa826118dd565b9050919050565b61190a816118ef565b82525050565b60006020820190506119256000830184611901565b92915050565b60006020820190506119406000830184611829565b92915050565b600081519050611955816116cc565b92915050565b600060208284031215611971576119706116c7565b5b600061197f84828501611946565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e74207374616b650000000000000000000000000000600082015250565b60006119cf601283611988565b91506119da82611999565b602082019050919050565b600060208201905081810360008301526119fe816119c2565b9050919050565b7f496e76616c696420766f74650000000000000000000000000000000000000000600082015250565b6000611a3b600c83611988565b9150611a4682611a05565b602082019050919050565b60006020820190508181036000830152611a6a81611a2e565b9050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b6000611aa7600d83611988565b9150611ab282611a71565b602082019050919050565b60006020820190508181036000830152611ad681611a9a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b1782611693565b9150611b2283611693565b9250828201905080821115611b3a57611b39611add565b5b92915050565b6000604082019050611b556000830185611829565b611b62602083018461169d565b9392505050565b6000611b7482611838565b9150611b7f83611838565b9250828202611b8d81611838565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615611bc557611bc4611add565b5b8282058414831517611bda57611bd9611add565b5b5092915050565b6000611bec82611838565b9150611bf783611838565b925082820190508281121560008312168382126000841215161715611c1f57611c1e611add565b5b92915050565b7f596f752068617665206e6f7420766f746564206f7220616c726561647920726560008201527f766f6b6564000000000000000000000000000000000000000000000000000000602082015250565b6000611c81602583611988565b9150611c8c82611c25565b604082019050919050565b60006020820190508181036000830152611cb081611c74565b9050919050565b6000611cc282611693565b9150611ccd83611693565b9250828203905081811115611ce557611ce4611add565b5b92915050565b6000611cf682611838565b9150611d0183611838565b9250828203905081811260008412168282136000851215161715611d2857611d27611add565b5b92915050565b6000604082019050611d43600083018561169d565b611d506020830184611829565b9392505050565b7f4f6e6c792075706c6f616465722063616e207265766f6b650000000000000000600082015250565b6000611d8d601883611988565b9150611d9882611d57565b602082019050919050565b60006020820190508181036000830152611dbc81611d80565b9050919050565b7f5265706f727420616c72656164792066696e616c697a65640000000000000000600082015250565b6000611df9601883611988565b9150611e0482611dc3565b602082019050919050565b60006020820190508181036000830152611e2881611dec565b9050919050565b6000611e3a82611693565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e6c57611e6b611add565b5b600182019050919050565b7f416c72656164792076616c696461746564000000000000000000000000000000600082015250565b6000611ead601183611988565b9150611eb882611e77565b602082019050919050565b60006020820190508181036000830152611edc81611ea0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220392f4f3ac89b6225c27a5f2058842034a96e1362f10ae01e3eb8201057a91c4664736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2064 CODESIZE SUB DUP1 PUSH2 0x2064 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x37 SWAP2 SWAP1 PUSH2 0xE0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x10D JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD DUP3 PUSH2 0x82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD DUP2 PUSH2 0xA2 JUMP JUMPDEST DUP2 EQ PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDA DUP2 PUSH2 0xB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6 JUMPI PUSH2 0xF5 PUSH2 0x7D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104 DUP5 DUP3 DUP6 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F48 DUP1 PUSH2 0x11C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB12F55EB GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xED1957D9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xED1957D9 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xF26EB277 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xFA9C48B7 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2A4 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0xB12F55EB EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xC942ADF7 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xCA93EF19 EQ PUSH2 0x232 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x5FF2C42C GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5FF2C42C EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6B38516F EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA5B39CFB EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xA730117E EQ PUSH2 0x1B1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x185C6F84 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x42530ABD EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x5790411E EQ PUSH2 0x129 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x131 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x186C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0xDCD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0x104D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AC PUSH2 0x117F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1910 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH9 0x2B5E3AF16B1880000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x195B JUMP JUMPDEST LT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 SIGNEXTEND EQ DUP1 PUSH2 0x3F8 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH1 0x0 SIGNEXTEND EQ JUMPDEST PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42E SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x0 SIGNEXTEND PUSH1 0x0 SIGNEXTEND EQ PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x2B5E3AF16B1880000 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1118CE CALLER PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x5CB CALLER PUSH2 0x9B5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x0 SIGNEXTEND PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x5 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x0 SIGNEXTEND PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x5 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x0 SIGNEXTEND PUSH1 0x0 SIGNEXTEND SUB PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x779 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x0 SIGNEXTEND SWAP1 POP PUSH9 0x2B5E3AF16B1880000 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81A4AF15 CALLER PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x8D5 CALLER PUSH2 0x9B5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x0 SIGNEXTEND PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH1 0x5 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x0 SIGNEXTEND PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB6C537D4D5CD45CF3082C7458C198A25E5E551611604A18DF485C806C2125C40 DUP5 CALLER PUSH1 0x40 MLOAD PUSH2 0x98F SWAP3 SWAP2 SWAP1 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA11 SWAP2 SWAP1 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA52 SWAP2 SWAP1 PUSH2 0x195B JUMP JUMPDEST SWAP1 POP PUSH9 0x3635C9ADC5DEA00000 DUP2 GT ISZERO PUSH2 0xA6F JUMPI PUSH1 0x3 SWAP2 POP POP PUSH2 0xA90 JUMP JUMPDEST PUSH9 0x1B1AE4D6E2EF500000 DUP2 GT ISZERO PUSH2 0xA8A JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH8 0x4563918244F40000 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9E SWAP1 PUSH2 0x1DA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF0 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81A4AF15 DUP3 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH9 0x56BC75E2D63100000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC81 SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH9 0x56BC75E2D63100000 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0xD81 SWAP2 SWAP1 PUSH2 0x1655 JUMP JUMPDEST POP POP PUSH32 0xD70D884C5BC88C9A05D6A19993BABA89FC62D9C3A7A02925BD6A748B2051D0BF DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0xDB4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH9 0x2B5E3AF16B1880000 DUP2 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE71 SWAP2 SWAP1 PUSH2 0x195B JUMP JUMPDEST LT ISZERO PUSH2 0xEB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA9 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1118CE CALLER PUSH9 0x56BC75E2D63100000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF16 SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH9 0x56BC75E2D63100000 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFA0 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFBA SWAP1 PUSH2 0x1E2F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AD SWAP1 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH9 0x56BC75E2D63100000 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x114F SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD SGT ISZERO PUSH2 0x1171 JUMPI PUSH2 0x116C DUP3 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x117B JUMP JUMPDEST PUSH2 0x117A DUP3 PUSH2 0x1453 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81A4AF15 DUP3 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH9 0x56BC75E2D63100000 PUSH8 0x4563918244F40000 PUSH2 0x1238 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1255 SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1283 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x144E JUMPI PUSH1 0x0 DUP3 PUSH1 0x4 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12B1 JUMPI PUSH2 0x12B0 PUSH2 0x1EE3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x5 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x0 SIGNEXTEND PUSH1 0x0 SIGNEXTEND SUB PUSH2 0x13E1 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81A4AF15 DUP3 PUSH9 0x2B5E3AF16B1880000 PUSH8 0x8AC7230489E80000 PUSH2 0x1391 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AE SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH9 0x2B5E3AF16B1880000 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1439 SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x128A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1650 JUMPI PUSH1 0x0 DUP3 PUSH1 0x4 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1494 JUMPI PUSH2 0x1493 PUSH2 0x1EE3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x5 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x0 SIGNEXTEND PUSH1 0x0 SIGNEXTEND SUB PUSH2 0x15E3 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81A4AF15 DUP3 PUSH9 0x2B5E3AF16B1880000 PUSH8 0x8AC7230489E80000 PUSH2 0x1593 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B0 SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH9 0x2B5E3AF16B1880000 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x163B SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x146D JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1673 SWAP2 SWAP1 PUSH2 0x1676 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x168F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1677 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A6 DUP2 PUSH2 0x1693 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x169D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D5 DUP2 PUSH2 0x1693 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F2 DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x170E DUP2 PUSH2 0x16F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x172B DUP2 PUSH2 0x1705 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1748 JUMPI PUSH2 0x1747 PUSH2 0x16C7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1756 DUP6 DUP3 DUP7 ADD PUSH2 0x16E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1767 DUP6 DUP3 DUP7 ADD PUSH2 0x171C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1787 JUMPI PUSH2 0x1786 PUSH2 0x16C7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1795 DUP5 DUP3 DUP6 ADD PUSH2 0x16E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C9 DUP3 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17D9 DUP2 PUSH2 0x17BE JUMP JUMPDEST DUP2 EQ PUSH2 0x17E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F6 DUP2 PUSH2 0x17D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1812 JUMPI PUSH2 0x1811 PUSH2 0x16C7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1820 DUP5 DUP3 DUP6 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1832 DUP2 PUSH2 0x17BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184B DUP2 PUSH2 0x1838 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1866 DUP2 PUSH2 0x1851 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1881 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x188E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x189B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x18A8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x185D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D6 PUSH2 0x18D1 PUSH2 0x18CC DUP5 PUSH2 0x179E JUMP JUMPDEST PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E8 DUP3 PUSH2 0x18BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18FA DUP3 PUSH2 0x18DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190A DUP2 PUSH2 0x18EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1925 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1901 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1940 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1829 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1955 DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1971 JUMPI PUSH2 0x1970 PUSH2 0x16C7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x197F DUP5 DUP3 DUP6 ADD PUSH2 0x1946 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CF PUSH1 0x12 DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x19DA DUP3 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19FE DUP2 PUSH2 0x19C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420766F74650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3B PUSH1 0xC DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A46 DUP3 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A6A DUP2 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920766F74656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA7 PUSH1 0xD DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB2 DUP3 PUSH2 0x1A71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AD6 DUP2 PUSH2 0x1A9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B17 DUP3 PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B22 DUP4 PUSH2 0x1693 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B3A JUMPI PUSH2 0x1B39 PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x1B62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x169D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B74 DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7F DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1B8D DUP2 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0x1BC5 JUMPI PUSH2 0x1BC4 PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1BDA JUMPI PUSH2 0x1BD9 PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEC DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF7 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT AND DUP4 DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND OR ISZERO PUSH2 0x1C1F JUMPI PUSH2 0x1C1E PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F7420766F746564206F7220616C7265616479207265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766F6B6564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C81 PUSH1 0x25 DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8C DUP3 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB0 DUP2 PUSH2 0x1C74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC2 DUP3 PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCD DUP4 PUSH2 0x1693 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CE5 JUMPI PUSH2 0x1CE4 PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF6 DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D01 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH1 0x0 DUP5 SLT AND DUP3 DUP3 SGT PUSH1 0x0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x1D28 JUMPI PUSH2 0x1D27 PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D43 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x1D50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1829 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792075706C6F616465722063616E207265766F6B650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8D PUSH1 0x18 DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D98 DUP3 PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DBC DUP2 PUSH2 0x1D80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265706F727420616C72656164792066696E616C697A65640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF9 PUSH1 0x18 DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E04 DUP3 PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E28 DUP2 PUSH2 0x1DEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3A DUP3 PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E6C JUMPI PUSH2 0x1E6B PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C72656164792076616C696461746564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAD PUSH1 0x11 DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB8 DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EDC DUP2 PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x2F 0x4F GASPRICE 0xC8 SWAP12 PUSH3 0x25C27A PUSH0 KECCAK256 PC DUP5 KECCAK256 CALLVALUE 0xA9 PUSH15 0x1362F10AE01E3EB8201057A91C4664 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"92:6438:21:-:0;;;863:1;834:30;;1122:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1187:12;1167:5;;:33;;;;;;;;;;;;;;;;;;1122:86;92:6438;;88:117:22;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;92:6438:21:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@REPORT_REWARD_7093":{"entryPoint":2709,"id":7093,"parameterSlots":0,"returnSlots":0},"@REPORT_STAKE_7079":{"entryPoint":1738,"id":7079,"parameterSlots":0,"returnSlots":0},"@VALIDATE_REWARD_7100":{"entryPoint":1726,"id":7100,"parameterSlots":0,"returnSlots":0},"@VALIDATE_STAKE_7086":{"entryPoint":3520,"id":7086,"parameterSlots":0,"returnSlots":0},"@_negoutcome_7475":{"entryPoint":5203,"id":7475,"parameterSlots":1,"returnSlots":0},"@_posoutcome_7417":{"entryPoint":4515,"id":7417,"parameterSlots":1,"returnSlots":0},"@finalizeReport_7523":{"entryPoint":4173,"id":7523,"parameterSlots":1,"returnSlots":0},"@getVoteWeight_7350":{"entryPoint":2485,"id":7350,"parameterSlots":1,"returnSlots":1},"@reportCount_7119":{"entryPoint":706,"id":7119,"parameterSlots":0,"returnSlots":0},"@reports_7124":{"entryPoint":2721,"id":7124,"parameterSlots":0,"returnSlots":0},"@revoke_report_7661":{"entryPoint":2814,"id":7661,"parameterSlots":1,"returnSlots":0},"@revoke_vote_7606":{"entryPoint":1751,"id":7606,"parameterSlots":1,"returnSlots":0},"@stakedTokens_7128":{"entryPoint":2461,"id":7128,"parameterSlots":0,"returnSlots":0},"@submitReport_7207":{"entryPoint":3533,"id":7207,"parameterSlots":1,"returnSlots":0},"@token_7072":{"entryPoint":4479,"id":7072,"parameterSlots":0,"returnSlots":0},"@validate_7310":{"entryPoint":712,"id":7310,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":6119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int8":{"entryPoint":5916,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5859,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6140,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6001,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6491,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_int8":{"entryPoint":5937,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6185,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6237,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_CampusToken_$7066_to_t_address_fromStack":{"entryPoint":6401,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":6210,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac_to_t_string_memory_ptr_fromStack":{"entryPoint":7660,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913_to_t_string_memory_ptr_fromStack":{"entryPoint":7840,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack":{"entryPoint":6810,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7_to_t_string_memory_ptr_fromStack":{"entryPoint":7552,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b_to_t_string_memory_ptr_fromStack":{"entryPoint":6594,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f_to_t_string_memory_ptr_fromStack":{"entryPoint":7284,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":6702,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5789,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6443,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6976,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_CampusToken_$7066__to_t_address__fromStack_reversed":{"entryPoint":6416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7695,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7875,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6845,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7587,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6629,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7319,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6737,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":7470,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_int256_t_bool__to_t_uint256_t_address_t_int256_t_bool__fromStack_reversed":{"entryPoint":6252,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6536,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_int256":{"entryPoint":7137,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6924,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_int256":{"entryPoint":7017,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_int256":{"entryPoint":7403,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7351,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6078,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6225,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":6200,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int8":{"entryPoint":5880,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6046,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5779,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_CampusToken_$7066_to_t_address":{"entryPoint":6383,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":6365,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":6331,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":6321,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":7727,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6877,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7907,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5831,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac":{"entryPoint":7619,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913":{"entryPoint":7799,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6":{"entryPoint":6769,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7":{"entryPoint":7511,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b":{"entryPoint":6553,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f":{"entryPoint":7205,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8":{"entryPoint":6661,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6096,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int8":{"entryPoint":5893,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5836,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15837:22","nodeType":"YulBlock","src":"0:15837:22","statements":[{"body":{"nativeSrc":"52:32:22","nodeType":"YulBlock","src":"52:32:22","statements":[{"nativeSrc":"62:16:22","nodeType":"YulAssignment","src":"62:16:22","value":{"name":"value","nativeSrc":"73:5:22","nodeType":"YulIdentifier","src":"73:5:22"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:22","nodeType":"YulIdentifier","src":"62:7:22"}]}]},"name":"cleanup_t_uint256","nativeSrc":"7:77:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:22","nodeType":"YulTypedName","src":"34:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:22","nodeType":"YulTypedName","src":"44:7:22","type":""}],"src":"7:77:22"},{"body":{"nativeSrc":"155:53:22","nodeType":"YulBlock","src":"155:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"172:3:22","nodeType":"YulIdentifier","src":"172:3:22"},{"arguments":[{"name":"value","nativeSrc":"195:5:22","nodeType":"YulIdentifier","src":"195:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"177:17:22","nodeType":"YulIdentifier","src":"177:17:22"},"nativeSrc":"177:24:22","nodeType":"YulFunctionCall","src":"177:24:22"}],"functionName":{"name":"mstore","nativeSrc":"165:6:22","nodeType":"YulIdentifier","src":"165:6:22"},"nativeSrc":"165:37:22","nodeType":"YulFunctionCall","src":"165:37:22"},"nativeSrc":"165:37:22","nodeType":"YulExpressionStatement","src":"165:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"90:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"143:5:22","nodeType":"YulTypedName","src":"143:5:22","type":""},{"name":"pos","nativeSrc":"150:3:22","nodeType":"YulTypedName","src":"150:3:22","type":""}],"src":"90:118:22"},{"body":{"nativeSrc":"312:124:22","nodeType":"YulBlock","src":"312:124:22","statements":[{"nativeSrc":"322:26:22","nodeType":"YulAssignment","src":"322:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"334:9:22","nodeType":"YulIdentifier","src":"334:9:22"},{"kind":"number","nativeSrc":"345:2:22","nodeType":"YulLiteral","src":"345:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"330:3:22","nodeType":"YulIdentifier","src":"330:3:22"},"nativeSrc":"330:18:22","nodeType":"YulFunctionCall","src":"330:18:22"},"variableNames":[{"name":"tail","nativeSrc":"322:4:22","nodeType":"YulIdentifier","src":"322:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"402:6:22","nodeType":"YulIdentifier","src":"402:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"415:9:22","nodeType":"YulIdentifier","src":"415:9:22"},{"kind":"number","nativeSrc":"426:1:22","nodeType":"YulLiteral","src":"426:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"411:3:22","nodeType":"YulIdentifier","src":"411:3:22"},"nativeSrc":"411:17:22","nodeType":"YulFunctionCall","src":"411:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"358:43:22","nodeType":"YulIdentifier","src":"358:43:22"},"nativeSrc":"358:71:22","nodeType":"YulFunctionCall","src":"358:71:22"},"nativeSrc":"358:71:22","nodeType":"YulExpressionStatement","src":"358:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"214:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"284:9:22","nodeType":"YulTypedName","src":"284:9:22","type":""},{"name":"value0","nativeSrc":"296:6:22","nodeType":"YulTypedName","src":"296:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"307:4:22","nodeType":"YulTypedName","src":"307:4:22","type":""}],"src":"214:222:22"},{"body":{"nativeSrc":"482:35:22","nodeType":"YulBlock","src":"482:35:22","statements":[{"nativeSrc":"492:19:22","nodeType":"YulAssignment","src":"492:19:22","value":{"arguments":[{"kind":"number","nativeSrc":"508:2:22","nodeType":"YulLiteral","src":"508:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"502:5:22","nodeType":"YulIdentifier","src":"502:5:22"},"nativeSrc":"502:9:22","nodeType":"YulFunctionCall","src":"502:9:22"},"variableNames":[{"name":"memPtr","nativeSrc":"492:6:22","nodeType":"YulIdentifier","src":"492:6:22"}]}]},"name":"allocate_unbounded","nativeSrc":"442:75:22","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"475:6:22","nodeType":"YulTypedName","src":"475:6:22","type":""}],"src":"442:75:22"},{"body":{"nativeSrc":"612:28:22","nodeType":"YulBlock","src":"612:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"629:1:22","nodeType":"YulLiteral","src":"629:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"632:1:22","nodeType":"YulLiteral","src":"632:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"622:6:22","nodeType":"YulIdentifier","src":"622:6:22"},"nativeSrc":"622:12:22","nodeType":"YulFunctionCall","src":"622:12:22"},"nativeSrc":"622:12:22","nodeType":"YulExpressionStatement","src":"622:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"523:117:22","nodeType":"YulFunctionDefinition","src":"523:117:22"},{"body":{"nativeSrc":"735:28:22","nodeType":"YulBlock","src":"735:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"752:1:22","nodeType":"YulLiteral","src":"752:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"755:1:22","nodeType":"YulLiteral","src":"755:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"745:6:22","nodeType":"YulIdentifier","src":"745:6:22"},"nativeSrc":"745:12:22","nodeType":"YulFunctionCall","src":"745:12:22"},"nativeSrc":"745:12:22","nodeType":"YulExpressionStatement","src":"745:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"646:117:22","nodeType":"YulFunctionDefinition","src":"646:117:22"},{"body":{"nativeSrc":"812:79:22","nodeType":"YulBlock","src":"812:79:22","statements":[{"body":{"nativeSrc":"869:16:22","nodeType":"YulBlock","src":"869:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"878:1:22","nodeType":"YulLiteral","src":"878:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"881:1:22","nodeType":"YulLiteral","src":"881:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"871:6:22","nodeType":"YulIdentifier","src":"871:6:22"},"nativeSrc":"871:12:22","nodeType":"YulFunctionCall","src":"871:12:22"},"nativeSrc":"871:12:22","nodeType":"YulExpressionStatement","src":"871:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"835:5:22","nodeType":"YulIdentifier","src":"835:5:22"},{"arguments":[{"name":"value","nativeSrc":"860:5:22","nodeType":"YulIdentifier","src":"860:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"842:17:22","nodeType":"YulIdentifier","src":"842:17:22"},"nativeSrc":"842:24:22","nodeType":"YulFunctionCall","src":"842:24:22"}],"functionName":{"name":"eq","nativeSrc":"832:2:22","nodeType":"YulIdentifier","src":"832:2:22"},"nativeSrc":"832:35:22","nodeType":"YulFunctionCall","src":"832:35:22"}],"functionName":{"name":"iszero","nativeSrc":"825:6:22","nodeType":"YulIdentifier","src":"825:6:22"},"nativeSrc":"825:43:22","nodeType":"YulFunctionCall","src":"825:43:22"},"nativeSrc":"822:63:22","nodeType":"YulIf","src":"822:63:22"}]},"name":"validator_revert_t_uint256","nativeSrc":"769:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"805:5:22","nodeType":"YulTypedName","src":"805:5:22","type":""}],"src":"769:122:22"},{"body":{"nativeSrc":"949:87:22","nodeType":"YulBlock","src":"949:87:22","statements":[{"nativeSrc":"959:29:22","nodeType":"YulAssignment","src":"959:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"981:6:22","nodeType":"YulIdentifier","src":"981:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"968:12:22","nodeType":"YulIdentifier","src":"968:12:22"},"nativeSrc":"968:20:22","nodeType":"YulFunctionCall","src":"968:20:22"},"variableNames":[{"name":"value","nativeSrc":"959:5:22","nodeType":"YulIdentifier","src":"959:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1024:5:22","nodeType":"YulIdentifier","src":"1024:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"997:26:22","nodeType":"YulIdentifier","src":"997:26:22"},"nativeSrc":"997:33:22","nodeType":"YulFunctionCall","src":"997:33:22"},"nativeSrc":"997:33:22","nodeType":"YulExpressionStatement","src":"997:33:22"}]},"name":"abi_decode_t_uint256","nativeSrc":"897:139:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"927:6:22","nodeType":"YulTypedName","src":"927:6:22","type":""},{"name":"end","nativeSrc":"935:3:22","nodeType":"YulTypedName","src":"935:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"943:5:22","nodeType":"YulTypedName","src":"943:5:22","type":""}],"src":"897:139:22"},{"body":{"nativeSrc":"1084:47:22","nodeType":"YulBlock","src":"1084:47:22","statements":[{"nativeSrc":"1094:31:22","nodeType":"YulAssignment","src":"1094:31:22","value":{"arguments":[{"kind":"number","nativeSrc":"1116:1:22","nodeType":"YulLiteral","src":"1116:1:22","type":"","value":"0"},{"name":"value","nativeSrc":"1119:5:22","nodeType":"YulIdentifier","src":"1119:5:22"}],"functionName":{"name":"signextend","nativeSrc":"1105:10:22","nodeType":"YulIdentifier","src":"1105:10:22"},"nativeSrc":"1105:20:22","nodeType":"YulFunctionCall","src":"1105:20:22"},"variableNames":[{"name":"cleaned","nativeSrc":"1094:7:22","nodeType":"YulIdentifier","src":"1094:7:22"}]}]},"name":"cleanup_t_int8","nativeSrc":"1042:89:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1066:5:22","nodeType":"YulTypedName","src":"1066:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1076:7:22","nodeType":"YulTypedName","src":"1076:7:22","type":""}],"src":"1042:89:22"},{"body":{"nativeSrc":"1177:76:22","nodeType":"YulBlock","src":"1177:76:22","statements":[{"body":{"nativeSrc":"1231:16:22","nodeType":"YulBlock","src":"1231:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1240:1:22","nodeType":"YulLiteral","src":"1240:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1243:1:22","nodeType":"YulLiteral","src":"1243:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1233:6:22","nodeType":"YulIdentifier","src":"1233:6:22"},"nativeSrc":"1233:12:22","nodeType":"YulFunctionCall","src":"1233:12:22"},"nativeSrc":"1233:12:22","nodeType":"YulExpressionStatement","src":"1233:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1200:5:22","nodeType":"YulIdentifier","src":"1200:5:22"},{"arguments":[{"name":"value","nativeSrc":"1222:5:22","nodeType":"YulIdentifier","src":"1222:5:22"}],"functionName":{"name":"cleanup_t_int8","nativeSrc":"1207:14:22","nodeType":"YulIdentifier","src":"1207:14:22"},"nativeSrc":"1207:21:22","nodeType":"YulFunctionCall","src":"1207:21:22"}],"functionName":{"name":"eq","nativeSrc":"1197:2:22","nodeType":"YulIdentifier","src":"1197:2:22"},"nativeSrc":"1197:32:22","nodeType":"YulFunctionCall","src":"1197:32:22"}],"functionName":{"name":"iszero","nativeSrc":"1190:6:22","nodeType":"YulIdentifier","src":"1190:6:22"},"nativeSrc":"1190:40:22","nodeType":"YulFunctionCall","src":"1190:40:22"},"nativeSrc":"1187:60:22","nodeType":"YulIf","src":"1187:60:22"}]},"name":"validator_revert_t_int8","nativeSrc":"1137:116:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1170:5:22","nodeType":"YulTypedName","src":"1170:5:22","type":""}],"src":"1137:116:22"},{"body":{"nativeSrc":"1308:84:22","nodeType":"YulBlock","src":"1308:84:22","statements":[{"nativeSrc":"1318:29:22","nodeType":"YulAssignment","src":"1318:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"1340:6:22","nodeType":"YulIdentifier","src":"1340:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"1327:12:22","nodeType":"YulIdentifier","src":"1327:12:22"},"nativeSrc":"1327:20:22","nodeType":"YulFunctionCall","src":"1327:20:22"},"variableNames":[{"name":"value","nativeSrc":"1318:5:22","nodeType":"YulIdentifier","src":"1318:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1380:5:22","nodeType":"YulIdentifier","src":"1380:5:22"}],"functionName":{"name":"validator_revert_t_int8","nativeSrc":"1356:23:22","nodeType":"YulIdentifier","src":"1356:23:22"},"nativeSrc":"1356:30:22","nodeType":"YulFunctionCall","src":"1356:30:22"},"nativeSrc":"1356:30:22","nodeType":"YulExpressionStatement","src":"1356:30:22"}]},"name":"abi_decode_t_int8","nativeSrc":"1259:133:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1286:6:22","nodeType":"YulTypedName","src":"1286:6:22","type":""},{"name":"end","nativeSrc":"1294:3:22","nodeType":"YulTypedName","src":"1294:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1302:5:22","nodeType":"YulTypedName","src":"1302:5:22","type":""}],"src":"1259:133:22"},{"body":{"nativeSrc":"1478:388:22","nodeType":"YulBlock","src":"1478:388:22","statements":[{"body":{"nativeSrc":"1524:83:22","nodeType":"YulBlock","src":"1524:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1526:77:22","nodeType":"YulIdentifier","src":"1526:77:22"},"nativeSrc":"1526:79:22","nodeType":"YulFunctionCall","src":"1526:79:22"},"nativeSrc":"1526:79:22","nodeType":"YulExpressionStatement","src":"1526:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1499:7:22","nodeType":"YulIdentifier","src":"1499:7:22"},{"name":"headStart","nativeSrc":"1508:9:22","nodeType":"YulIdentifier","src":"1508:9:22"}],"functionName":{"name":"sub","nativeSrc":"1495:3:22","nodeType":"YulIdentifier","src":"1495:3:22"},"nativeSrc":"1495:23:22","nodeType":"YulFunctionCall","src":"1495:23:22"},{"kind":"number","nativeSrc":"1520:2:22","nodeType":"YulLiteral","src":"1520:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1491:3:22","nodeType":"YulIdentifier","src":"1491:3:22"},"nativeSrc":"1491:32:22","nodeType":"YulFunctionCall","src":"1491:32:22"},"nativeSrc":"1488:119:22","nodeType":"YulIf","src":"1488:119:22"},{"nativeSrc":"1617:117:22","nodeType":"YulBlock","src":"1617:117:22","statements":[{"nativeSrc":"1632:15:22","nodeType":"YulVariableDeclaration","src":"1632:15:22","value":{"kind":"number","nativeSrc":"1646:1:22","nodeType":"YulLiteral","src":"1646:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1636:6:22","nodeType":"YulTypedName","src":"1636:6:22","type":""}]},{"nativeSrc":"1661:63:22","nodeType":"YulAssignment","src":"1661:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1696:9:22","nodeType":"YulIdentifier","src":"1696:9:22"},{"name":"offset","nativeSrc":"1707:6:22","nodeType":"YulIdentifier","src":"1707:6:22"}],"functionName":{"name":"add","nativeSrc":"1692:3:22","nodeType":"YulIdentifier","src":"1692:3:22"},"nativeSrc":"1692:22:22","nodeType":"YulFunctionCall","src":"1692:22:22"},{"name":"dataEnd","nativeSrc":"1716:7:22","nodeType":"YulIdentifier","src":"1716:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1671:20:22","nodeType":"YulIdentifier","src":"1671:20:22"},"nativeSrc":"1671:53:22","nodeType":"YulFunctionCall","src":"1671:53:22"},"variableNames":[{"name":"value0","nativeSrc":"1661:6:22","nodeType":"YulIdentifier","src":"1661:6:22"}]}]},{"nativeSrc":"1744:115:22","nodeType":"YulBlock","src":"1744:115:22","statements":[{"nativeSrc":"1759:16:22","nodeType":"YulVariableDeclaration","src":"1759:16:22","value":{"kind":"number","nativeSrc":"1773:2:22","nodeType":"YulLiteral","src":"1773:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1763:6:22","nodeType":"YulTypedName","src":"1763:6:22","type":""}]},{"nativeSrc":"1789:60:22","nodeType":"YulAssignment","src":"1789:60:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1821:9:22","nodeType":"YulIdentifier","src":"1821:9:22"},{"name":"offset","nativeSrc":"1832:6:22","nodeType":"YulIdentifier","src":"1832:6:22"}],"functionName":{"name":"add","nativeSrc":"1817:3:22","nodeType":"YulIdentifier","src":"1817:3:22"},"nativeSrc":"1817:22:22","nodeType":"YulFunctionCall","src":"1817:22:22"},{"name":"dataEnd","nativeSrc":"1841:7:22","nodeType":"YulIdentifier","src":"1841:7:22"}],"functionName":{"name":"abi_decode_t_int8","nativeSrc":"1799:17:22","nodeType":"YulIdentifier","src":"1799:17:22"},"nativeSrc":"1799:50:22","nodeType":"YulFunctionCall","src":"1799:50:22"},"variableNames":[{"name":"value1","nativeSrc":"1789:6:22","nodeType":"YulIdentifier","src":"1789:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_int8","nativeSrc":"1398:468:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1440:9:22","nodeType":"YulTypedName","src":"1440:9:22","type":""},{"name":"dataEnd","nativeSrc":"1451:7:22","nodeType":"YulTypedName","src":"1451:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1463:6:22","nodeType":"YulTypedName","src":"1463:6:22","type":""},{"name":"value1","nativeSrc":"1471:6:22","nodeType":"YulTypedName","src":"1471:6:22","type":""}],"src":"1398:468:22"},{"body":{"nativeSrc":"1938:263:22","nodeType":"YulBlock","src":"1938:263:22","statements":[{"body":{"nativeSrc":"1984:83:22","nodeType":"YulBlock","src":"1984:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1986:77:22","nodeType":"YulIdentifier","src":"1986:77:22"},"nativeSrc":"1986:79:22","nodeType":"YulFunctionCall","src":"1986:79:22"},"nativeSrc":"1986:79:22","nodeType":"YulExpressionStatement","src":"1986:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1959:7:22","nodeType":"YulIdentifier","src":"1959:7:22"},{"name":"headStart","nativeSrc":"1968:9:22","nodeType":"YulIdentifier","src":"1968:9:22"}],"functionName":{"name":"sub","nativeSrc":"1955:3:22","nodeType":"YulIdentifier","src":"1955:3:22"},"nativeSrc":"1955:23:22","nodeType":"YulFunctionCall","src":"1955:23:22"},{"kind":"number","nativeSrc":"1980:2:22","nodeType":"YulLiteral","src":"1980:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1951:3:22","nodeType":"YulIdentifier","src":"1951:3:22"},"nativeSrc":"1951:32:22","nodeType":"YulFunctionCall","src":"1951:32:22"},"nativeSrc":"1948:119:22","nodeType":"YulIf","src":"1948:119:22"},{"nativeSrc":"2077:117:22","nodeType":"YulBlock","src":"2077:117:22","statements":[{"nativeSrc":"2092:15:22","nodeType":"YulVariableDeclaration","src":"2092:15:22","value":{"kind":"number","nativeSrc":"2106:1:22","nodeType":"YulLiteral","src":"2106:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2096:6:22","nodeType":"YulTypedName","src":"2096:6:22","type":""}]},{"nativeSrc":"2121:63:22","nodeType":"YulAssignment","src":"2121:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2156:9:22","nodeType":"YulIdentifier","src":"2156:9:22"},{"name":"offset","nativeSrc":"2167:6:22","nodeType":"YulIdentifier","src":"2167:6:22"}],"functionName":{"name":"add","nativeSrc":"2152:3:22","nodeType":"YulIdentifier","src":"2152:3:22"},"nativeSrc":"2152:22:22","nodeType":"YulFunctionCall","src":"2152:22:22"},{"name":"dataEnd","nativeSrc":"2176:7:22","nodeType":"YulIdentifier","src":"2176:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2131:20:22","nodeType":"YulIdentifier","src":"2131:20:22"},"nativeSrc":"2131:53:22","nodeType":"YulFunctionCall","src":"2131:53:22"},"variableNames":[{"name":"value0","nativeSrc":"2121:6:22","nodeType":"YulIdentifier","src":"2121:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1872:329:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1908:9:22","nodeType":"YulTypedName","src":"1908:9:22","type":""},{"name":"dataEnd","nativeSrc":"1919:7:22","nodeType":"YulTypedName","src":"1919:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1931:6:22","nodeType":"YulTypedName","src":"1931:6:22","type":""}],"src":"1872:329:22"},{"body":{"nativeSrc":"2252:81:22","nodeType":"YulBlock","src":"2252:81:22","statements":[{"nativeSrc":"2262:65:22","nodeType":"YulAssignment","src":"2262:65:22","value":{"arguments":[{"name":"value","nativeSrc":"2277:5:22","nodeType":"YulIdentifier","src":"2277:5:22"},{"kind":"number","nativeSrc":"2284:42:22","nodeType":"YulLiteral","src":"2284:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2273:3:22","nodeType":"YulIdentifier","src":"2273:3:22"},"nativeSrc":"2273:54:22","nodeType":"YulFunctionCall","src":"2273:54:22"},"variableNames":[{"name":"cleaned","nativeSrc":"2262:7:22","nodeType":"YulIdentifier","src":"2262:7:22"}]}]},"name":"cleanup_t_uint160","nativeSrc":"2207:126:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2234:5:22","nodeType":"YulTypedName","src":"2234:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2244:7:22","nodeType":"YulTypedName","src":"2244:7:22","type":""}],"src":"2207:126:22"},{"body":{"nativeSrc":"2384:51:22","nodeType":"YulBlock","src":"2384:51:22","statements":[{"nativeSrc":"2394:35:22","nodeType":"YulAssignment","src":"2394:35:22","value":{"arguments":[{"name":"value","nativeSrc":"2423:5:22","nodeType":"YulIdentifier","src":"2423:5:22"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2405:17:22","nodeType":"YulIdentifier","src":"2405:17:22"},"nativeSrc":"2405:24:22","nodeType":"YulFunctionCall","src":"2405:24:22"},"variableNames":[{"name":"cleaned","nativeSrc":"2394:7:22","nodeType":"YulIdentifier","src":"2394:7:22"}]}]},"name":"cleanup_t_address","nativeSrc":"2339:96:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2366:5:22","nodeType":"YulTypedName","src":"2366:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2376:7:22","nodeType":"YulTypedName","src":"2376:7:22","type":""}],"src":"2339:96:22"},{"body":{"nativeSrc":"2484:79:22","nodeType":"YulBlock","src":"2484:79:22","statements":[{"body":{"nativeSrc":"2541:16:22","nodeType":"YulBlock","src":"2541:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2550:1:22","nodeType":"YulLiteral","src":"2550:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2553:1:22","nodeType":"YulLiteral","src":"2553:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2543:6:22","nodeType":"YulIdentifier","src":"2543:6:22"},"nativeSrc":"2543:12:22","nodeType":"YulFunctionCall","src":"2543:12:22"},"nativeSrc":"2543:12:22","nodeType":"YulExpressionStatement","src":"2543:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2507:5:22","nodeType":"YulIdentifier","src":"2507:5:22"},{"arguments":[{"name":"value","nativeSrc":"2532:5:22","nodeType":"YulIdentifier","src":"2532:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2514:17:22","nodeType":"YulIdentifier","src":"2514:17:22"},"nativeSrc":"2514:24:22","nodeType":"YulFunctionCall","src":"2514:24:22"}],"functionName":{"name":"eq","nativeSrc":"2504:2:22","nodeType":"YulIdentifier","src":"2504:2:22"},"nativeSrc":"2504:35:22","nodeType":"YulFunctionCall","src":"2504:35:22"}],"functionName":{"name":"iszero","nativeSrc":"2497:6:22","nodeType":"YulIdentifier","src":"2497:6:22"},"nativeSrc":"2497:43:22","nodeType":"YulFunctionCall","src":"2497:43:22"},"nativeSrc":"2494:63:22","nodeType":"YulIf","src":"2494:63:22"}]},"name":"validator_revert_t_address","nativeSrc":"2441:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2477:5:22","nodeType":"YulTypedName","src":"2477:5:22","type":""}],"src":"2441:122:22"},{"body":{"nativeSrc":"2621:87:22","nodeType":"YulBlock","src":"2621:87:22","statements":[{"nativeSrc":"2631:29:22","nodeType":"YulAssignment","src":"2631:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"2653:6:22","nodeType":"YulIdentifier","src":"2653:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"2640:12:22","nodeType":"YulIdentifier","src":"2640:12:22"},"nativeSrc":"2640:20:22","nodeType":"YulFunctionCall","src":"2640:20:22"},"variableNames":[{"name":"value","nativeSrc":"2631:5:22","nodeType":"YulIdentifier","src":"2631:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2696:5:22","nodeType":"YulIdentifier","src":"2696:5:22"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2669:26:22","nodeType":"YulIdentifier","src":"2669:26:22"},"nativeSrc":"2669:33:22","nodeType":"YulFunctionCall","src":"2669:33:22"},"nativeSrc":"2669:33:22","nodeType":"YulExpressionStatement","src":"2669:33:22"}]},"name":"abi_decode_t_address","nativeSrc":"2569:139:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2599:6:22","nodeType":"YulTypedName","src":"2599:6:22","type":""},{"name":"end","nativeSrc":"2607:3:22","nodeType":"YulTypedName","src":"2607:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2615:5:22","nodeType":"YulTypedName","src":"2615:5:22","type":""}],"src":"2569:139:22"},{"body":{"nativeSrc":"2780:263:22","nodeType":"YulBlock","src":"2780:263:22","statements":[{"body":{"nativeSrc":"2826:83:22","nodeType":"YulBlock","src":"2826:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2828:77:22","nodeType":"YulIdentifier","src":"2828:77:22"},"nativeSrc":"2828:79:22","nodeType":"YulFunctionCall","src":"2828:79:22"},"nativeSrc":"2828:79:22","nodeType":"YulExpressionStatement","src":"2828:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2801:7:22","nodeType":"YulIdentifier","src":"2801:7:22"},{"name":"headStart","nativeSrc":"2810:9:22","nodeType":"YulIdentifier","src":"2810:9:22"}],"functionName":{"name":"sub","nativeSrc":"2797:3:22","nodeType":"YulIdentifier","src":"2797:3:22"},"nativeSrc":"2797:23:22","nodeType":"YulFunctionCall","src":"2797:23:22"},{"kind":"number","nativeSrc":"2822:2:22","nodeType":"YulLiteral","src":"2822:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2793:3:22","nodeType":"YulIdentifier","src":"2793:3:22"},"nativeSrc":"2793:32:22","nodeType":"YulFunctionCall","src":"2793:32:22"},"nativeSrc":"2790:119:22","nodeType":"YulIf","src":"2790:119:22"},{"nativeSrc":"2919:117:22","nodeType":"YulBlock","src":"2919:117:22","statements":[{"nativeSrc":"2934:15:22","nodeType":"YulVariableDeclaration","src":"2934:15:22","value":{"kind":"number","nativeSrc":"2948:1:22","nodeType":"YulLiteral","src":"2948:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2938:6:22","nodeType":"YulTypedName","src":"2938:6:22","type":""}]},{"nativeSrc":"2963:63:22","nodeType":"YulAssignment","src":"2963:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2998:9:22","nodeType":"YulIdentifier","src":"2998:9:22"},{"name":"offset","nativeSrc":"3009:6:22","nodeType":"YulIdentifier","src":"3009:6:22"}],"functionName":{"name":"add","nativeSrc":"2994:3:22","nodeType":"YulIdentifier","src":"2994:3:22"},"nativeSrc":"2994:22:22","nodeType":"YulFunctionCall","src":"2994:22:22"},{"name":"dataEnd","nativeSrc":"3018:7:22","nodeType":"YulIdentifier","src":"3018:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2973:20:22","nodeType":"YulIdentifier","src":"2973:20:22"},"nativeSrc":"2973:53:22","nodeType":"YulFunctionCall","src":"2973:53:22"},"variableNames":[{"name":"value0","nativeSrc":"2963:6:22","nodeType":"YulIdentifier","src":"2963:6:22"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2714:329:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2750:9:22","nodeType":"YulTypedName","src":"2750:9:22","type":""},{"name":"dataEnd","nativeSrc":"2761:7:22","nodeType":"YulTypedName","src":"2761:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2773:6:22","nodeType":"YulTypedName","src":"2773:6:22","type":""}],"src":"2714:329:22"},{"body":{"nativeSrc":"3114:53:22","nodeType":"YulBlock","src":"3114:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3131:3:22","nodeType":"YulIdentifier","src":"3131:3:22"},{"arguments":[{"name":"value","nativeSrc":"3154:5:22","nodeType":"YulIdentifier","src":"3154:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3136:17:22","nodeType":"YulIdentifier","src":"3136:17:22"},"nativeSrc":"3136:24:22","nodeType":"YulFunctionCall","src":"3136:24:22"}],"functionName":{"name":"mstore","nativeSrc":"3124:6:22","nodeType":"YulIdentifier","src":"3124:6:22"},"nativeSrc":"3124:37:22","nodeType":"YulFunctionCall","src":"3124:37:22"},"nativeSrc":"3124:37:22","nodeType":"YulExpressionStatement","src":"3124:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3049:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3102:5:22","nodeType":"YulTypedName","src":"3102:5:22","type":""},{"name":"pos","nativeSrc":"3109:3:22","nodeType":"YulTypedName","src":"3109:3:22","type":""}],"src":"3049:118:22"},{"body":{"nativeSrc":"3217:32:22","nodeType":"YulBlock","src":"3217:32:22","statements":[{"nativeSrc":"3227:16:22","nodeType":"YulAssignment","src":"3227:16:22","value":{"name":"value","nativeSrc":"3238:5:22","nodeType":"YulIdentifier","src":"3238:5:22"},"variableNames":[{"name":"cleaned","nativeSrc":"3227:7:22","nodeType":"YulIdentifier","src":"3227:7:22"}]}]},"name":"cleanup_t_int256","nativeSrc":"3173:76:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3199:5:22","nodeType":"YulTypedName","src":"3199:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3209:7:22","nodeType":"YulTypedName","src":"3209:7:22","type":""}],"src":"3173:76:22"},{"body":{"nativeSrc":"3318:52:22","nodeType":"YulBlock","src":"3318:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3335:3:22","nodeType":"YulIdentifier","src":"3335:3:22"},{"arguments":[{"name":"value","nativeSrc":"3357:5:22","nodeType":"YulIdentifier","src":"3357:5:22"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"3340:16:22","nodeType":"YulIdentifier","src":"3340:16:22"},"nativeSrc":"3340:23:22","nodeType":"YulFunctionCall","src":"3340:23:22"}],"functionName":{"name":"mstore","nativeSrc":"3328:6:22","nodeType":"YulIdentifier","src":"3328:6:22"},"nativeSrc":"3328:36:22","nodeType":"YulFunctionCall","src":"3328:36:22"},"nativeSrc":"3328:36:22","nodeType":"YulExpressionStatement","src":"3328:36:22"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nativeSrc":"3255:115:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3306:5:22","nodeType":"YulTypedName","src":"3306:5:22","type":""},{"name":"pos","nativeSrc":"3313:3:22","nodeType":"YulTypedName","src":"3313:3:22","type":""}],"src":"3255:115:22"},{"body":{"nativeSrc":"3418:48:22","nodeType":"YulBlock","src":"3418:48:22","statements":[{"nativeSrc":"3428:32:22","nodeType":"YulAssignment","src":"3428:32:22","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3453:5:22","nodeType":"YulIdentifier","src":"3453:5:22"}],"functionName":{"name":"iszero","nativeSrc":"3446:6:22","nodeType":"YulIdentifier","src":"3446:6:22"},"nativeSrc":"3446:13:22","nodeType":"YulFunctionCall","src":"3446:13:22"}],"functionName":{"name":"iszero","nativeSrc":"3439:6:22","nodeType":"YulIdentifier","src":"3439:6:22"},"nativeSrc":"3439:21:22","nodeType":"YulFunctionCall","src":"3439:21:22"},"variableNames":[{"name":"cleaned","nativeSrc":"3428:7:22","nodeType":"YulIdentifier","src":"3428:7:22"}]}]},"name":"cleanup_t_bool","nativeSrc":"3376:90:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3400:5:22","nodeType":"YulTypedName","src":"3400:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3410:7:22","nodeType":"YulTypedName","src":"3410:7:22","type":""}],"src":"3376:90:22"},{"body":{"nativeSrc":"3531:50:22","nodeType":"YulBlock","src":"3531:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3548:3:22","nodeType":"YulIdentifier","src":"3548:3:22"},{"arguments":[{"name":"value","nativeSrc":"3568:5:22","nodeType":"YulIdentifier","src":"3568:5:22"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3553:14:22","nodeType":"YulIdentifier","src":"3553:14:22"},"nativeSrc":"3553:21:22","nodeType":"YulFunctionCall","src":"3553:21:22"}],"functionName":{"name":"mstore","nativeSrc":"3541:6:22","nodeType":"YulIdentifier","src":"3541:6:22"},"nativeSrc":"3541:34:22","nodeType":"YulFunctionCall","src":"3541:34:22"},"nativeSrc":"3541:34:22","nodeType":"YulExpressionStatement","src":"3541:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3472:109:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3519:5:22","nodeType":"YulTypedName","src":"3519:5:22","type":""},{"name":"pos","nativeSrc":"3526:3:22","nodeType":"YulTypedName","src":"3526:3:22","type":""}],"src":"3472:109:22"},{"body":{"nativeSrc":"3761:363:22","nodeType":"YulBlock","src":"3761:363:22","statements":[{"nativeSrc":"3771:27:22","nodeType":"YulAssignment","src":"3771:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3783:9:22","nodeType":"YulIdentifier","src":"3783:9:22"},{"kind":"number","nativeSrc":"3794:3:22","nodeType":"YulLiteral","src":"3794:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3779:3:22","nodeType":"YulIdentifier","src":"3779:3:22"},"nativeSrc":"3779:19:22","nodeType":"YulFunctionCall","src":"3779:19:22"},"variableNames":[{"name":"tail","nativeSrc":"3771:4:22","nodeType":"YulIdentifier","src":"3771:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3852:6:22","nodeType":"YulIdentifier","src":"3852:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"3865:9:22","nodeType":"YulIdentifier","src":"3865:9:22"},{"kind":"number","nativeSrc":"3876:1:22","nodeType":"YulLiteral","src":"3876:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3861:3:22","nodeType":"YulIdentifier","src":"3861:3:22"},"nativeSrc":"3861:17:22","nodeType":"YulFunctionCall","src":"3861:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3808:43:22","nodeType":"YulIdentifier","src":"3808:43:22"},"nativeSrc":"3808:71:22","nodeType":"YulFunctionCall","src":"3808:71:22"},"nativeSrc":"3808:71:22","nodeType":"YulExpressionStatement","src":"3808:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"3933:6:22","nodeType":"YulIdentifier","src":"3933:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"3946:9:22","nodeType":"YulIdentifier","src":"3946:9:22"},{"kind":"number","nativeSrc":"3957:2:22","nodeType":"YulLiteral","src":"3957:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3942:3:22","nodeType":"YulIdentifier","src":"3942:3:22"},"nativeSrc":"3942:18:22","nodeType":"YulFunctionCall","src":"3942:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3889:43:22","nodeType":"YulIdentifier","src":"3889:43:22"},"nativeSrc":"3889:72:22","nodeType":"YulFunctionCall","src":"3889:72:22"},"nativeSrc":"3889:72:22","nodeType":"YulExpressionStatement","src":"3889:72:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"4013:6:22","nodeType":"YulIdentifier","src":"4013:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"4026:9:22","nodeType":"YulIdentifier","src":"4026:9:22"},{"kind":"number","nativeSrc":"4037:2:22","nodeType":"YulLiteral","src":"4037:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4022:3:22","nodeType":"YulIdentifier","src":"4022:3:22"},"nativeSrc":"4022:18:22","nodeType":"YulFunctionCall","src":"4022:18:22"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nativeSrc":"3971:41:22","nodeType":"YulIdentifier","src":"3971:41:22"},"nativeSrc":"3971:70:22","nodeType":"YulFunctionCall","src":"3971:70:22"},"nativeSrc":"3971:70:22","nodeType":"YulExpressionStatement","src":"3971:70:22"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"4089:6:22","nodeType":"YulIdentifier","src":"4089:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"4102:9:22","nodeType":"YulIdentifier","src":"4102:9:22"},{"kind":"number","nativeSrc":"4113:2:22","nodeType":"YulLiteral","src":"4113:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4098:3:22","nodeType":"YulIdentifier","src":"4098:3:22"},"nativeSrc":"4098:18:22","nodeType":"YulFunctionCall","src":"4098:18:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"4051:37:22","nodeType":"YulIdentifier","src":"4051:37:22"},"nativeSrc":"4051:66:22","nodeType":"YulFunctionCall","src":"4051:66:22"},"nativeSrc":"4051:66:22","nodeType":"YulExpressionStatement","src":"4051:66:22"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_int256_t_bool__to_t_uint256_t_address_t_int256_t_bool__fromStack_reversed","nativeSrc":"3587:537:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3709:9:22","nodeType":"YulTypedName","src":"3709:9:22","type":""},{"name":"value3","nativeSrc":"3721:6:22","nodeType":"YulTypedName","src":"3721:6:22","type":""},{"name":"value2","nativeSrc":"3729:6:22","nodeType":"YulTypedName","src":"3729:6:22","type":""},{"name":"value1","nativeSrc":"3737:6:22","nodeType":"YulTypedName","src":"3737:6:22","type":""},{"name":"value0","nativeSrc":"3745:6:22","nodeType":"YulTypedName","src":"3745:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3756:4:22","nodeType":"YulTypedName","src":"3756:4:22","type":""}],"src":"3587:537:22"},{"body":{"nativeSrc":"4162:28:22","nodeType":"YulBlock","src":"4162:28:22","statements":[{"nativeSrc":"4172:12:22","nodeType":"YulAssignment","src":"4172:12:22","value":{"name":"value","nativeSrc":"4179:5:22","nodeType":"YulIdentifier","src":"4179:5:22"},"variableNames":[{"name":"ret","nativeSrc":"4172:3:22","nodeType":"YulIdentifier","src":"4172:3:22"}]}]},"name":"identity","nativeSrc":"4130:60:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4148:5:22","nodeType":"YulTypedName","src":"4148:5:22","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"4158:3:22","nodeType":"YulTypedName","src":"4158:3:22","type":""}],"src":"4130:60:22"},{"body":{"nativeSrc":"4256:82:22","nodeType":"YulBlock","src":"4256:82:22","statements":[{"nativeSrc":"4266:66:22","nodeType":"YulAssignment","src":"4266:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4324:5:22","nodeType":"YulIdentifier","src":"4324:5:22"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"4306:17:22","nodeType":"YulIdentifier","src":"4306:17:22"},"nativeSrc":"4306:24:22","nodeType":"YulFunctionCall","src":"4306:24:22"}],"functionName":{"name":"identity","nativeSrc":"4297:8:22","nodeType":"YulIdentifier","src":"4297:8:22"},"nativeSrc":"4297:34:22","nodeType":"YulFunctionCall","src":"4297:34:22"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"4279:17:22","nodeType":"YulIdentifier","src":"4279:17:22"},"nativeSrc":"4279:53:22","nodeType":"YulFunctionCall","src":"4279:53:22"},"variableNames":[{"name":"converted","nativeSrc":"4266:9:22","nodeType":"YulIdentifier","src":"4266:9:22"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"4196:142:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4236:5:22","nodeType":"YulTypedName","src":"4236:5:22","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"4246:9:22","nodeType":"YulTypedName","src":"4246:9:22","type":""}],"src":"4196:142:22"},{"body":{"nativeSrc":"4404:66:22","nodeType":"YulBlock","src":"4404:66:22","statements":[{"nativeSrc":"4414:50:22","nodeType":"YulAssignment","src":"4414:50:22","value":{"arguments":[{"name":"value","nativeSrc":"4458:5:22","nodeType":"YulIdentifier","src":"4458:5:22"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"4427:30:22","nodeType":"YulIdentifier","src":"4427:30:22"},"nativeSrc":"4427:37:22","nodeType":"YulFunctionCall","src":"4427:37:22"},"variableNames":[{"name":"converted","nativeSrc":"4414:9:22","nodeType":"YulIdentifier","src":"4414:9:22"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"4344:126:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4384:5:22","nodeType":"YulTypedName","src":"4384:5:22","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"4394:9:22","nodeType":"YulTypedName","src":"4394:9:22","type":""}],"src":"4344:126:22"},{"body":{"nativeSrc":"4556:66:22","nodeType":"YulBlock","src":"4556:66:22","statements":[{"nativeSrc":"4566:50:22","nodeType":"YulAssignment","src":"4566:50:22","value":{"arguments":[{"name":"value","nativeSrc":"4610:5:22","nodeType":"YulIdentifier","src":"4610:5:22"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"4579:30:22","nodeType":"YulIdentifier","src":"4579:30:22"},"nativeSrc":"4579:37:22","nodeType":"YulFunctionCall","src":"4579:37:22"},"variableNames":[{"name":"converted","nativeSrc":"4566:9:22","nodeType":"YulIdentifier","src":"4566:9:22"}]}]},"name":"convert_t_contract$_CampusToken_$7066_to_t_address","nativeSrc":"4476:146:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4536:5:22","nodeType":"YulTypedName","src":"4536:5:22","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"4546:9:22","nodeType":"YulTypedName","src":"4546:9:22","type":""}],"src":"4476:146:22"},{"body":{"nativeSrc":"4713:86:22","nodeType":"YulBlock","src":"4713:86:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4730:3:22","nodeType":"YulIdentifier","src":"4730:3:22"},{"arguments":[{"name":"value","nativeSrc":"4786:5:22","nodeType":"YulIdentifier","src":"4786:5:22"}],"functionName":{"name":"convert_t_contract$_CampusToken_$7066_to_t_address","nativeSrc":"4735:50:22","nodeType":"YulIdentifier","src":"4735:50:22"},"nativeSrc":"4735:57:22","nodeType":"YulFunctionCall","src":"4735:57:22"}],"functionName":{"name":"mstore","nativeSrc":"4723:6:22","nodeType":"YulIdentifier","src":"4723:6:22"},"nativeSrc":"4723:70:22","nodeType":"YulFunctionCall","src":"4723:70:22"},"nativeSrc":"4723:70:22","nodeType":"YulExpressionStatement","src":"4723:70:22"}]},"name":"abi_encode_t_contract$_CampusToken_$7066_to_t_address_fromStack","nativeSrc":"4628:171:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4701:5:22","nodeType":"YulTypedName","src":"4701:5:22","type":""},{"name":"pos","nativeSrc":"4708:3:22","nodeType":"YulTypedName","src":"4708:3:22","type":""}],"src":"4628:171:22"},{"body":{"nativeSrc":"4923:144:22","nodeType":"YulBlock","src":"4923:144:22","statements":[{"nativeSrc":"4933:26:22","nodeType":"YulAssignment","src":"4933:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4945:9:22","nodeType":"YulIdentifier","src":"4945:9:22"},{"kind":"number","nativeSrc":"4956:2:22","nodeType":"YulLiteral","src":"4956:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4941:3:22","nodeType":"YulIdentifier","src":"4941:3:22"},"nativeSrc":"4941:18:22","nodeType":"YulFunctionCall","src":"4941:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4933:4:22","nodeType":"YulIdentifier","src":"4933:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5033:6:22","nodeType":"YulIdentifier","src":"5033:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"5046:9:22","nodeType":"YulIdentifier","src":"5046:9:22"},{"kind":"number","nativeSrc":"5057:1:22","nodeType":"YulLiteral","src":"5057:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5042:3:22","nodeType":"YulIdentifier","src":"5042:3:22"},"nativeSrc":"5042:17:22","nodeType":"YulFunctionCall","src":"5042:17:22"}],"functionName":{"name":"abi_encode_t_contract$_CampusToken_$7066_to_t_address_fromStack","nativeSrc":"4969:63:22","nodeType":"YulIdentifier","src":"4969:63:22"},"nativeSrc":"4969:91:22","nodeType":"YulFunctionCall","src":"4969:91:22"},"nativeSrc":"4969:91:22","nodeType":"YulExpressionStatement","src":"4969:91:22"}]},"name":"abi_encode_tuple_t_contract$_CampusToken_$7066__to_t_address__fromStack_reversed","nativeSrc":"4805:262:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4895:9:22","nodeType":"YulTypedName","src":"4895:9:22","type":""},{"name":"value0","nativeSrc":"4907:6:22","nodeType":"YulTypedName","src":"4907:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4918:4:22","nodeType":"YulTypedName","src":"4918:4:22","type":""}],"src":"4805:262:22"},{"body":{"nativeSrc":"5171:124:22","nodeType":"YulBlock","src":"5171:124:22","statements":[{"nativeSrc":"5181:26:22","nodeType":"YulAssignment","src":"5181:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5193:9:22","nodeType":"YulIdentifier","src":"5193:9:22"},{"kind":"number","nativeSrc":"5204:2:22","nodeType":"YulLiteral","src":"5204:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5189:3:22","nodeType":"YulIdentifier","src":"5189:3:22"},"nativeSrc":"5189:18:22","nodeType":"YulFunctionCall","src":"5189:18:22"},"variableNames":[{"name":"tail","nativeSrc":"5181:4:22","nodeType":"YulIdentifier","src":"5181:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5261:6:22","nodeType":"YulIdentifier","src":"5261:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"5274:9:22","nodeType":"YulIdentifier","src":"5274:9:22"},{"kind":"number","nativeSrc":"5285:1:22","nodeType":"YulLiteral","src":"5285:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5270:3:22","nodeType":"YulIdentifier","src":"5270:3:22"},"nativeSrc":"5270:17:22","nodeType":"YulFunctionCall","src":"5270:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5217:43:22","nodeType":"YulIdentifier","src":"5217:43:22"},"nativeSrc":"5217:71:22","nodeType":"YulFunctionCall","src":"5217:71:22"},"nativeSrc":"5217:71:22","nodeType":"YulExpressionStatement","src":"5217:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5073:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5143:9:22","nodeType":"YulTypedName","src":"5143:9:22","type":""},{"name":"value0","nativeSrc":"5155:6:22","nodeType":"YulTypedName","src":"5155:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5166:4:22","nodeType":"YulTypedName","src":"5166:4:22","type":""}],"src":"5073:222:22"},{"body":{"nativeSrc":"5364:80:22","nodeType":"YulBlock","src":"5364:80:22","statements":[{"nativeSrc":"5374:22:22","nodeType":"YulAssignment","src":"5374:22:22","value":{"arguments":[{"name":"offset","nativeSrc":"5389:6:22","nodeType":"YulIdentifier","src":"5389:6:22"}],"functionName":{"name":"mload","nativeSrc":"5383:5:22","nodeType":"YulIdentifier","src":"5383:5:22"},"nativeSrc":"5383:13:22","nodeType":"YulFunctionCall","src":"5383:13:22"},"variableNames":[{"name":"value","nativeSrc":"5374:5:22","nodeType":"YulIdentifier","src":"5374:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5432:5:22","nodeType":"YulIdentifier","src":"5432:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"5405:26:22","nodeType":"YulIdentifier","src":"5405:26:22"},"nativeSrc":"5405:33:22","nodeType":"YulFunctionCall","src":"5405:33:22"},"nativeSrc":"5405:33:22","nodeType":"YulExpressionStatement","src":"5405:33:22"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"5301:143:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5342:6:22","nodeType":"YulTypedName","src":"5342:6:22","type":""},{"name":"end","nativeSrc":"5350:3:22","nodeType":"YulTypedName","src":"5350:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5358:5:22","nodeType":"YulTypedName","src":"5358:5:22","type":""}],"src":"5301:143:22"},{"body":{"nativeSrc":"5527:274:22","nodeType":"YulBlock","src":"5527:274:22","statements":[{"body":{"nativeSrc":"5573:83:22","nodeType":"YulBlock","src":"5573:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5575:77:22","nodeType":"YulIdentifier","src":"5575:77:22"},"nativeSrc":"5575:79:22","nodeType":"YulFunctionCall","src":"5575:79:22"},"nativeSrc":"5575:79:22","nodeType":"YulExpressionStatement","src":"5575:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5548:7:22","nodeType":"YulIdentifier","src":"5548:7:22"},{"name":"headStart","nativeSrc":"5557:9:22","nodeType":"YulIdentifier","src":"5557:9:22"}],"functionName":{"name":"sub","nativeSrc":"5544:3:22","nodeType":"YulIdentifier","src":"5544:3:22"},"nativeSrc":"5544:23:22","nodeType":"YulFunctionCall","src":"5544:23:22"},{"kind":"number","nativeSrc":"5569:2:22","nodeType":"YulLiteral","src":"5569:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5540:3:22","nodeType":"YulIdentifier","src":"5540:3:22"},"nativeSrc":"5540:32:22","nodeType":"YulFunctionCall","src":"5540:32:22"},"nativeSrc":"5537:119:22","nodeType":"YulIf","src":"5537:119:22"},{"nativeSrc":"5666:128:22","nodeType":"YulBlock","src":"5666:128:22","statements":[{"nativeSrc":"5681:15:22","nodeType":"YulVariableDeclaration","src":"5681:15:22","value":{"kind":"number","nativeSrc":"5695:1:22","nodeType":"YulLiteral","src":"5695:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5685:6:22","nodeType":"YulTypedName","src":"5685:6:22","type":""}]},{"nativeSrc":"5710:74:22","nodeType":"YulAssignment","src":"5710:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5756:9:22","nodeType":"YulIdentifier","src":"5756:9:22"},{"name":"offset","nativeSrc":"5767:6:22","nodeType":"YulIdentifier","src":"5767:6:22"}],"functionName":{"name":"add","nativeSrc":"5752:3:22","nodeType":"YulIdentifier","src":"5752:3:22"},"nativeSrc":"5752:22:22","nodeType":"YulFunctionCall","src":"5752:22:22"},{"name":"dataEnd","nativeSrc":"5776:7:22","nodeType":"YulIdentifier","src":"5776:7:22"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"5720:31:22","nodeType":"YulIdentifier","src":"5720:31:22"},"nativeSrc":"5720:64:22","nodeType":"YulFunctionCall","src":"5720:64:22"},"variableNames":[{"name":"value0","nativeSrc":"5710:6:22","nodeType":"YulIdentifier","src":"5710:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"5450:351:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5497:9:22","nodeType":"YulTypedName","src":"5497:9:22","type":""},{"name":"dataEnd","nativeSrc":"5508:7:22","nodeType":"YulTypedName","src":"5508:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5520:6:22","nodeType":"YulTypedName","src":"5520:6:22","type":""}],"src":"5450:351:22"},{"body":{"nativeSrc":"5903:73:22","nodeType":"YulBlock","src":"5903:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5920:3:22","nodeType":"YulIdentifier","src":"5920:3:22"},{"name":"length","nativeSrc":"5925:6:22","nodeType":"YulIdentifier","src":"5925:6:22"}],"functionName":{"name":"mstore","nativeSrc":"5913:6:22","nodeType":"YulIdentifier","src":"5913:6:22"},"nativeSrc":"5913:19:22","nodeType":"YulFunctionCall","src":"5913:19:22"},"nativeSrc":"5913:19:22","nodeType":"YulExpressionStatement","src":"5913:19:22"},{"nativeSrc":"5941:29:22","nodeType":"YulAssignment","src":"5941:29:22","value":{"arguments":[{"name":"pos","nativeSrc":"5960:3:22","nodeType":"YulIdentifier","src":"5960:3:22"},{"kind":"number","nativeSrc":"5965:4:22","nodeType":"YulLiteral","src":"5965:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5956:3:22","nodeType":"YulIdentifier","src":"5956:3:22"},"nativeSrc":"5956:14:22","nodeType":"YulFunctionCall","src":"5956:14:22"},"variableNames":[{"name":"updated_pos","nativeSrc":"5941:11:22","nodeType":"YulIdentifier","src":"5941:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"5807:169:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5875:3:22","nodeType":"YulTypedName","src":"5875:3:22","type":""},{"name":"length","nativeSrc":"5880:6:22","nodeType":"YulTypedName","src":"5880:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"5891:11:22","nodeType":"YulTypedName","src":"5891:11:22","type":""}],"src":"5807:169:22"},{"body":{"nativeSrc":"6088:62:22","nodeType":"YulBlock","src":"6088:62:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6110:6:22","nodeType":"YulIdentifier","src":"6110:6:22"},{"kind":"number","nativeSrc":"6118:1:22","nodeType":"YulLiteral","src":"6118:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6106:3:22","nodeType":"YulIdentifier","src":"6106:3:22"},"nativeSrc":"6106:14:22","nodeType":"YulFunctionCall","src":"6106:14:22"},{"hexValue":"496e73756666696369656e74207374616b65","kind":"string","nativeSrc":"6122:20:22","nodeType":"YulLiteral","src":"6122:20:22","type":"","value":"Insufficient stake"}],"functionName":{"name":"mstore","nativeSrc":"6099:6:22","nodeType":"YulIdentifier","src":"6099:6:22"},"nativeSrc":"6099:44:22","nodeType":"YulFunctionCall","src":"6099:44:22"},"nativeSrc":"6099:44:22","nodeType":"YulExpressionStatement","src":"6099:44:22"}]},"name":"store_literal_in_memory_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b","nativeSrc":"5982:168:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6080:6:22","nodeType":"YulTypedName","src":"6080:6:22","type":""}],"src":"5982:168:22"},{"body":{"nativeSrc":"6302:220:22","nodeType":"YulBlock","src":"6302:220:22","statements":[{"nativeSrc":"6312:74:22","nodeType":"YulAssignment","src":"6312:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"6378:3:22","nodeType":"YulIdentifier","src":"6378:3:22"},{"kind":"number","nativeSrc":"6383:2:22","nodeType":"YulLiteral","src":"6383:2:22","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6319:58:22","nodeType":"YulIdentifier","src":"6319:58:22"},"nativeSrc":"6319:67:22","nodeType":"YulFunctionCall","src":"6319:67:22"},"variableNames":[{"name":"pos","nativeSrc":"6312:3:22","nodeType":"YulIdentifier","src":"6312:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"6484:3:22","nodeType":"YulIdentifier","src":"6484:3:22"}],"functionName":{"name":"store_literal_in_memory_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b","nativeSrc":"6395:88:22","nodeType":"YulIdentifier","src":"6395:88:22"},"nativeSrc":"6395:93:22","nodeType":"YulFunctionCall","src":"6395:93:22"},"nativeSrc":"6395:93:22","nodeType":"YulExpressionStatement","src":"6395:93:22"},{"nativeSrc":"6497:19:22","nodeType":"YulAssignment","src":"6497:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"6508:3:22","nodeType":"YulIdentifier","src":"6508:3:22"},{"kind":"number","nativeSrc":"6513:2:22","nodeType":"YulLiteral","src":"6513:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6504:3:22","nodeType":"YulIdentifier","src":"6504:3:22"},"nativeSrc":"6504:12:22","nodeType":"YulFunctionCall","src":"6504:12:22"},"variableNames":[{"name":"end","nativeSrc":"6497:3:22","nodeType":"YulIdentifier","src":"6497:3:22"}]}]},"name":"abi_encode_t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b_to_t_string_memory_ptr_fromStack","nativeSrc":"6156:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6290:3:22","nodeType":"YulTypedName","src":"6290:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6298:3:22","nodeType":"YulTypedName","src":"6298:3:22","type":""}],"src":"6156:366:22"},{"body":{"nativeSrc":"6699:248:22","nodeType":"YulBlock","src":"6699:248:22","statements":[{"nativeSrc":"6709:26:22","nodeType":"YulAssignment","src":"6709:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6721:9:22","nodeType":"YulIdentifier","src":"6721:9:22"},{"kind":"number","nativeSrc":"6732:2:22","nodeType":"YulLiteral","src":"6732:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6717:3:22","nodeType":"YulIdentifier","src":"6717:3:22"},"nativeSrc":"6717:18:22","nodeType":"YulFunctionCall","src":"6717:18:22"},"variableNames":[{"name":"tail","nativeSrc":"6709:4:22","nodeType":"YulIdentifier","src":"6709:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6756:9:22","nodeType":"YulIdentifier","src":"6756:9:22"},{"kind":"number","nativeSrc":"6767:1:22","nodeType":"YulLiteral","src":"6767:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6752:3:22","nodeType":"YulIdentifier","src":"6752:3:22"},"nativeSrc":"6752:17:22","nodeType":"YulFunctionCall","src":"6752:17:22"},{"arguments":[{"name":"tail","nativeSrc":"6775:4:22","nodeType":"YulIdentifier","src":"6775:4:22"},{"name":"headStart","nativeSrc":"6781:9:22","nodeType":"YulIdentifier","src":"6781:9:22"}],"functionName":{"name":"sub","nativeSrc":"6771:3:22","nodeType":"YulIdentifier","src":"6771:3:22"},"nativeSrc":"6771:20:22","nodeType":"YulFunctionCall","src":"6771:20:22"}],"functionName":{"name":"mstore","nativeSrc":"6745:6:22","nodeType":"YulIdentifier","src":"6745:6:22"},"nativeSrc":"6745:47:22","nodeType":"YulFunctionCall","src":"6745:47:22"},"nativeSrc":"6745:47:22","nodeType":"YulExpressionStatement","src":"6745:47:22"},{"nativeSrc":"6801:139:22","nodeType":"YulAssignment","src":"6801:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"6935:4:22","nodeType":"YulIdentifier","src":"6935:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b_to_t_string_memory_ptr_fromStack","nativeSrc":"6809:124:22","nodeType":"YulIdentifier","src":"6809:124:22"},"nativeSrc":"6809:131:22","nodeType":"YulFunctionCall","src":"6809:131:22"},"variableNames":[{"name":"tail","nativeSrc":"6801:4:22","nodeType":"YulIdentifier","src":"6801:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6528:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6679:9:22","nodeType":"YulTypedName","src":"6679:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6694:4:22","nodeType":"YulTypedName","src":"6694:4:22","type":""}],"src":"6528:419:22"},{"body":{"nativeSrc":"7059:56:22","nodeType":"YulBlock","src":"7059:56:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7081:6:22","nodeType":"YulIdentifier","src":"7081:6:22"},{"kind":"number","nativeSrc":"7089:1:22","nodeType":"YulLiteral","src":"7089:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7077:3:22","nodeType":"YulIdentifier","src":"7077:3:22"},"nativeSrc":"7077:14:22","nodeType":"YulFunctionCall","src":"7077:14:22"},{"hexValue":"496e76616c696420766f7465","kind":"string","nativeSrc":"7093:14:22","nodeType":"YulLiteral","src":"7093:14:22","type":"","value":"Invalid vote"}],"functionName":{"name":"mstore","nativeSrc":"7070:6:22","nodeType":"YulIdentifier","src":"7070:6:22"},"nativeSrc":"7070:38:22","nodeType":"YulFunctionCall","src":"7070:38:22"},"nativeSrc":"7070:38:22","nodeType":"YulExpressionStatement","src":"7070:38:22"}]},"name":"store_literal_in_memory_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8","nativeSrc":"6953:162:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7051:6:22","nodeType":"YulTypedName","src":"7051:6:22","type":""}],"src":"6953:162:22"},{"body":{"nativeSrc":"7267:220:22","nodeType":"YulBlock","src":"7267:220:22","statements":[{"nativeSrc":"7277:74:22","nodeType":"YulAssignment","src":"7277:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"7343:3:22","nodeType":"YulIdentifier","src":"7343:3:22"},{"kind":"number","nativeSrc":"7348:2:22","nodeType":"YulLiteral","src":"7348:2:22","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7284:58:22","nodeType":"YulIdentifier","src":"7284:58:22"},"nativeSrc":"7284:67:22","nodeType":"YulFunctionCall","src":"7284:67:22"},"variableNames":[{"name":"pos","nativeSrc":"7277:3:22","nodeType":"YulIdentifier","src":"7277:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7449:3:22","nodeType":"YulIdentifier","src":"7449:3:22"}],"functionName":{"name":"store_literal_in_memory_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8","nativeSrc":"7360:88:22","nodeType":"YulIdentifier","src":"7360:88:22"},"nativeSrc":"7360:93:22","nodeType":"YulFunctionCall","src":"7360:93:22"},"nativeSrc":"7360:93:22","nodeType":"YulExpressionStatement","src":"7360:93:22"},{"nativeSrc":"7462:19:22","nodeType":"YulAssignment","src":"7462:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"7473:3:22","nodeType":"YulIdentifier","src":"7473:3:22"},{"kind":"number","nativeSrc":"7478:2:22","nodeType":"YulLiteral","src":"7478:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7469:3:22","nodeType":"YulIdentifier","src":"7469:3:22"},"nativeSrc":"7469:12:22","nodeType":"YulFunctionCall","src":"7469:12:22"},"variableNames":[{"name":"end","nativeSrc":"7462:3:22","nodeType":"YulIdentifier","src":"7462:3:22"}]}]},"name":"abi_encode_t_stringliteral_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8_to_t_string_memory_ptr_fromStack","nativeSrc":"7121:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7255:3:22","nodeType":"YulTypedName","src":"7255:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7263:3:22","nodeType":"YulTypedName","src":"7263:3:22","type":""}],"src":"7121:366:22"},{"body":{"nativeSrc":"7664:248:22","nodeType":"YulBlock","src":"7664:248:22","statements":[{"nativeSrc":"7674:26:22","nodeType":"YulAssignment","src":"7674:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7686:9:22","nodeType":"YulIdentifier","src":"7686:9:22"},{"kind":"number","nativeSrc":"7697:2:22","nodeType":"YulLiteral","src":"7697:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7682:3:22","nodeType":"YulIdentifier","src":"7682:3:22"},"nativeSrc":"7682:18:22","nodeType":"YulFunctionCall","src":"7682:18:22"},"variableNames":[{"name":"tail","nativeSrc":"7674:4:22","nodeType":"YulIdentifier","src":"7674:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7721:9:22","nodeType":"YulIdentifier","src":"7721:9:22"},{"kind":"number","nativeSrc":"7732:1:22","nodeType":"YulLiteral","src":"7732:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7717:3:22","nodeType":"YulIdentifier","src":"7717:3:22"},"nativeSrc":"7717:17:22","nodeType":"YulFunctionCall","src":"7717:17:22"},{"arguments":[{"name":"tail","nativeSrc":"7740:4:22","nodeType":"YulIdentifier","src":"7740:4:22"},{"name":"headStart","nativeSrc":"7746:9:22","nodeType":"YulIdentifier","src":"7746:9:22"}],"functionName":{"name":"sub","nativeSrc":"7736:3:22","nodeType":"YulIdentifier","src":"7736:3:22"},"nativeSrc":"7736:20:22","nodeType":"YulFunctionCall","src":"7736:20:22"}],"functionName":{"name":"mstore","nativeSrc":"7710:6:22","nodeType":"YulIdentifier","src":"7710:6:22"},"nativeSrc":"7710:47:22","nodeType":"YulFunctionCall","src":"7710:47:22"},"nativeSrc":"7710:47:22","nodeType":"YulExpressionStatement","src":"7710:47:22"},{"nativeSrc":"7766:139:22","nodeType":"YulAssignment","src":"7766:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"7900:4:22","nodeType":"YulIdentifier","src":"7900:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8_to_t_string_memory_ptr_fromStack","nativeSrc":"7774:124:22","nodeType":"YulIdentifier","src":"7774:124:22"},"nativeSrc":"7774:131:22","nodeType":"YulFunctionCall","src":"7774:131:22"},"variableNames":[{"name":"tail","nativeSrc":"7766:4:22","nodeType":"YulIdentifier","src":"7766:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7493:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7644:9:22","nodeType":"YulTypedName","src":"7644:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7659:4:22","nodeType":"YulTypedName","src":"7659:4:22","type":""}],"src":"7493:419:22"},{"body":{"nativeSrc":"8024:57:22","nodeType":"YulBlock","src":"8024:57:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"8046:6:22","nodeType":"YulIdentifier","src":"8046:6:22"},{"kind":"number","nativeSrc":"8054:1:22","nodeType":"YulLiteral","src":"8054:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8042:3:22","nodeType":"YulIdentifier","src":"8042:3:22"},"nativeSrc":"8042:14:22","nodeType":"YulFunctionCall","src":"8042:14:22"},{"hexValue":"416c726561647920766f746564","kind":"string","nativeSrc":"8058:15:22","nodeType":"YulLiteral","src":"8058:15:22","type":"","value":"Already voted"}],"functionName":{"name":"mstore","nativeSrc":"8035:6:22","nodeType":"YulIdentifier","src":"8035:6:22"},"nativeSrc":"8035:39:22","nodeType":"YulFunctionCall","src":"8035:39:22"},"nativeSrc":"8035:39:22","nodeType":"YulExpressionStatement","src":"8035:39:22"}]},"name":"store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6","nativeSrc":"7918:163:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"8016:6:22","nodeType":"YulTypedName","src":"8016:6:22","type":""}],"src":"7918:163:22"},{"body":{"nativeSrc":"8233:220:22","nodeType":"YulBlock","src":"8233:220:22","statements":[{"nativeSrc":"8243:74:22","nodeType":"YulAssignment","src":"8243:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"8309:3:22","nodeType":"YulIdentifier","src":"8309:3:22"},{"kind":"number","nativeSrc":"8314:2:22","nodeType":"YulLiteral","src":"8314:2:22","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8250:58:22","nodeType":"YulIdentifier","src":"8250:58:22"},"nativeSrc":"8250:67:22","nodeType":"YulFunctionCall","src":"8250:67:22"},"variableNames":[{"name":"pos","nativeSrc":"8243:3:22","nodeType":"YulIdentifier","src":"8243:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"8415:3:22","nodeType":"YulIdentifier","src":"8415:3:22"}],"functionName":{"name":"store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6","nativeSrc":"8326:88:22","nodeType":"YulIdentifier","src":"8326:88:22"},"nativeSrc":"8326:93:22","nodeType":"YulFunctionCall","src":"8326:93:22"},"nativeSrc":"8326:93:22","nodeType":"YulExpressionStatement","src":"8326:93:22"},{"nativeSrc":"8428:19:22","nodeType":"YulAssignment","src":"8428:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"8439:3:22","nodeType":"YulIdentifier","src":"8439:3:22"},{"kind":"number","nativeSrc":"8444:2:22","nodeType":"YulLiteral","src":"8444:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8435:3:22","nodeType":"YulIdentifier","src":"8435:3:22"},"nativeSrc":"8435:12:22","nodeType":"YulFunctionCall","src":"8435:12:22"},"variableNames":[{"name":"end","nativeSrc":"8428:3:22","nodeType":"YulIdentifier","src":"8428:3:22"}]}]},"name":"abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack","nativeSrc":"8087:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8221:3:22","nodeType":"YulTypedName","src":"8221:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8229:3:22","nodeType":"YulTypedName","src":"8229:3:22","type":""}],"src":"8087:366:22"},{"body":{"nativeSrc":"8630:248:22","nodeType":"YulBlock","src":"8630:248:22","statements":[{"nativeSrc":"8640:26:22","nodeType":"YulAssignment","src":"8640:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8652:9:22","nodeType":"YulIdentifier","src":"8652:9:22"},{"kind":"number","nativeSrc":"8663:2:22","nodeType":"YulLiteral","src":"8663:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8648:3:22","nodeType":"YulIdentifier","src":"8648:3:22"},"nativeSrc":"8648:18:22","nodeType":"YulFunctionCall","src":"8648:18:22"},"variableNames":[{"name":"tail","nativeSrc":"8640:4:22","nodeType":"YulIdentifier","src":"8640:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8687:9:22","nodeType":"YulIdentifier","src":"8687:9:22"},{"kind":"number","nativeSrc":"8698:1:22","nodeType":"YulLiteral","src":"8698:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8683:3:22","nodeType":"YulIdentifier","src":"8683:3:22"},"nativeSrc":"8683:17:22","nodeType":"YulFunctionCall","src":"8683:17:22"},{"arguments":[{"name":"tail","nativeSrc":"8706:4:22","nodeType":"YulIdentifier","src":"8706:4:22"},{"name":"headStart","nativeSrc":"8712:9:22","nodeType":"YulIdentifier","src":"8712:9:22"}],"functionName":{"name":"sub","nativeSrc":"8702:3:22","nodeType":"YulIdentifier","src":"8702:3:22"},"nativeSrc":"8702:20:22","nodeType":"YulFunctionCall","src":"8702:20:22"}],"functionName":{"name":"mstore","nativeSrc":"8676:6:22","nodeType":"YulIdentifier","src":"8676:6:22"},"nativeSrc":"8676:47:22","nodeType":"YulFunctionCall","src":"8676:47:22"},"nativeSrc":"8676:47:22","nodeType":"YulExpressionStatement","src":"8676:47:22"},{"nativeSrc":"8732:139:22","nodeType":"YulAssignment","src":"8732:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"8866:4:22","nodeType":"YulIdentifier","src":"8866:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack","nativeSrc":"8740:124:22","nodeType":"YulIdentifier","src":"8740:124:22"},"nativeSrc":"8740:131:22","nodeType":"YulFunctionCall","src":"8740:131:22"},"variableNames":[{"name":"tail","nativeSrc":"8732:4:22","nodeType":"YulIdentifier","src":"8732:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8459:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8610:9:22","nodeType":"YulTypedName","src":"8610:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8625:4:22","nodeType":"YulTypedName","src":"8625:4:22","type":""}],"src":"8459:419:22"},{"body":{"nativeSrc":"8912:152:22","nodeType":"YulBlock","src":"8912:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8929:1:22","nodeType":"YulLiteral","src":"8929:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"8932:77:22","nodeType":"YulLiteral","src":"8932:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8922:6:22","nodeType":"YulIdentifier","src":"8922:6:22"},"nativeSrc":"8922:88:22","nodeType":"YulFunctionCall","src":"8922:88:22"},"nativeSrc":"8922:88:22","nodeType":"YulExpressionStatement","src":"8922:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9026:1:22","nodeType":"YulLiteral","src":"9026:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"9029:4:22","nodeType":"YulLiteral","src":"9029:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9019:6:22","nodeType":"YulIdentifier","src":"9019:6:22"},"nativeSrc":"9019:15:22","nodeType":"YulFunctionCall","src":"9019:15:22"},"nativeSrc":"9019:15:22","nodeType":"YulExpressionStatement","src":"9019:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9050:1:22","nodeType":"YulLiteral","src":"9050:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9053:4:22","nodeType":"YulLiteral","src":"9053:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9043:6:22","nodeType":"YulIdentifier","src":"9043:6:22"},"nativeSrc":"9043:15:22","nodeType":"YulFunctionCall","src":"9043:15:22"},"nativeSrc":"9043:15:22","nodeType":"YulExpressionStatement","src":"9043:15:22"}]},"name":"panic_error_0x11","nativeSrc":"8884:180:22","nodeType":"YulFunctionDefinition","src":"8884:180:22"},{"body":{"nativeSrc":"9114:147:22","nodeType":"YulBlock","src":"9114:147:22","statements":[{"nativeSrc":"9124:25:22","nodeType":"YulAssignment","src":"9124:25:22","value":{"arguments":[{"name":"x","nativeSrc":"9147:1:22","nodeType":"YulIdentifier","src":"9147:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9129:17:22","nodeType":"YulIdentifier","src":"9129:17:22"},"nativeSrc":"9129:20:22","nodeType":"YulFunctionCall","src":"9129:20:22"},"variableNames":[{"name":"x","nativeSrc":"9124:1:22","nodeType":"YulIdentifier","src":"9124:1:22"}]},{"nativeSrc":"9158:25:22","nodeType":"YulAssignment","src":"9158:25:22","value":{"arguments":[{"name":"y","nativeSrc":"9181:1:22","nodeType":"YulIdentifier","src":"9181:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9163:17:22","nodeType":"YulIdentifier","src":"9163:17:22"},"nativeSrc":"9163:20:22","nodeType":"YulFunctionCall","src":"9163:20:22"},"variableNames":[{"name":"y","nativeSrc":"9158:1:22","nodeType":"YulIdentifier","src":"9158:1:22"}]},{"nativeSrc":"9192:16:22","nodeType":"YulAssignment","src":"9192:16:22","value":{"arguments":[{"name":"x","nativeSrc":"9203:1:22","nodeType":"YulIdentifier","src":"9203:1:22"},{"name":"y","nativeSrc":"9206:1:22","nodeType":"YulIdentifier","src":"9206:1:22"}],"functionName":{"name":"add","nativeSrc":"9199:3:22","nodeType":"YulIdentifier","src":"9199:3:22"},"nativeSrc":"9199:9:22","nodeType":"YulFunctionCall","src":"9199:9:22"},"variableNames":[{"name":"sum","nativeSrc":"9192:3:22","nodeType":"YulIdentifier","src":"9192:3:22"}]},{"body":{"nativeSrc":"9232:22:22","nodeType":"YulBlock","src":"9232:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9234:16:22","nodeType":"YulIdentifier","src":"9234:16:22"},"nativeSrc":"9234:18:22","nodeType":"YulFunctionCall","src":"9234:18:22"},"nativeSrc":"9234:18:22","nodeType":"YulExpressionStatement","src":"9234:18:22"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"9224:1:22","nodeType":"YulIdentifier","src":"9224:1:22"},{"name":"sum","nativeSrc":"9227:3:22","nodeType":"YulIdentifier","src":"9227:3:22"}],"functionName":{"name":"gt","nativeSrc":"9221:2:22","nodeType":"YulIdentifier","src":"9221:2:22"},"nativeSrc":"9221:10:22","nodeType":"YulFunctionCall","src":"9221:10:22"},"nativeSrc":"9218:36:22","nodeType":"YulIf","src":"9218:36:22"}]},"name":"checked_add_t_uint256","nativeSrc":"9070:191:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9101:1:22","nodeType":"YulTypedName","src":"9101:1:22","type":""},{"name":"y","nativeSrc":"9104:1:22","nodeType":"YulTypedName","src":"9104:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9110:3:22","nodeType":"YulTypedName","src":"9110:3:22","type":""}],"src":"9070:191:22"},{"body":{"nativeSrc":"9393:206:22","nodeType":"YulBlock","src":"9393:206:22","statements":[{"nativeSrc":"9403:26:22","nodeType":"YulAssignment","src":"9403:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9415:9:22","nodeType":"YulIdentifier","src":"9415:9:22"},{"kind":"number","nativeSrc":"9426:2:22","nodeType":"YulLiteral","src":"9426:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9411:3:22","nodeType":"YulIdentifier","src":"9411:3:22"},"nativeSrc":"9411:18:22","nodeType":"YulFunctionCall","src":"9411:18:22"},"variableNames":[{"name":"tail","nativeSrc":"9403:4:22","nodeType":"YulIdentifier","src":"9403:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9483:6:22","nodeType":"YulIdentifier","src":"9483:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"9496:9:22","nodeType":"YulIdentifier","src":"9496:9:22"},{"kind":"number","nativeSrc":"9507:1:22","nodeType":"YulLiteral","src":"9507:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9492:3:22","nodeType":"YulIdentifier","src":"9492:3:22"},"nativeSrc":"9492:17:22","nodeType":"YulFunctionCall","src":"9492:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9439:43:22","nodeType":"YulIdentifier","src":"9439:43:22"},"nativeSrc":"9439:71:22","nodeType":"YulFunctionCall","src":"9439:71:22"},"nativeSrc":"9439:71:22","nodeType":"YulExpressionStatement","src":"9439:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9564:6:22","nodeType":"YulIdentifier","src":"9564:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"9577:9:22","nodeType":"YulIdentifier","src":"9577:9:22"},{"kind":"number","nativeSrc":"9588:2:22","nodeType":"YulLiteral","src":"9588:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9573:3:22","nodeType":"YulIdentifier","src":"9573:3:22"},"nativeSrc":"9573:18:22","nodeType":"YulFunctionCall","src":"9573:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9520:43:22","nodeType":"YulIdentifier","src":"9520:43:22"},"nativeSrc":"9520:72:22","nodeType":"YulFunctionCall","src":"9520:72:22"},"nativeSrc":"9520:72:22","nodeType":"YulExpressionStatement","src":"9520:72:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"9267:332:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9357:9:22","nodeType":"YulTypedName","src":"9357:9:22","type":""},{"name":"value1","nativeSrc":"9369:6:22","nodeType":"YulTypedName","src":"9369:6:22","type":""},{"name":"value0","nativeSrc":"9377:6:22","nodeType":"YulTypedName","src":"9377:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9388:4:22","nodeType":"YulTypedName","src":"9388:4:22","type":""}],"src":"9267:332:22"},{"body":{"nativeSrc":"9652:509:22","nodeType":"YulBlock","src":"9652:509:22","statements":[{"nativeSrc":"9662:24:22","nodeType":"YulAssignment","src":"9662:24:22","value":{"arguments":[{"name":"x","nativeSrc":"9684:1:22","nodeType":"YulIdentifier","src":"9684:1:22"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"9667:16:22","nodeType":"YulIdentifier","src":"9667:16:22"},"nativeSrc":"9667:19:22","nodeType":"YulFunctionCall","src":"9667:19:22"},"variableNames":[{"name":"x","nativeSrc":"9662:1:22","nodeType":"YulIdentifier","src":"9662:1:22"}]},{"nativeSrc":"9695:24:22","nodeType":"YulAssignment","src":"9695:24:22","value":{"arguments":[{"name":"y","nativeSrc":"9717:1:22","nodeType":"YulIdentifier","src":"9717:1:22"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"9700:16:22","nodeType":"YulIdentifier","src":"9700:16:22"},"nativeSrc":"9700:19:22","nodeType":"YulFunctionCall","src":"9700:19:22"},"variableNames":[{"name":"y","nativeSrc":"9695:1:22","nodeType":"YulIdentifier","src":"9695:1:22"}]},{"nativeSrc":"9728:28:22","nodeType":"YulVariableDeclaration","src":"9728:28:22","value":{"arguments":[{"name":"x","nativeSrc":"9751:1:22","nodeType":"YulIdentifier","src":"9751:1:22"},{"name":"y","nativeSrc":"9754:1:22","nodeType":"YulIdentifier","src":"9754:1:22"}],"functionName":{"name":"mul","nativeSrc":"9747:3:22","nodeType":"YulIdentifier","src":"9747:3:22"},"nativeSrc":"9747:9:22","nodeType":"YulFunctionCall","src":"9747:9:22"},"variables":[{"name":"product_raw","nativeSrc":"9732:11:22","nodeType":"YulTypedName","src":"9732:11:22","type":""}]},{"nativeSrc":"9765:40:22","nodeType":"YulAssignment","src":"9765:40:22","value":{"arguments":[{"name":"product_raw","nativeSrc":"9793:11:22","nodeType":"YulIdentifier","src":"9793:11:22"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"9776:16:22","nodeType":"YulIdentifier","src":"9776:16:22"},"nativeSrc":"9776:29:22","nodeType":"YulFunctionCall","src":"9776:29:22"},"variableNames":[{"name":"product","nativeSrc":"9765:7:22","nodeType":"YulIdentifier","src":"9765:7:22"}]},{"body":{"nativeSrc":"9932:22:22","nodeType":"YulBlock","src":"9932:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9934:16:22","nodeType":"YulIdentifier","src":"9934:16:22"},"nativeSrc":"9934:18:22","nodeType":"YulFunctionCall","src":"9934:18:22"},"nativeSrc":"9934:18:22","nodeType":"YulExpressionStatement","src":"9934:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"x","nativeSrc":"9850:1:22","nodeType":"YulIdentifier","src":"9850:1:22"},{"kind":"number","nativeSrc":"9853:1:22","nodeType":"YulLiteral","src":"9853:1:22","type":"","value":"0"}],"functionName":{"name":"slt","nativeSrc":"9846:3:22","nodeType":"YulIdentifier","src":"9846:3:22"},"nativeSrc":"9846:9:22","nodeType":"YulFunctionCall","src":"9846:9:22"},{"arguments":[{"name":"y","nativeSrc":"9860:1:22","nodeType":"YulIdentifier","src":"9860:1:22"},{"kind":"number","nativeSrc":"9863:66:22","nodeType":"YulLiteral","src":"9863:66:22","type":"","value":"0x8000000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"eq","nativeSrc":"9857:2:22","nodeType":"YulIdentifier","src":"9857:2:22"},"nativeSrc":"9857:73:22","nodeType":"YulFunctionCall","src":"9857:73:22"}],"functionName":{"name":"and","nativeSrc":"9842:3:22","nodeType":"YulIdentifier","src":"9842:3:22"},"nativeSrc":"9842:89:22","nodeType":"YulFunctionCall","src":"9842:89:22"},"nativeSrc":"9839:115:22","nodeType":"YulIf","src":"9839:115:22"},{"body":{"nativeSrc":"10132:22:22","nodeType":"YulBlock","src":"10132:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10134:16:22","nodeType":"YulIdentifier","src":"10134:16:22"},"nativeSrc":"10134:18:22","nodeType":"YulFunctionCall","src":"10134:18:22"},"nativeSrc":"10134:18:22","nodeType":"YulExpressionStatement","src":"10134:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"10064:1:22","nodeType":"YulIdentifier","src":"10064:1:22"}],"functionName":{"name":"iszero","nativeSrc":"10057:6:22","nodeType":"YulIdentifier","src":"10057:6:22"},"nativeSrc":"10057:9:22","nodeType":"YulFunctionCall","src":"10057:9:22"},{"arguments":[{"name":"y","nativeSrc":"10087:1:22","nodeType":"YulIdentifier","src":"10087:1:22"},{"arguments":[{"name":"product","nativeSrc":"10095:7:22","nodeType":"YulIdentifier","src":"10095:7:22"},{"name":"x","nativeSrc":"10104:1:22","nodeType":"YulIdentifier","src":"10104:1:22"}],"functionName":{"name":"sdiv","nativeSrc":"10090:4:22","nodeType":"YulIdentifier","src":"10090:4:22"},"nativeSrc":"10090:16:22","nodeType":"YulFunctionCall","src":"10090:16:22"}],"functionName":{"name":"eq","nativeSrc":"10084:2:22","nodeType":"YulIdentifier","src":"10084:2:22"},"nativeSrc":"10084:23:22","nodeType":"YulFunctionCall","src":"10084:23:22"}],"functionName":{"name":"or","nativeSrc":"10037:2:22","nodeType":"YulIdentifier","src":"10037:2:22"},"nativeSrc":"10037:84:22","nodeType":"YulFunctionCall","src":"10037:84:22"}],"functionName":{"name":"iszero","nativeSrc":"10017:6:22","nodeType":"YulIdentifier","src":"10017:6:22"},"nativeSrc":"10017:114:22","nodeType":"YulFunctionCall","src":"10017:114:22"},"nativeSrc":"10014:140:22","nodeType":"YulIf","src":"10014:140:22"}]},"name":"checked_mul_t_int256","nativeSrc":"9605:556:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9635:1:22","nodeType":"YulTypedName","src":"9635:1:22","type":""},{"name":"y","nativeSrc":"9638:1:22","nodeType":"YulTypedName","src":"9638:1:22","type":""}],"returnVariables":[{"name":"product","nativeSrc":"9644:7:22","nodeType":"YulTypedName","src":"9644:7:22","type":""}],"src":"9605:556:22"},{"body":{"nativeSrc":"10210:332:22","nodeType":"YulBlock","src":"10210:332:22","statements":[{"nativeSrc":"10220:24:22","nodeType":"YulAssignment","src":"10220:24:22","value":{"arguments":[{"name":"x","nativeSrc":"10242:1:22","nodeType":"YulIdentifier","src":"10242:1:22"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"10225:16:22","nodeType":"YulIdentifier","src":"10225:16:22"},"nativeSrc":"10225:19:22","nodeType":"YulFunctionCall","src":"10225:19:22"},"variableNames":[{"name":"x","nativeSrc":"10220:1:22","nodeType":"YulIdentifier","src":"10220:1:22"}]},{"nativeSrc":"10253:24:22","nodeType":"YulAssignment","src":"10253:24:22","value":{"arguments":[{"name":"y","nativeSrc":"10275:1:22","nodeType":"YulIdentifier","src":"10275:1:22"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"10258:16:22","nodeType":"YulIdentifier","src":"10258:16:22"},"nativeSrc":"10258:19:22","nodeType":"YulFunctionCall","src":"10258:19:22"},"variableNames":[{"name":"y","nativeSrc":"10253:1:22","nodeType":"YulIdentifier","src":"10253:1:22"}]},{"nativeSrc":"10286:16:22","nodeType":"YulAssignment","src":"10286:16:22","value":{"arguments":[{"name":"x","nativeSrc":"10297:1:22","nodeType":"YulIdentifier","src":"10297:1:22"},{"name":"y","nativeSrc":"10300:1:22","nodeType":"YulIdentifier","src":"10300:1:22"}],"functionName":{"name":"add","nativeSrc":"10293:3:22","nodeType":"YulIdentifier","src":"10293:3:22"},"nativeSrc":"10293:9:22","nodeType":"YulFunctionCall","src":"10293:9:22"},"variableNames":[{"name":"sum","nativeSrc":"10286:3:22","nodeType":"YulIdentifier","src":"10286:3:22"}]},{"body":{"nativeSrc":"10513:22:22","nodeType":"YulBlock","src":"10513:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10515:16:22","nodeType":"YulIdentifier","src":"10515:16:22"},"nativeSrc":"10515:18:22","nodeType":"YulFunctionCall","src":"10515:18:22"},"nativeSrc":"10515:18:22","nodeType":"YulExpressionStatement","src":"10515:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"10433:1:22","nodeType":"YulIdentifier","src":"10433:1:22"},{"kind":"number","nativeSrc":"10436:1:22","nodeType":"YulLiteral","src":"10436:1:22","type":"","value":"0"}],"functionName":{"name":"slt","nativeSrc":"10429:3:22","nodeType":"YulIdentifier","src":"10429:3:22"},"nativeSrc":"10429:9:22","nodeType":"YulFunctionCall","src":"10429:9:22"}],"functionName":{"name":"iszero","nativeSrc":"10422:6:22","nodeType":"YulIdentifier","src":"10422:6:22"},"nativeSrc":"10422:17:22","nodeType":"YulFunctionCall","src":"10422:17:22"},{"arguments":[{"name":"sum","nativeSrc":"10445:3:22","nodeType":"YulIdentifier","src":"10445:3:22"},{"name":"y","nativeSrc":"10450:1:22","nodeType":"YulIdentifier","src":"10450:1:22"}],"functionName":{"name":"slt","nativeSrc":"10441:3:22","nodeType":"YulIdentifier","src":"10441:3:22"},"nativeSrc":"10441:11:22","nodeType":"YulFunctionCall","src":"10441:11:22"}],"functionName":{"name":"and","nativeSrc":"10418:3:22","nodeType":"YulIdentifier","src":"10418:3:22"},"nativeSrc":"10418:35:22","nodeType":"YulFunctionCall","src":"10418:35:22"},{"arguments":[{"arguments":[{"name":"x","nativeSrc":"10475:1:22","nodeType":"YulIdentifier","src":"10475:1:22"},{"kind":"number","nativeSrc":"10478:1:22","nodeType":"YulLiteral","src":"10478:1:22","type":"","value":"0"}],"functionName":{"name":"slt","nativeSrc":"10471:3:22","nodeType":"YulIdentifier","src":"10471:3:22"},"nativeSrc":"10471:9:22","nodeType":"YulFunctionCall","src":"10471:9:22"},{"arguments":[{"arguments":[{"name":"sum","nativeSrc":"10493:3:22","nodeType":"YulIdentifier","src":"10493:3:22"},{"name":"y","nativeSrc":"10498:1:22","nodeType":"YulIdentifier","src":"10498:1:22"}],"functionName":{"name":"slt","nativeSrc":"10489:3:22","nodeType":"YulIdentifier","src":"10489:3:22"},"nativeSrc":"10489:11:22","nodeType":"YulFunctionCall","src":"10489:11:22"}],"functionName":{"name":"iszero","nativeSrc":"10482:6:22","nodeType":"YulIdentifier","src":"10482:6:22"},"nativeSrc":"10482:19:22","nodeType":"YulFunctionCall","src":"10482:19:22"}],"functionName":{"name":"and","nativeSrc":"10467:3:22","nodeType":"YulIdentifier","src":"10467:3:22"},"nativeSrc":"10467:35:22","nodeType":"YulFunctionCall","src":"10467:35:22"}],"functionName":{"name":"or","nativeSrc":"10402:2:22","nodeType":"YulIdentifier","src":"10402:2:22"},"nativeSrc":"10402:110:22","nodeType":"YulFunctionCall","src":"10402:110:22"},"nativeSrc":"10399:136:22","nodeType":"YulIf","src":"10399:136:22"}]},"name":"checked_add_t_int256","nativeSrc":"10167:375:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10197:1:22","nodeType":"YulTypedName","src":"10197:1:22","type":""},{"name":"y","nativeSrc":"10200:1:22","nodeType":"YulTypedName","src":"10200:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"10206:3:22","nodeType":"YulTypedName","src":"10206:3:22","type":""}],"src":"10167:375:22"},{"body":{"nativeSrc":"10654:118:22","nodeType":"YulBlock","src":"10654:118:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10676:6:22","nodeType":"YulIdentifier","src":"10676:6:22"},{"kind":"number","nativeSrc":"10684:1:22","nodeType":"YulLiteral","src":"10684:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10672:3:22","nodeType":"YulIdentifier","src":"10672:3:22"},"nativeSrc":"10672:14:22","nodeType":"YulFunctionCall","src":"10672:14:22"},{"hexValue":"596f752068617665206e6f7420766f746564206f7220616c7265616479207265","kind":"string","nativeSrc":"10688:34:22","nodeType":"YulLiteral","src":"10688:34:22","type":"","value":"You have not voted or already re"}],"functionName":{"name":"mstore","nativeSrc":"10665:6:22","nodeType":"YulIdentifier","src":"10665:6:22"},"nativeSrc":"10665:58:22","nodeType":"YulFunctionCall","src":"10665:58:22"},"nativeSrc":"10665:58:22","nodeType":"YulExpressionStatement","src":"10665:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10744:6:22","nodeType":"YulIdentifier","src":"10744:6:22"},{"kind":"number","nativeSrc":"10752:2:22","nodeType":"YulLiteral","src":"10752:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10740:3:22","nodeType":"YulIdentifier","src":"10740:3:22"},"nativeSrc":"10740:15:22","nodeType":"YulFunctionCall","src":"10740:15:22"},{"hexValue":"766f6b6564","kind":"string","nativeSrc":"10757:7:22","nodeType":"YulLiteral","src":"10757:7:22","type":"","value":"voked"}],"functionName":{"name":"mstore","nativeSrc":"10733:6:22","nodeType":"YulIdentifier","src":"10733:6:22"},"nativeSrc":"10733:32:22","nodeType":"YulFunctionCall","src":"10733:32:22"},"nativeSrc":"10733:32:22","nodeType":"YulExpressionStatement","src":"10733:32:22"}]},"name":"store_literal_in_memory_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f","nativeSrc":"10548:224:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10646:6:22","nodeType":"YulTypedName","src":"10646:6:22","type":""}],"src":"10548:224:22"},{"body":{"nativeSrc":"10924:220:22","nodeType":"YulBlock","src":"10924:220:22","statements":[{"nativeSrc":"10934:74:22","nodeType":"YulAssignment","src":"10934:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"11000:3:22","nodeType":"YulIdentifier","src":"11000:3:22"},{"kind":"number","nativeSrc":"11005:2:22","nodeType":"YulLiteral","src":"11005:2:22","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10941:58:22","nodeType":"YulIdentifier","src":"10941:58:22"},"nativeSrc":"10941:67:22","nodeType":"YulFunctionCall","src":"10941:67:22"},"variableNames":[{"name":"pos","nativeSrc":"10934:3:22","nodeType":"YulIdentifier","src":"10934:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11106:3:22","nodeType":"YulIdentifier","src":"11106:3:22"}],"functionName":{"name":"store_literal_in_memory_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f","nativeSrc":"11017:88:22","nodeType":"YulIdentifier","src":"11017:88:22"},"nativeSrc":"11017:93:22","nodeType":"YulFunctionCall","src":"11017:93:22"},"nativeSrc":"11017:93:22","nodeType":"YulExpressionStatement","src":"11017:93:22"},{"nativeSrc":"11119:19:22","nodeType":"YulAssignment","src":"11119:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"11130:3:22","nodeType":"YulIdentifier","src":"11130:3:22"},{"kind":"number","nativeSrc":"11135:2:22","nodeType":"YulLiteral","src":"11135:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11126:3:22","nodeType":"YulIdentifier","src":"11126:3:22"},"nativeSrc":"11126:12:22","nodeType":"YulFunctionCall","src":"11126:12:22"},"variableNames":[{"name":"end","nativeSrc":"11119:3:22","nodeType":"YulIdentifier","src":"11119:3:22"}]}]},"name":"abi_encode_t_stringliteral_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f_to_t_string_memory_ptr_fromStack","nativeSrc":"10778:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10912:3:22","nodeType":"YulTypedName","src":"10912:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10920:3:22","nodeType":"YulTypedName","src":"10920:3:22","type":""}],"src":"10778:366:22"},{"body":{"nativeSrc":"11321:248:22","nodeType":"YulBlock","src":"11321:248:22","statements":[{"nativeSrc":"11331:26:22","nodeType":"YulAssignment","src":"11331:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"11343:9:22","nodeType":"YulIdentifier","src":"11343:9:22"},{"kind":"number","nativeSrc":"11354:2:22","nodeType":"YulLiteral","src":"11354:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11339:3:22","nodeType":"YulIdentifier","src":"11339:3:22"},"nativeSrc":"11339:18:22","nodeType":"YulFunctionCall","src":"11339:18:22"},"variableNames":[{"name":"tail","nativeSrc":"11331:4:22","nodeType":"YulIdentifier","src":"11331:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11378:9:22","nodeType":"YulIdentifier","src":"11378:9:22"},{"kind":"number","nativeSrc":"11389:1:22","nodeType":"YulLiteral","src":"11389:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11374:3:22","nodeType":"YulIdentifier","src":"11374:3:22"},"nativeSrc":"11374:17:22","nodeType":"YulFunctionCall","src":"11374:17:22"},{"arguments":[{"name":"tail","nativeSrc":"11397:4:22","nodeType":"YulIdentifier","src":"11397:4:22"},{"name":"headStart","nativeSrc":"11403:9:22","nodeType":"YulIdentifier","src":"11403:9:22"}],"functionName":{"name":"sub","nativeSrc":"11393:3:22","nodeType":"YulIdentifier","src":"11393:3:22"},"nativeSrc":"11393:20:22","nodeType":"YulFunctionCall","src":"11393:20:22"}],"functionName":{"name":"mstore","nativeSrc":"11367:6:22","nodeType":"YulIdentifier","src":"11367:6:22"},"nativeSrc":"11367:47:22","nodeType":"YulFunctionCall","src":"11367:47:22"},"nativeSrc":"11367:47:22","nodeType":"YulExpressionStatement","src":"11367:47:22"},{"nativeSrc":"11423:139:22","nodeType":"YulAssignment","src":"11423:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"11557:4:22","nodeType":"YulIdentifier","src":"11557:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f_to_t_string_memory_ptr_fromStack","nativeSrc":"11431:124:22","nodeType":"YulIdentifier","src":"11431:124:22"},"nativeSrc":"11431:131:22","nodeType":"YulFunctionCall","src":"11431:131:22"},"variableNames":[{"name":"tail","nativeSrc":"11423:4:22","nodeType":"YulIdentifier","src":"11423:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11150:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11301:9:22","nodeType":"YulTypedName","src":"11301:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11316:4:22","nodeType":"YulTypedName","src":"11316:4:22","type":""}],"src":"11150:419:22"},{"body":{"nativeSrc":"11620:149:22","nodeType":"YulBlock","src":"11620:149:22","statements":[{"nativeSrc":"11630:25:22","nodeType":"YulAssignment","src":"11630:25:22","value":{"arguments":[{"name":"x","nativeSrc":"11653:1:22","nodeType":"YulIdentifier","src":"11653:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11635:17:22","nodeType":"YulIdentifier","src":"11635:17:22"},"nativeSrc":"11635:20:22","nodeType":"YulFunctionCall","src":"11635:20:22"},"variableNames":[{"name":"x","nativeSrc":"11630:1:22","nodeType":"YulIdentifier","src":"11630:1:22"}]},{"nativeSrc":"11664:25:22","nodeType":"YulAssignment","src":"11664:25:22","value":{"arguments":[{"name":"y","nativeSrc":"11687:1:22","nodeType":"YulIdentifier","src":"11687:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11669:17:22","nodeType":"YulIdentifier","src":"11669:17:22"},"nativeSrc":"11669:20:22","nodeType":"YulFunctionCall","src":"11669:20:22"},"variableNames":[{"name":"y","nativeSrc":"11664:1:22","nodeType":"YulIdentifier","src":"11664:1:22"}]},{"nativeSrc":"11698:17:22","nodeType":"YulAssignment","src":"11698:17:22","value":{"arguments":[{"name":"x","nativeSrc":"11710:1:22","nodeType":"YulIdentifier","src":"11710:1:22"},{"name":"y","nativeSrc":"11713:1:22","nodeType":"YulIdentifier","src":"11713:1:22"}],"functionName":{"name":"sub","nativeSrc":"11706:3:22","nodeType":"YulIdentifier","src":"11706:3:22"},"nativeSrc":"11706:9:22","nodeType":"YulFunctionCall","src":"11706:9:22"},"variableNames":[{"name":"diff","nativeSrc":"11698:4:22","nodeType":"YulIdentifier","src":"11698:4:22"}]},{"body":{"nativeSrc":"11740:22:22","nodeType":"YulBlock","src":"11740:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11742:16:22","nodeType":"YulIdentifier","src":"11742:16:22"},"nativeSrc":"11742:18:22","nodeType":"YulFunctionCall","src":"11742:18:22"},"nativeSrc":"11742:18:22","nodeType":"YulExpressionStatement","src":"11742:18:22"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"11731:4:22","nodeType":"YulIdentifier","src":"11731:4:22"},{"name":"x","nativeSrc":"11737:1:22","nodeType":"YulIdentifier","src":"11737:1:22"}],"functionName":{"name":"gt","nativeSrc":"11728:2:22","nodeType":"YulIdentifier","src":"11728:2:22"},"nativeSrc":"11728:11:22","nodeType":"YulFunctionCall","src":"11728:11:22"},"nativeSrc":"11725:37:22","nodeType":"YulIf","src":"11725:37:22"}]},"name":"checked_sub_t_uint256","nativeSrc":"11575:194:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11606:1:22","nodeType":"YulTypedName","src":"11606:1:22","type":""},{"name":"y","nativeSrc":"11609:1:22","nodeType":"YulTypedName","src":"11609:1:22","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"11615:4:22","nodeType":"YulTypedName","src":"11615:4:22","type":""}],"src":"11575:194:22"},{"body":{"nativeSrc":"11819:328:22","nodeType":"YulBlock","src":"11819:328:22","statements":[{"nativeSrc":"11829:24:22","nodeType":"YulAssignment","src":"11829:24:22","value":{"arguments":[{"name":"x","nativeSrc":"11851:1:22","nodeType":"YulIdentifier","src":"11851:1:22"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"11834:16:22","nodeType":"YulIdentifier","src":"11834:16:22"},"nativeSrc":"11834:19:22","nodeType":"YulFunctionCall","src":"11834:19:22"},"variableNames":[{"name":"x","nativeSrc":"11829:1:22","nodeType":"YulIdentifier","src":"11829:1:22"}]},{"nativeSrc":"11862:24:22","nodeType":"YulAssignment","src":"11862:24:22","value":{"arguments":[{"name":"y","nativeSrc":"11884:1:22","nodeType":"YulIdentifier","src":"11884:1:22"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"11867:16:22","nodeType":"YulIdentifier","src":"11867:16:22"},"nativeSrc":"11867:19:22","nodeType":"YulFunctionCall","src":"11867:19:22"},"variableNames":[{"name":"y","nativeSrc":"11862:1:22","nodeType":"YulIdentifier","src":"11862:1:22"}]},{"nativeSrc":"11895:17:22","nodeType":"YulAssignment","src":"11895:17:22","value":{"arguments":[{"name":"x","nativeSrc":"11907:1:22","nodeType":"YulIdentifier","src":"11907:1:22"},{"name":"y","nativeSrc":"11910:1:22","nodeType":"YulIdentifier","src":"11910:1:22"}],"functionName":{"name":"sub","nativeSrc":"11903:3:22","nodeType":"YulIdentifier","src":"11903:3:22"},"nativeSrc":"11903:9:22","nodeType":"YulFunctionCall","src":"11903:9:22"},"variableNames":[{"name":"diff","nativeSrc":"11895:4:22","nodeType":"YulIdentifier","src":"11895:4:22"}]},{"body":{"nativeSrc":"12118:22:22","nodeType":"YulBlock","src":"12118:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12120:16:22","nodeType":"YulIdentifier","src":"12120:16:22"},"nativeSrc":"12120:18:22","nodeType":"YulFunctionCall","src":"12120:18:22"},"nativeSrc":"12120:18:22","nodeType":"YulExpressionStatement","src":"12120:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"y","nativeSrc":"12044:1:22","nodeType":"YulIdentifier","src":"12044:1:22"},{"kind":"number","nativeSrc":"12047:1:22","nodeType":"YulLiteral","src":"12047:1:22","type":"","value":"0"}],"functionName":{"name":"slt","nativeSrc":"12040:3:22","nodeType":"YulIdentifier","src":"12040:3:22"},"nativeSrc":"12040:9:22","nodeType":"YulFunctionCall","src":"12040:9:22"}],"functionName":{"name":"iszero","nativeSrc":"12033:6:22","nodeType":"YulIdentifier","src":"12033:6:22"},"nativeSrc":"12033:17:22","nodeType":"YulFunctionCall","src":"12033:17:22"},{"arguments":[{"name":"diff","nativeSrc":"12056:4:22","nodeType":"YulIdentifier","src":"12056:4:22"},{"name":"x","nativeSrc":"12062:1:22","nodeType":"YulIdentifier","src":"12062:1:22"}],"functionName":{"name":"sgt","nativeSrc":"12052:3:22","nodeType":"YulIdentifier","src":"12052:3:22"},"nativeSrc":"12052:12:22","nodeType":"YulFunctionCall","src":"12052:12:22"}],"functionName":{"name":"and","nativeSrc":"12029:3:22","nodeType":"YulIdentifier","src":"12029:3:22"},"nativeSrc":"12029:36:22","nodeType":"YulFunctionCall","src":"12029:36:22"},{"arguments":[{"arguments":[{"name":"y","nativeSrc":"12087:1:22","nodeType":"YulIdentifier","src":"12087:1:22"},{"kind":"number","nativeSrc":"12090:1:22","nodeType":"YulLiteral","src":"12090:1:22","type":"","value":"0"}],"functionName":{"name":"slt","nativeSrc":"12083:3:22","nodeType":"YulIdentifier","src":"12083:3:22"},"nativeSrc":"12083:9:22","nodeType":"YulFunctionCall","src":"12083:9:22"},{"arguments":[{"name":"diff","nativeSrc":"12098:4:22","nodeType":"YulIdentifier","src":"12098:4:22"},{"name":"x","nativeSrc":"12104:1:22","nodeType":"YulIdentifier","src":"12104:1:22"}],"functionName":{"name":"slt","nativeSrc":"12094:3:22","nodeType":"YulIdentifier","src":"12094:3:22"},"nativeSrc":"12094:12:22","nodeType":"YulFunctionCall","src":"12094:12:22"}],"functionName":{"name":"and","nativeSrc":"12079:3:22","nodeType":"YulIdentifier","src":"12079:3:22"},"nativeSrc":"12079:28:22","nodeType":"YulFunctionCall","src":"12079:28:22"}],"functionName":{"name":"or","nativeSrc":"12013:2:22","nodeType":"YulIdentifier","src":"12013:2:22"},"nativeSrc":"12013:104:22","nodeType":"YulFunctionCall","src":"12013:104:22"},"nativeSrc":"12010:130:22","nodeType":"YulIf","src":"12010:130:22"}]},"name":"checked_sub_t_int256","nativeSrc":"11775:372:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11805:1:22","nodeType":"YulTypedName","src":"11805:1:22","type":""},{"name":"y","nativeSrc":"11808:1:22","nodeType":"YulTypedName","src":"11808:1:22","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"11814:4:22","nodeType":"YulTypedName","src":"11814:4:22","type":""}],"src":"11775:372:22"},{"body":{"nativeSrc":"12279:206:22","nodeType":"YulBlock","src":"12279:206:22","statements":[{"nativeSrc":"12289:26:22","nodeType":"YulAssignment","src":"12289:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"12301:9:22","nodeType":"YulIdentifier","src":"12301:9:22"},{"kind":"number","nativeSrc":"12312:2:22","nodeType":"YulLiteral","src":"12312:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12297:3:22","nodeType":"YulIdentifier","src":"12297:3:22"},"nativeSrc":"12297:18:22","nodeType":"YulFunctionCall","src":"12297:18:22"},"variableNames":[{"name":"tail","nativeSrc":"12289:4:22","nodeType":"YulIdentifier","src":"12289:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12369:6:22","nodeType":"YulIdentifier","src":"12369:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"12382:9:22","nodeType":"YulIdentifier","src":"12382:9:22"},{"kind":"number","nativeSrc":"12393:1:22","nodeType":"YulLiteral","src":"12393:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12378:3:22","nodeType":"YulIdentifier","src":"12378:3:22"},"nativeSrc":"12378:17:22","nodeType":"YulFunctionCall","src":"12378:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12325:43:22","nodeType":"YulIdentifier","src":"12325:43:22"},"nativeSrc":"12325:71:22","nodeType":"YulFunctionCall","src":"12325:71:22"},"nativeSrc":"12325:71:22","nodeType":"YulExpressionStatement","src":"12325:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12450:6:22","nodeType":"YulIdentifier","src":"12450:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"12463:9:22","nodeType":"YulIdentifier","src":"12463:9:22"},{"kind":"number","nativeSrc":"12474:2:22","nodeType":"YulLiteral","src":"12474:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12459:3:22","nodeType":"YulIdentifier","src":"12459:3:22"},"nativeSrc":"12459:18:22","nodeType":"YulFunctionCall","src":"12459:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12406:43:22","nodeType":"YulIdentifier","src":"12406:43:22"},"nativeSrc":"12406:72:22","nodeType":"YulFunctionCall","src":"12406:72:22"},"nativeSrc":"12406:72:22","nodeType":"YulExpressionStatement","src":"12406:72:22"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nativeSrc":"12153:332:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12243:9:22","nodeType":"YulTypedName","src":"12243:9:22","type":""},{"name":"value1","nativeSrc":"12255:6:22","nodeType":"YulTypedName","src":"12255:6:22","type":""},{"name":"value0","nativeSrc":"12263:6:22","nodeType":"YulTypedName","src":"12263:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12274:4:22","nodeType":"YulTypedName","src":"12274:4:22","type":""}],"src":"12153:332:22"},{"body":{"nativeSrc":"12597:68:22","nodeType":"YulBlock","src":"12597:68:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12619:6:22","nodeType":"YulIdentifier","src":"12619:6:22"},{"kind":"number","nativeSrc":"12627:1:22","nodeType":"YulLiteral","src":"12627:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12615:3:22","nodeType":"YulIdentifier","src":"12615:3:22"},"nativeSrc":"12615:14:22","nodeType":"YulFunctionCall","src":"12615:14:22"},{"hexValue":"4f6e6c792075706c6f616465722063616e207265766f6b65","kind":"string","nativeSrc":"12631:26:22","nodeType":"YulLiteral","src":"12631:26:22","type":"","value":"Only uploader can revoke"}],"functionName":{"name":"mstore","nativeSrc":"12608:6:22","nodeType":"YulIdentifier","src":"12608:6:22"},"nativeSrc":"12608:50:22","nodeType":"YulFunctionCall","src":"12608:50:22"},"nativeSrc":"12608:50:22","nodeType":"YulExpressionStatement","src":"12608:50:22"}]},"name":"store_literal_in_memory_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7","nativeSrc":"12491:174:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12589:6:22","nodeType":"YulTypedName","src":"12589:6:22","type":""}],"src":"12491:174:22"},{"body":{"nativeSrc":"12817:220:22","nodeType":"YulBlock","src":"12817:220:22","statements":[{"nativeSrc":"12827:74:22","nodeType":"YulAssignment","src":"12827:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"12893:3:22","nodeType":"YulIdentifier","src":"12893:3:22"},{"kind":"number","nativeSrc":"12898:2:22","nodeType":"YulLiteral","src":"12898:2:22","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12834:58:22","nodeType":"YulIdentifier","src":"12834:58:22"},"nativeSrc":"12834:67:22","nodeType":"YulFunctionCall","src":"12834:67:22"},"variableNames":[{"name":"pos","nativeSrc":"12827:3:22","nodeType":"YulIdentifier","src":"12827:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"12999:3:22","nodeType":"YulIdentifier","src":"12999:3:22"}],"functionName":{"name":"store_literal_in_memory_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7","nativeSrc":"12910:88:22","nodeType":"YulIdentifier","src":"12910:88:22"},"nativeSrc":"12910:93:22","nodeType":"YulFunctionCall","src":"12910:93:22"},"nativeSrc":"12910:93:22","nodeType":"YulExpressionStatement","src":"12910:93:22"},{"nativeSrc":"13012:19:22","nodeType":"YulAssignment","src":"13012:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"13023:3:22","nodeType":"YulIdentifier","src":"13023:3:22"},{"kind":"number","nativeSrc":"13028:2:22","nodeType":"YulLiteral","src":"13028:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13019:3:22","nodeType":"YulIdentifier","src":"13019:3:22"},"nativeSrc":"13019:12:22","nodeType":"YulFunctionCall","src":"13019:12:22"},"variableNames":[{"name":"end","nativeSrc":"13012:3:22","nodeType":"YulIdentifier","src":"13012:3:22"}]}]},"name":"abi_encode_t_stringliteral_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7_to_t_string_memory_ptr_fromStack","nativeSrc":"12671:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12805:3:22","nodeType":"YulTypedName","src":"12805:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12813:3:22","nodeType":"YulTypedName","src":"12813:3:22","type":""}],"src":"12671:366:22"},{"body":{"nativeSrc":"13214:248:22","nodeType":"YulBlock","src":"13214:248:22","statements":[{"nativeSrc":"13224:26:22","nodeType":"YulAssignment","src":"13224:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"13236:9:22","nodeType":"YulIdentifier","src":"13236:9:22"},{"kind":"number","nativeSrc":"13247:2:22","nodeType":"YulLiteral","src":"13247:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13232:3:22","nodeType":"YulIdentifier","src":"13232:3:22"},"nativeSrc":"13232:18:22","nodeType":"YulFunctionCall","src":"13232:18:22"},"variableNames":[{"name":"tail","nativeSrc":"13224:4:22","nodeType":"YulIdentifier","src":"13224:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13271:9:22","nodeType":"YulIdentifier","src":"13271:9:22"},{"kind":"number","nativeSrc":"13282:1:22","nodeType":"YulLiteral","src":"13282:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13267:3:22","nodeType":"YulIdentifier","src":"13267:3:22"},"nativeSrc":"13267:17:22","nodeType":"YulFunctionCall","src":"13267:17:22"},{"arguments":[{"name":"tail","nativeSrc":"13290:4:22","nodeType":"YulIdentifier","src":"13290:4:22"},{"name":"headStart","nativeSrc":"13296:9:22","nodeType":"YulIdentifier","src":"13296:9:22"}],"functionName":{"name":"sub","nativeSrc":"13286:3:22","nodeType":"YulIdentifier","src":"13286:3:22"},"nativeSrc":"13286:20:22","nodeType":"YulFunctionCall","src":"13286:20:22"}],"functionName":{"name":"mstore","nativeSrc":"13260:6:22","nodeType":"YulIdentifier","src":"13260:6:22"},"nativeSrc":"13260:47:22","nodeType":"YulFunctionCall","src":"13260:47:22"},"nativeSrc":"13260:47:22","nodeType":"YulExpressionStatement","src":"13260:47:22"},{"nativeSrc":"13316:139:22","nodeType":"YulAssignment","src":"13316:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"13450:4:22","nodeType":"YulIdentifier","src":"13450:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7_to_t_string_memory_ptr_fromStack","nativeSrc":"13324:124:22","nodeType":"YulIdentifier","src":"13324:124:22"},"nativeSrc":"13324:131:22","nodeType":"YulFunctionCall","src":"13324:131:22"},"variableNames":[{"name":"tail","nativeSrc":"13316:4:22","nodeType":"YulIdentifier","src":"13316:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13043:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13194:9:22","nodeType":"YulTypedName","src":"13194:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13209:4:22","nodeType":"YulTypedName","src":"13209:4:22","type":""}],"src":"13043:419:22"},{"body":{"nativeSrc":"13574:68:22","nodeType":"YulBlock","src":"13574:68:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13596:6:22","nodeType":"YulIdentifier","src":"13596:6:22"},{"kind":"number","nativeSrc":"13604:1:22","nodeType":"YulLiteral","src":"13604:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13592:3:22","nodeType":"YulIdentifier","src":"13592:3:22"},"nativeSrc":"13592:14:22","nodeType":"YulFunctionCall","src":"13592:14:22"},{"hexValue":"5265706f727420616c72656164792066696e616c697a6564","kind":"string","nativeSrc":"13608:26:22","nodeType":"YulLiteral","src":"13608:26:22","type":"","value":"Report already finalized"}],"functionName":{"name":"mstore","nativeSrc":"13585:6:22","nodeType":"YulIdentifier","src":"13585:6:22"},"nativeSrc":"13585:50:22","nodeType":"YulFunctionCall","src":"13585:50:22"},"nativeSrc":"13585:50:22","nodeType":"YulExpressionStatement","src":"13585:50:22"}]},"name":"store_literal_in_memory_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac","nativeSrc":"13468:174:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13566:6:22","nodeType":"YulTypedName","src":"13566:6:22","type":""}],"src":"13468:174:22"},{"body":{"nativeSrc":"13794:220:22","nodeType":"YulBlock","src":"13794:220:22","statements":[{"nativeSrc":"13804:74:22","nodeType":"YulAssignment","src":"13804:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"13870:3:22","nodeType":"YulIdentifier","src":"13870:3:22"},{"kind":"number","nativeSrc":"13875:2:22","nodeType":"YulLiteral","src":"13875:2:22","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13811:58:22","nodeType":"YulIdentifier","src":"13811:58:22"},"nativeSrc":"13811:67:22","nodeType":"YulFunctionCall","src":"13811:67:22"},"variableNames":[{"name":"pos","nativeSrc":"13804:3:22","nodeType":"YulIdentifier","src":"13804:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13976:3:22","nodeType":"YulIdentifier","src":"13976:3:22"}],"functionName":{"name":"store_literal_in_memory_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac","nativeSrc":"13887:88:22","nodeType":"YulIdentifier","src":"13887:88:22"},"nativeSrc":"13887:93:22","nodeType":"YulFunctionCall","src":"13887:93:22"},"nativeSrc":"13887:93:22","nodeType":"YulExpressionStatement","src":"13887:93:22"},{"nativeSrc":"13989:19:22","nodeType":"YulAssignment","src":"13989:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"14000:3:22","nodeType":"YulIdentifier","src":"14000:3:22"},{"kind":"number","nativeSrc":"14005:2:22","nodeType":"YulLiteral","src":"14005:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13996:3:22","nodeType":"YulIdentifier","src":"13996:3:22"},"nativeSrc":"13996:12:22","nodeType":"YulFunctionCall","src":"13996:12:22"},"variableNames":[{"name":"end","nativeSrc":"13989:3:22","nodeType":"YulIdentifier","src":"13989:3:22"}]}]},"name":"abi_encode_t_stringliteral_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac_to_t_string_memory_ptr_fromStack","nativeSrc":"13648:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13782:3:22","nodeType":"YulTypedName","src":"13782:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13790:3:22","nodeType":"YulTypedName","src":"13790:3:22","type":""}],"src":"13648:366:22"},{"body":{"nativeSrc":"14191:248:22","nodeType":"YulBlock","src":"14191:248:22","statements":[{"nativeSrc":"14201:26:22","nodeType":"YulAssignment","src":"14201:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"14213:9:22","nodeType":"YulIdentifier","src":"14213:9:22"},{"kind":"number","nativeSrc":"14224:2:22","nodeType":"YulLiteral","src":"14224:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14209:3:22","nodeType":"YulIdentifier","src":"14209:3:22"},"nativeSrc":"14209:18:22","nodeType":"YulFunctionCall","src":"14209:18:22"},"variableNames":[{"name":"tail","nativeSrc":"14201:4:22","nodeType":"YulIdentifier","src":"14201:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14248:9:22","nodeType":"YulIdentifier","src":"14248:9:22"},{"kind":"number","nativeSrc":"14259:1:22","nodeType":"YulLiteral","src":"14259:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14244:3:22","nodeType":"YulIdentifier","src":"14244:3:22"},"nativeSrc":"14244:17:22","nodeType":"YulFunctionCall","src":"14244:17:22"},{"arguments":[{"name":"tail","nativeSrc":"14267:4:22","nodeType":"YulIdentifier","src":"14267:4:22"},{"name":"headStart","nativeSrc":"14273:9:22","nodeType":"YulIdentifier","src":"14273:9:22"}],"functionName":{"name":"sub","nativeSrc":"14263:3:22","nodeType":"YulIdentifier","src":"14263:3:22"},"nativeSrc":"14263:20:22","nodeType":"YulFunctionCall","src":"14263:20:22"}],"functionName":{"name":"mstore","nativeSrc":"14237:6:22","nodeType":"YulIdentifier","src":"14237:6:22"},"nativeSrc":"14237:47:22","nodeType":"YulFunctionCall","src":"14237:47:22"},"nativeSrc":"14237:47:22","nodeType":"YulExpressionStatement","src":"14237:47:22"},{"nativeSrc":"14293:139:22","nodeType":"YulAssignment","src":"14293:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"14427:4:22","nodeType":"YulIdentifier","src":"14427:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac_to_t_string_memory_ptr_fromStack","nativeSrc":"14301:124:22","nodeType":"YulIdentifier","src":"14301:124:22"},"nativeSrc":"14301:131:22","nodeType":"YulFunctionCall","src":"14301:131:22"},"variableNames":[{"name":"tail","nativeSrc":"14293:4:22","nodeType":"YulIdentifier","src":"14293:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14020:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14171:9:22","nodeType":"YulTypedName","src":"14171:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14186:4:22","nodeType":"YulTypedName","src":"14186:4:22","type":""}],"src":"14020:419:22"},{"body":{"nativeSrc":"14488:190:22","nodeType":"YulBlock","src":"14488:190:22","statements":[{"nativeSrc":"14498:33:22","nodeType":"YulAssignment","src":"14498:33:22","value":{"arguments":[{"name":"value","nativeSrc":"14525:5:22","nodeType":"YulIdentifier","src":"14525:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14507:17:22","nodeType":"YulIdentifier","src":"14507:17:22"},"nativeSrc":"14507:24:22","nodeType":"YulFunctionCall","src":"14507:24:22"},"variableNames":[{"name":"value","nativeSrc":"14498:5:22","nodeType":"YulIdentifier","src":"14498:5:22"}]},{"body":{"nativeSrc":"14621:22:22","nodeType":"YulBlock","src":"14621:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14623:16:22","nodeType":"YulIdentifier","src":"14623:16:22"},"nativeSrc":"14623:18:22","nodeType":"YulFunctionCall","src":"14623:18:22"},"nativeSrc":"14623:18:22","nodeType":"YulExpressionStatement","src":"14623:18:22"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"14546:5:22","nodeType":"YulIdentifier","src":"14546:5:22"},{"kind":"number","nativeSrc":"14553:66:22","nodeType":"YulLiteral","src":"14553:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"14543:2:22","nodeType":"YulIdentifier","src":"14543:2:22"},"nativeSrc":"14543:77:22","nodeType":"YulFunctionCall","src":"14543:77:22"},"nativeSrc":"14540:103:22","nodeType":"YulIf","src":"14540:103:22"},{"nativeSrc":"14652:20:22","nodeType":"YulAssignment","src":"14652:20:22","value":{"arguments":[{"name":"value","nativeSrc":"14663:5:22","nodeType":"YulIdentifier","src":"14663:5:22"},{"kind":"number","nativeSrc":"14670:1:22","nodeType":"YulLiteral","src":"14670:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"14659:3:22","nodeType":"YulIdentifier","src":"14659:3:22"},"nativeSrc":"14659:13:22","nodeType":"YulFunctionCall","src":"14659:13:22"},"variableNames":[{"name":"ret","nativeSrc":"14652:3:22","nodeType":"YulIdentifier","src":"14652:3:22"}]}]},"name":"increment_t_uint256","nativeSrc":"14445:233:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14474:5:22","nodeType":"YulTypedName","src":"14474:5:22","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"14484:3:22","nodeType":"YulTypedName","src":"14484:3:22","type":""}],"src":"14445:233:22"},{"body":{"nativeSrc":"14790:61:22","nodeType":"YulBlock","src":"14790:61:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14812:6:22","nodeType":"YulIdentifier","src":"14812:6:22"},{"kind":"number","nativeSrc":"14820:1:22","nodeType":"YulLiteral","src":"14820:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14808:3:22","nodeType":"YulIdentifier","src":"14808:3:22"},"nativeSrc":"14808:14:22","nodeType":"YulFunctionCall","src":"14808:14:22"},{"hexValue":"416c72656164792076616c696461746564","kind":"string","nativeSrc":"14824:19:22","nodeType":"YulLiteral","src":"14824:19:22","type":"","value":"Already validated"}],"functionName":{"name":"mstore","nativeSrc":"14801:6:22","nodeType":"YulIdentifier","src":"14801:6:22"},"nativeSrc":"14801:43:22","nodeType":"YulFunctionCall","src":"14801:43:22"},"nativeSrc":"14801:43:22","nodeType":"YulExpressionStatement","src":"14801:43:22"}]},"name":"store_literal_in_memory_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913","nativeSrc":"14684:167:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14782:6:22","nodeType":"YulTypedName","src":"14782:6:22","type":""}],"src":"14684:167:22"},{"body":{"nativeSrc":"15003:220:22","nodeType":"YulBlock","src":"15003:220:22","statements":[{"nativeSrc":"15013:74:22","nodeType":"YulAssignment","src":"15013:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"15079:3:22","nodeType":"YulIdentifier","src":"15079:3:22"},{"kind":"number","nativeSrc":"15084:2:22","nodeType":"YulLiteral","src":"15084:2:22","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15020:58:22","nodeType":"YulIdentifier","src":"15020:58:22"},"nativeSrc":"15020:67:22","nodeType":"YulFunctionCall","src":"15020:67:22"},"variableNames":[{"name":"pos","nativeSrc":"15013:3:22","nodeType":"YulIdentifier","src":"15013:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15185:3:22","nodeType":"YulIdentifier","src":"15185:3:22"}],"functionName":{"name":"store_literal_in_memory_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913","nativeSrc":"15096:88:22","nodeType":"YulIdentifier","src":"15096:88:22"},"nativeSrc":"15096:93:22","nodeType":"YulFunctionCall","src":"15096:93:22"},"nativeSrc":"15096:93:22","nodeType":"YulExpressionStatement","src":"15096:93:22"},{"nativeSrc":"15198:19:22","nodeType":"YulAssignment","src":"15198:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"15209:3:22","nodeType":"YulIdentifier","src":"15209:3:22"},{"kind":"number","nativeSrc":"15214:2:22","nodeType":"YulLiteral","src":"15214:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15205:3:22","nodeType":"YulIdentifier","src":"15205:3:22"},"nativeSrc":"15205:12:22","nodeType":"YulFunctionCall","src":"15205:12:22"},"variableNames":[{"name":"end","nativeSrc":"15198:3:22","nodeType":"YulIdentifier","src":"15198:3:22"}]}]},"name":"abi_encode_t_stringliteral_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913_to_t_string_memory_ptr_fromStack","nativeSrc":"14857:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14991:3:22","nodeType":"YulTypedName","src":"14991:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14999:3:22","nodeType":"YulTypedName","src":"14999:3:22","type":""}],"src":"14857:366:22"},{"body":{"nativeSrc":"15400:248:22","nodeType":"YulBlock","src":"15400:248:22","statements":[{"nativeSrc":"15410:26:22","nodeType":"YulAssignment","src":"15410:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"15422:9:22","nodeType":"YulIdentifier","src":"15422:9:22"},{"kind":"number","nativeSrc":"15433:2:22","nodeType":"YulLiteral","src":"15433:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15418:3:22","nodeType":"YulIdentifier","src":"15418:3:22"},"nativeSrc":"15418:18:22","nodeType":"YulFunctionCall","src":"15418:18:22"},"variableNames":[{"name":"tail","nativeSrc":"15410:4:22","nodeType":"YulIdentifier","src":"15410:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15457:9:22","nodeType":"YulIdentifier","src":"15457:9:22"},{"kind":"number","nativeSrc":"15468:1:22","nodeType":"YulLiteral","src":"15468:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15453:3:22","nodeType":"YulIdentifier","src":"15453:3:22"},"nativeSrc":"15453:17:22","nodeType":"YulFunctionCall","src":"15453:17:22"},{"arguments":[{"name":"tail","nativeSrc":"15476:4:22","nodeType":"YulIdentifier","src":"15476:4:22"},{"name":"headStart","nativeSrc":"15482:9:22","nodeType":"YulIdentifier","src":"15482:9:22"}],"functionName":{"name":"sub","nativeSrc":"15472:3:22","nodeType":"YulIdentifier","src":"15472:3:22"},"nativeSrc":"15472:20:22","nodeType":"YulFunctionCall","src":"15472:20:22"}],"functionName":{"name":"mstore","nativeSrc":"15446:6:22","nodeType":"YulIdentifier","src":"15446:6:22"},"nativeSrc":"15446:47:22","nodeType":"YulFunctionCall","src":"15446:47:22"},"nativeSrc":"15446:47:22","nodeType":"YulExpressionStatement","src":"15446:47:22"},{"nativeSrc":"15502:139:22","nodeType":"YulAssignment","src":"15502:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"15636:4:22","nodeType":"YulIdentifier","src":"15636:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913_to_t_string_memory_ptr_fromStack","nativeSrc":"15510:124:22","nodeType":"YulIdentifier","src":"15510:124:22"},"nativeSrc":"15510:131:22","nodeType":"YulFunctionCall","src":"15510:131:22"},"variableNames":[{"name":"tail","nativeSrc":"15502:4:22","nodeType":"YulIdentifier","src":"15502:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15229:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15380:9:22","nodeType":"YulTypedName","src":"15380:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15395:4:22","nodeType":"YulTypedName","src":"15395:4:22","type":""}],"src":"15229:419:22"},{"body":{"nativeSrc":"15682:152:22","nodeType":"YulBlock","src":"15682:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15699:1:22","nodeType":"YulLiteral","src":"15699:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"15702:77:22","nodeType":"YulLiteral","src":"15702:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15692:6:22","nodeType":"YulIdentifier","src":"15692:6:22"},"nativeSrc":"15692:88:22","nodeType":"YulFunctionCall","src":"15692:88:22"},"nativeSrc":"15692:88:22","nodeType":"YulExpressionStatement","src":"15692:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15796:1:22","nodeType":"YulLiteral","src":"15796:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"15799:4:22","nodeType":"YulLiteral","src":"15799:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"15789:6:22","nodeType":"YulIdentifier","src":"15789:6:22"},"nativeSrc":"15789:15:22","nodeType":"YulFunctionCall","src":"15789:15:22"},"nativeSrc":"15789:15:22","nodeType":"YulExpressionStatement","src":"15789:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15820:1:22","nodeType":"YulLiteral","src":"15820:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"15823:4:22","nodeType":"YulLiteral","src":"15823:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15813:6:22","nodeType":"YulIdentifier","src":"15813:6:22"},"nativeSrc":"15813:15:22","nodeType":"YulFunctionCall","src":"15813:15:22"},"nativeSrc":"15813:15:22","nodeType":"YulExpressionStatement","src":"15813:15:22"}]},"name":"panic_error_0x32","nativeSrc":"15654:180:22","nodeType":"YulFunctionDefinition","src":"15654:180:22"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_int8(value) -> cleaned {\n        cleaned := signextend(0, value)\n    }\n\n    function validator_revert_t_int8(value) {\n        if iszero(eq(value, cleanup_t_int8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int8(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_int8(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_int256_t_bool__to_t_uint256_t_address_t_int256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CampusToken_$7066_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_CampusToken_$7066_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CampusToken_$7066_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_CampusToken_$7066__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CampusToken_$7066_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid vote\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb30b1f6b5c9344465d67e0c3b7b482a441faedc3196288ab424554401b3d8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already voted\")\n\n    }\n\n    function abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_int256(product_raw)\n\n        // special case\n        if and(slt(x, 0), eq(y, 0x8000000000000000000000000000000000000000000000000000000000000000)) { panic_error_0x11() }\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, sdiv(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_int256(x, y) -> sum {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        sum := add(x, y)\n\n        // overflow, if x >= 0 and sum < y\n        // underflow, if x < 0 and sum >= y\n        if or(\n            and(iszero(slt(x, 0)), slt(sum, y)),\n            and(slt(x, 0), iszero(slt(sum, y)))\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have not voted or already re\")\n\n        mstore(add(memPtr, 32), \"voked\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3a3f9b3a5df78bf3c4cc736a9ef04a4e435ba5539bcf29cf1ae6ad9a978373f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        diff := sub(x, y)\n\n        // underflow, if y >= 0 and diff > x\n        // overflow, if y < 0 and diff < x\n        if or(\n            and(iszero(slt(y, 0)), sgt(diff, x)),\n            and(slt(y, 0), slt(diff, x))\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only uploader can revoke\")\n\n    }\n\n    function abi_encode_t_stringliteral_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7ab0959edeef6c7e36fc29422ae786f5d6f8383d9390cdbc2e3a1f3962473db7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac(memPtr) {\n\n        mstore(add(memPtr, 0), \"Report already finalized\")\n\n    }\n\n    function abi_encode_t_stringliteral_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_284b2c556aa48783f9cea1791bbaffbf0609ce7bd7a9cc08a3df7b8f18332dac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already validated\")\n\n    }\n\n    function abi_encode_t_stringliteral_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_460cb11aab3a2b91ea998e950d74e101c5e4e39dad377f5963bc5c9edb4a3913_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063b12f55eb1161008c578063ed1957d911610066578063ed1957d91461024e578063f26eb2771461026c578063fa9c48b714610288578063fc0c546a146102a4576100ea565b8063b12f55eb146101e1578063c942adf7146101ff578063ca93ef1914610232576100ea565b80635ff2c42c116100c85780635ff2c42c146101475780636b38516f14610165578063a5b39cfb14610181578063a730117e146101b1576100ea565b8063185c6f84146100ef57806342530abd1461010d5780635790411e14610129575b600080fd5b6100f76102c2565b60405161010491906116ac565b60405180910390f35b61012760048036038101906101229190611731565b6102c8565b005b6101316106be565b60405161013e91906116ac565b60405180910390f35b61014f6106ca565b60405161015c91906116ac565b60405180910390f35b61017f600480360381019061017a9190611771565b6106d7565b005b61019b600480360381019061019691906117fc565b61099d565b6040516101a891906116ac565b60405180910390f35b6101cb60048036038101906101c691906117fc565b6109b5565b6040516101d891906116ac565b60405180910390f35b6101e9610a95565b6040516101f691906116ac565b60405180910390f35b61021960048036038101906102149190611771565b610aa1565b604051610229949392919061186c565b60405180910390f35b61024c60048036038101906102479190611771565b610afe565b005b610256610dc0565b60405161026391906116ac565b60405180910390f35b61028660048036038101906102819190611771565b610dcd565b005b6102a2600480360381019061029d9190611771565b61104d565b005b6102ac61117f565b6040516102b99190611910565b60405180910390f35b60015481565b60006002600084815260200190815260200160002090506802b5e3af16b188000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610342919061192b565b602060405180830381865afa15801561035f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610383919061195b565b10156103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bb906119e5565b60405180910390fd5b60018260000b14806103f857507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260000b145b610437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042e90611a51565b60405180910390fd5b60008160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460000b60000b146104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c290611abd565b60405180910390fd5b6802b5e3af16b1880000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105239190611b0c565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d1118ce336802b5e3af16b18800006040518363ffffffff1660e01b815260040161058e929190611b40565b600060405180830381600087803b1580156105a857600080fd5b505af11580156105bc573d6000803e3d6000fd5b5050505060006105cb336109b5565b9050808360000b6105dc9190611b69565b8260020160008282546105ef9190611be1565b92505081905550828260050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360000b60ff16021790555081600401339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b678ac7230489e8000081565b68056bc75e2d6310000081565b600060026000838152602001908152602001600020905060008160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460000b60000b03610782576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077990611c97565b60405180910390fd5b60008160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460000b90506802b5e3af16b1880000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461082d9190611cb7565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381a4af15336802b5e3af16b18800006040518363ffffffff1660e01b8152600401610898929190611b40565b600060405180830381600087803b1580156108b257600080fd5b505af11580156108c6573d6000803e3d6000fd5b5050505060006108d5336109b5565b9050808260000b6108e69190611b69565b8360020160008282546108f99190611ceb565b9250508190555060008360050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360000b60ff1602179055507fb6c537d4d5cd45cf3082c7458c198a25e5e551611604a18df485c806c2125c40843360405161098f929190611d2e565b60405180910390a150505050565b60036020528060005260406000206000915090505481565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610a11919061192b565b602060405180830381865afa158015610a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a52919061195b565b9050683635c9adc5dea00000811115610a6f576003915050610a90565b681b1ae4d6e2ef500000811115610a8a576001915050610a90565b60019150505b919050565b674563918244f4000081565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b60006002600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e90611da3565b60405180910390fd5b8060030160009054906101000a900460ff1615610bf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf090611e0f565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381a4af158260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1668056bc75e2d631000006040518363ffffffff1660e01b8152600401610c81929190611b40565b600060405180830381600087803b158015610c9b57600080fd5b505af1158015610caf573d6000803e3d6000fd5b5050505068056bc75e2d63100000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d0b9190611cb7565b92505081905550600260008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff0219169055600482016000610d819190611655565b50507fd70d884c5bc88c9a05d6a19993baba89fc62d9c3a7a02925bd6a748b2051d0bf8233604051610db4929190611d2e565b60405180910390a15050565b6802b5e3af16b188000081565b68056bc75e2d6310000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610e30919061192b565b602060405180830381865afa158015610e4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e71919061195b565b1015610eb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea9906119e5565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d1118ce3368056bc75e2d631000006040518363ffffffff1660e01b8152600401610f16929190611b40565b600060405180830381600087803b158015610f3057600080fd5b505af1158015610f44573d6000803e3d6000fd5b5050505068056bc75e2d63100000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fa09190611b0c565b9250508190555060016000815480929190610fba90611e2f565b91905055506000600260008381526020019081526020016000209050818160000181905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000816002018190555060008160030160006101000a81548160ff0219169083151502179055505050565b60006002600083815260200190815260200160002090508060030160009054906101000a900460ff16156110b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ad90611ec3565b60405180910390fd5b60018160030160006101000a81548160ff02191690831515021790555068056bc75e2d63100000600360008360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461114f9190611cb7565b925050819055506000816002015413156111715761116c826111a3565b61117b565b61117a82611453565b5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060026000838152602001908152602001600020905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381a4af158260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1668056bc75e2d63100000674563918244f400006112389190611b0c565b6040518363ffffffff1660e01b8152600401611255929190611b40565b600060405180830381600087803b15801561126f57600080fd5b505af1158015611283573d6000803e3d6000fd5b5050505060005b816004018054905081101561144e5760008260040182815481106112b1576112b0611ee3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060018360050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460000b60000b036113e15760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381a4af15826802b5e3af16b1880000678ac7230489e800006113919190611b0c565b6040518363ffffffff1660e01b81526004016113ae929190611b40565b600060405180830381600087803b1580156113c857600080fd5b505af11580156113dc573d6000803e3d6000fd5b505050505b6802b5e3af16b1880000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114399190611cb7565b9250508190555050808060010191505061128a565b505050565b600060026000838152602001908152602001600020905060005b816004018054905081101561165057600082600401828154811061149457611493611ee3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460000b60000b036115e35760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381a4af15826802b5e3af16b1880000678ac7230489e800006115939190611b0c565b6040518363ffffffff1660e01b81526004016115b0929190611b40565b600060405180830381600087803b1580156115ca57600080fd5b505af11580156115de573d6000803e3d6000fd5b505050505b6802b5e3af16b1880000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461163b9190611cb7565b9250508190555050808060010191505061146d565b505050565b50805460008255906000526020600020908101906116739190611676565b50565b5b8082111561168f576000816000905550600101611677565b5090565b6000819050919050565b6116a681611693565b82525050565b60006020820190506116c1600083018461169d565b92915050565b600080fd5b6116d581611693565b81146116e057600080fd5b50565b6000813590506116f2816116cc565b92915050565b60008160000b9050919050565b61170e816116f8565b811461171957600080fd5b50565b60008135905061172b81611705565b92915050565b60008060408385031215611748576117476116c7565b5b6000611756858286016116e3565b92505060206117678582860161171c565b9150509250929050565b600060208284031215611787576117866116c7565b5b6000611795848285016116e3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117c98261179e565b9050919050565b6117d9816117be565b81146117e457600080fd5b50565b6000813590506117f6816117d0565b92915050565b600060208284031215611812576118116116c7565b5b6000611820848285016117e7565b91505092915050565b611832816117be565b82525050565b6000819050919050565b61184b81611838565b82525050565b60008115159050919050565b61186681611851565b82525050565b6000608082019050611881600083018761169d565b61188e6020830186611829565b61189b6040830185611842565b6118a8606083018461185d565b95945050505050565b6000819050919050565b60006118d66118d16118cc8461179e565b6118b1565b61179e565b9050919050565b60006118e8826118bb565b9050919050565b60006118fa826118dd565b9050919050565b61190a816118ef565b82525050565b60006020820190506119256000830184611901565b92915050565b60006020820190506119406000830184611829565b92915050565b600081519050611955816116cc565b92915050565b600060208284031215611971576119706116c7565b5b600061197f84828501611946565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e74207374616b650000000000000000000000000000600082015250565b60006119cf601283611988565b91506119da82611999565b602082019050919050565b600060208201905081810360008301526119fe816119c2565b9050919050565b7f496e76616c696420766f74650000000000000000000000000000000000000000600082015250565b6000611a3b600c83611988565b9150611a4682611a05565b602082019050919050565b60006020820190508181036000830152611a6a81611a2e565b9050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b6000611aa7600d83611988565b9150611ab282611a71565b602082019050919050565b60006020820190508181036000830152611ad681611a9a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b1782611693565b9150611b2283611693565b9250828201905080821115611b3a57611b39611add565b5b92915050565b6000604082019050611b556000830185611829565b611b62602083018461169d565b9392505050565b6000611b7482611838565b9150611b7f83611838565b9250828202611b8d81611838565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615611bc557611bc4611add565b5b8282058414831517611bda57611bd9611add565b5b5092915050565b6000611bec82611838565b9150611bf783611838565b925082820190508281121560008312168382126000841215161715611c1f57611c1e611add565b5b92915050565b7f596f752068617665206e6f7420766f746564206f7220616c726561647920726560008201527f766f6b6564000000000000000000000000000000000000000000000000000000602082015250565b6000611c81602583611988565b9150611c8c82611c25565b604082019050919050565b60006020820190508181036000830152611cb081611c74565b9050919050565b6000611cc282611693565b9150611ccd83611693565b9250828203905081811115611ce557611ce4611add565b5b92915050565b6000611cf682611838565b9150611d0183611838565b9250828203905081811260008412168282136000851215161715611d2857611d27611add565b5b92915050565b6000604082019050611d43600083018561169d565b611d506020830184611829565b9392505050565b7f4f6e6c792075706c6f616465722063616e207265766f6b650000000000000000600082015250565b6000611d8d601883611988565b9150611d9882611d57565b602082019050919050565b60006020820190508181036000830152611dbc81611d80565b9050919050565b7f5265706f727420616c72656164792066696e616c697a65640000000000000000600082015250565b6000611df9601883611988565b9150611e0482611dc3565b602082019050919050565b60006020820190508181036000830152611e2881611dec565b9050919050565b6000611e3a82611693565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e6c57611e6b611add565b5b600182019050919050565b7f416c72656164792076616c696461746564000000000000000000000000000000600082015250565b6000611ead601183611988565b9150611eb882611e77565b602082019050919050565b60006020820190508181036000830152611edc81611ea0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220392f4f3ac89b6225c27a5f2058842034a96e1362f10ae01e3eb8201057a91c4664736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB12F55EB GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xED1957D9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xED1957D9 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xF26EB277 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xFA9C48B7 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2A4 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0xB12F55EB EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xC942ADF7 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xCA93EF19 EQ PUSH2 0x232 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x5FF2C42C GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5FF2C42C EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6B38516F EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA5B39CFB EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xA730117E EQ PUSH2 0x1B1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x185C6F84 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x42530ABD EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x5790411E EQ PUSH2 0x129 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x131 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x186C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0xDCD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1771 JUMP JUMPDEST PUSH2 0x104D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AC PUSH2 0x117F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1910 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH9 0x2B5E3AF16B1880000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x195B JUMP JUMPDEST LT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 SIGNEXTEND EQ DUP1 PUSH2 0x3F8 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH1 0x0 SIGNEXTEND EQ JUMPDEST PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42E SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x0 SIGNEXTEND PUSH1 0x0 SIGNEXTEND EQ PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x2B5E3AF16B1880000 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1118CE CALLER PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x5CB CALLER PUSH2 0x9B5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x0 SIGNEXTEND PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x5 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x0 SIGNEXTEND PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x5 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x0 SIGNEXTEND PUSH1 0x0 SIGNEXTEND SUB PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x779 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x0 SIGNEXTEND SWAP1 POP PUSH9 0x2B5E3AF16B1880000 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81A4AF15 CALLER PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x8D5 CALLER PUSH2 0x9B5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x0 SIGNEXTEND PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH1 0x5 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x0 SIGNEXTEND PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB6C537D4D5CD45CF3082C7458C198A25E5E551611604A18DF485C806C2125C40 DUP5 CALLER PUSH1 0x40 MLOAD PUSH2 0x98F SWAP3 SWAP2 SWAP1 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA11 SWAP2 SWAP1 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA52 SWAP2 SWAP1 PUSH2 0x195B JUMP JUMPDEST SWAP1 POP PUSH9 0x3635C9ADC5DEA00000 DUP2 GT ISZERO PUSH2 0xA6F JUMPI PUSH1 0x3 SWAP2 POP POP PUSH2 0xA90 JUMP JUMPDEST PUSH9 0x1B1AE4D6E2EF500000 DUP2 GT ISZERO PUSH2 0xA8A JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH8 0x4563918244F40000 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9E SWAP1 PUSH2 0x1DA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF0 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81A4AF15 DUP3 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH9 0x56BC75E2D63100000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC81 SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH9 0x56BC75E2D63100000 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0xD81 SWAP2 SWAP1 PUSH2 0x1655 JUMP JUMPDEST POP POP PUSH32 0xD70D884C5BC88C9A05D6A19993BABA89FC62D9C3A7A02925BD6A748B2051D0BF DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0xDB4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH9 0x2B5E3AF16B1880000 DUP2 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE71 SWAP2 SWAP1 PUSH2 0x195B JUMP JUMPDEST LT ISZERO PUSH2 0xEB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA9 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD1118CE CALLER PUSH9 0x56BC75E2D63100000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF16 SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH9 0x56BC75E2D63100000 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFA0 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFBA SWAP1 PUSH2 0x1E2F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AD SWAP1 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH9 0x56BC75E2D63100000 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x114F SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD SGT ISZERO PUSH2 0x1171 JUMPI PUSH2 0x116C DUP3 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x117B JUMP JUMPDEST PUSH2 0x117A DUP3 PUSH2 0x1453 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81A4AF15 DUP3 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH9 0x56BC75E2D63100000 PUSH8 0x4563918244F40000 PUSH2 0x1238 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1255 SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1283 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x144E JUMPI PUSH1 0x0 DUP3 PUSH1 0x4 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12B1 JUMPI PUSH2 0x12B0 PUSH2 0x1EE3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x5 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x0 SIGNEXTEND PUSH1 0x0 SIGNEXTEND SUB PUSH2 0x13E1 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81A4AF15 DUP3 PUSH9 0x2B5E3AF16B1880000 PUSH8 0x8AC7230489E80000 PUSH2 0x1391 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AE SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH9 0x2B5E3AF16B1880000 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1439 SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x128A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1650 JUMPI PUSH1 0x0 DUP3 PUSH1 0x4 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1494 JUMPI PUSH2 0x1493 PUSH2 0x1EE3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x5 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x0 SIGNEXTEND PUSH1 0x0 SIGNEXTEND SUB PUSH2 0x15E3 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81A4AF15 DUP3 PUSH9 0x2B5E3AF16B1880000 PUSH8 0x8AC7230489E80000 PUSH2 0x1593 SWAP2 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B0 SWAP3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH9 0x2B5E3AF16B1880000 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x163B SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x146D JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1673 SWAP2 SWAP1 PUSH2 0x1676 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x168F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1677 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A6 DUP2 PUSH2 0x1693 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x169D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D5 DUP2 PUSH2 0x1693 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F2 DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x170E DUP2 PUSH2 0x16F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x172B DUP2 PUSH2 0x1705 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1748 JUMPI PUSH2 0x1747 PUSH2 0x16C7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1756 DUP6 DUP3 DUP7 ADD PUSH2 0x16E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1767 DUP6 DUP3 DUP7 ADD PUSH2 0x171C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1787 JUMPI PUSH2 0x1786 PUSH2 0x16C7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1795 DUP5 DUP3 DUP6 ADD PUSH2 0x16E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C9 DUP3 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17D9 DUP2 PUSH2 0x17BE JUMP JUMPDEST DUP2 EQ PUSH2 0x17E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F6 DUP2 PUSH2 0x17D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1812 JUMPI PUSH2 0x1811 PUSH2 0x16C7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1820 DUP5 DUP3 DUP6 ADD PUSH2 0x17E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1832 DUP2 PUSH2 0x17BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184B DUP2 PUSH2 0x1838 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1866 DUP2 PUSH2 0x1851 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1881 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x188E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x189B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x18A8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x185D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D6 PUSH2 0x18D1 PUSH2 0x18CC DUP5 PUSH2 0x179E JUMP JUMPDEST PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E8 DUP3 PUSH2 0x18BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18FA DUP3 PUSH2 0x18DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190A DUP2 PUSH2 0x18EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1925 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1901 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1940 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1829 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1955 DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1971 JUMPI PUSH2 0x1970 PUSH2 0x16C7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x197F DUP5 DUP3 DUP6 ADD PUSH2 0x1946 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CF PUSH1 0x12 DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x19DA DUP3 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19FE DUP2 PUSH2 0x19C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420766F74650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3B PUSH1 0xC DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A46 DUP3 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A6A DUP2 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920766F74656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA7 PUSH1 0xD DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB2 DUP3 PUSH2 0x1A71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AD6 DUP2 PUSH2 0x1A9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B17 DUP3 PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B22 DUP4 PUSH2 0x1693 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B3A JUMPI PUSH2 0x1B39 PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x1B62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x169D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B74 DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7F DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1B8D DUP2 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH1 0x0 DUP5 SLT AND ISZERO PUSH2 0x1BC5 JUMPI PUSH2 0x1BC4 PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1BDA JUMPI PUSH2 0x1BD9 PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEC DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF7 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT AND DUP4 DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND OR ISZERO PUSH2 0x1C1F JUMPI PUSH2 0x1C1E PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F7420766F746564206F7220616C7265616479207265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766F6B6564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C81 PUSH1 0x25 DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8C DUP3 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB0 DUP2 PUSH2 0x1C74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC2 DUP3 PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCD DUP4 PUSH2 0x1693 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CE5 JUMPI PUSH2 0x1CE4 PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF6 DUP3 PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D01 DUP4 PUSH2 0x1838 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH1 0x0 DUP5 SLT AND DUP3 DUP3 SGT PUSH1 0x0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x1D28 JUMPI PUSH2 0x1D27 PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D43 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x1D50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1829 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792075706C6F616465722063616E207265766F6B650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8D PUSH1 0x18 DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D98 DUP3 PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DBC DUP2 PUSH2 0x1D80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265706F727420616C72656164792066696E616C697A65640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF9 PUSH1 0x18 DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E04 DUP3 PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E28 DUP2 PUSH2 0x1DEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3A DUP3 PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E6C JUMPI PUSH2 0x1E6B PUSH2 0x1ADD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C72656164792076616C696461746564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAD PUSH1 0x11 DUP4 PUSH2 0x1988 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB8 DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EDC DUP2 PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x2F 0x4F GASPRICE 0xC8 SWAP12 PUSH3 0x25C27A PUSH0 KECCAK256 PC DUP5 KECCAK256 CALLVALUE 0xA9 PUSH15 0x1362F10AE01E3EB8201057A91C4664 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"92:6438:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1925:1000;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;449:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;225:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5180:675;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;981:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:386;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;390:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;871:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5863:543;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;329:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1243:674;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4537:635;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;120:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;834:30;;;;:::o;1925:1000::-;2058:25;2086:7;:17;2094:8;2086:17;;;;;;;;;;;2058:45;;370:13;2160:5;;;;;;;;;;:15;;;2176:10;2160:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;2152:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2289:1;2281:4;:9;;;:23;;;;2302:2;2294:4;:10;;;2281:23;2273:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:1;2364:10;:16;;:28;2381:10;2364:28;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;2356:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;370:13;2480:12;:24;2493:10;2480:24;;;;;;;;;;;;;;;;:42;;;;;;;:::i;:::-;;;;;;;;2533:5;;;;;;;;;;:16;;;2550:10;370:13;2533:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2636:14;2653:25;2667:10;2653:13;:25::i;:::-;2636:42;;2734:6;2720:4;:21;;;;;;:::i;:::-;2689:10;:20;;;:53;;;;;;;:::i;:::-;;;;;;;;2826:4;2795:10;:16;;:28;2812:10;2795:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;;2879:10;:21;;2906:10;2879:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:944;;1925:1000;;:::o;449:55::-;491:13;449:55;:::o;225:53::-;264:14;225:53;:::o;5180:675::-;5239:25;5267:7;:17;5275:8;5267:17;;;;;;;;;;;5239:45;;5337:1;5305:10;:16;;:28;5322:10;5305:28;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;5297:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5393:13;5409:10;:16;;:28;5426:10;5409:28;;;;;;;;;;;;;;;;;;;;;;;;;5393:44;;370:13;5492:12;:24;5505:10;5492:24;;;;;;;;;;;;;;;;:42;;;;;;;:::i;:::-;;;;;;;;5545:5;;;;;;;;;;:18;;;5564:10;370:13;5545:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5643:14;5660:25;5674:10;5660:13;:25::i;:::-;5643:42;;5745:6;5727:8;:25;;;;;;:::i;:::-;5696:10;:20;;;:57;;;;;;;:::i;:::-;;;;;;;;5795:1;5764:10;:16;;:28;5781:10;5764:28;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;5814:33;5826:8;5836:10;5814:33;;;;;;;:::i;:::-;;;;;;;;5228:627;;;5180:675;:::o;981:47::-;;;;;;;;;;;;;;;;;:::o;2933:386::-;2991:7;3011:15;3029:5;;;;;;;;;;:15;;;3045:4;3029:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3011:39;;3077:15;3067:7;:25;3063:249;;;3116:1;3109:8;;;;;3063:249;3183:14;3173:7;:24;3169:143;;;3221:1;3214:8;;;;;3169:143;3282:1;3275:8;;;2933:386;;;;:::o;390:52::-;430:12;390:52;:::o;871:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5863:543::-;5924:25;5952:7;:17;5960:8;5952:17;;;;;;;;;;;5924:45;;6004:10;:19;;;;;;;;;;;;5990:33;;:10;:33;;;5982:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6072:10;:20;;;;;;;;;;;;6071:21;6063:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;6174:5;;;;;;;;;;:18;;;6193:10;:19;;;;;;;;;;;;264:14;6174:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;264:14;6238:12;:24;6251:10;6238:24;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;6328:7;:17;6336:8;6328:17;;;;;;;;;;;;6321:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6363:35;6377:8;6387:10;6363:35;;;;;;;:::i;:::-;;;;;;;;5913:493;5863:543;:::o;329:54::-;370:13;329:54;:::o;1243:674::-;264:14;1359:5;;;;;;;;;;:15;;;1375:10;1359:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;1351:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1472:5;;;;;;;;;;:16;;;1489:10;264:14;1472:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;264:14;1581:12;:24;1594:10;1581:24;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;1659:11;;:13;;;;;;;;;:::i;:::-;;;;;;1717:24;1744:7;:17;1752:8;1744:17;;;;;;;;;;;1717:44;;1787:8;1772:9;:12;;:23;;;;1827:10;1806:9;:18;;;:31;;;;;;;;;;;;;;;;;;1870:1;1848:9;:19;;:23;;;;1904:5;1882:9;:19;;;:27;;;;;;;;;;;;;;;;;;1292:625;1243:674;:::o;4537:635::-;4624:25;4652:7;:17;4660:8;4652:17;;;;;;;;;;;4624:45;;4731:10;:20;;;;;;;;;;;;4730:21;4722:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;4807:4;4784:10;:20;;;:27;;;;;;;;;;;;;;;;;;264:14;4824:12;:33;4837:10;:19;;;;;;;;;;;;4824:33;;;;;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;;;;;4911:1;4888:10;:20;;;:24;4884:279;;;4957:21;4969:8;4957:11;:21::i;:::-;4884:279;;;5074:21;5086:8;5074:11;:21::i;:::-;4884:279;4591:581;4537:635;:::o;120:24::-;;;;;;;;;;;;:::o;3327:648::-;3386:25;3414:7;:17;3422:8;3414:17;;;;;;;;;;;3386:45;;3480:5;;;;;;;;;;:18;;;3499:10;:19;;;;;;;;;;;;264:14;430:12;3520:28;;;;:::i;:::-;3480:69;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3631:9;3626:336;3650:10;:21;;:28;;;;3646:1;:32;3626:336;;;3700:17;3720:10;:21;;3742:1;3720:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3700:44;;3794:1;3763:10;:16;;:27;3780:9;3763:27;;;;;;;;;;;;;;;;;;;;;;;;;:32;;;3759:136;;3816:5;;;;;;;;;;:18;;;3835:9;370:13;491;3846:32;;;;:::i;:::-;3816:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3759:136;370:13;3909:12;:23;3922:9;3909:23;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;3685:277;3680:3;;;;;;;3626:336;;;;3375:600;3327:648;:::o;3983:541::-;4042:25;4070:7;:17;4078:8;4070:17;;;;;;;;;;;4042:45;;4181:9;4176:337;4200:10;:21;;:28;;;;4196:1;:32;4176:337;;;4250:17;4270:10;:21;;4292:1;4270:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4250:44;;4344:2;4313:10;:16;;:27;4330:9;4313:27;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;4309:137;;4367:5;;;;;;;;;;:18;;;4386:9;370:13;491;4397:32;;;;:::i;:::-;4367:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4309:137;370:13;4460:12;:23;4473:9;4460:23;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;4235:278;4230:3;;;;;;;4176:337;;;;4031:493;3983:541;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:77:22:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:89::-;1076:7;1119:5;1116:1;1105:20;1094:31;;1042:89;;;:::o;1137:116::-;1207:21;1222:5;1207:21;:::i;:::-;1200:5;1197:32;1187:60;;1243:1;1240;1233:12;1187:60;1137:116;:::o;1259:133::-;1302:5;1340:6;1327:20;1318:29;;1356:30;1380:5;1356:30;:::i;:::-;1259:133;;;;:::o;1398:468::-;1463:6;1471;1520:2;1508:9;1499:7;1495:23;1491:32;1488:119;;;1526:79;;:::i;:::-;1488:119;1646:1;1671:53;1716:7;1707:6;1696:9;1692:22;1671:53;:::i;:::-;1661:63;;1617:117;1773:2;1799:50;1841:7;1832:6;1821:9;1817:22;1799:50;:::i;:::-;1789:60;;1744:115;1398:468;;;;;:::o;1872:329::-;1931:6;1980:2;1968:9;1959:7;1955:23;1951:32;1948:119;;;1986:79;;:::i;:::-;1948:119;2106:1;2131:53;2176:7;2167:6;2156:9;2152:22;2131:53;:::i;:::-;2121:63;;2077:117;1872:329;;;;:::o;2207:126::-;2244:7;2284:42;2277:5;2273:54;2262:65;;2207:126;;;:::o;2339:96::-;2376:7;2405:24;2423:5;2405:24;:::i;:::-;2394:35;;2339:96;;;:::o;2441:122::-;2514:24;2532:5;2514:24;:::i;:::-;2507:5;2504:35;2494:63;;2553:1;2550;2543:12;2494:63;2441:122;:::o;2569:139::-;2615:5;2653:6;2640:20;2631:29;;2669:33;2696:5;2669:33;:::i;:::-;2569:139;;;;:::o;2714:329::-;2773:6;2822:2;2810:9;2801:7;2797:23;2793:32;2790:119;;;2828:79;;:::i;:::-;2790:119;2948:1;2973:53;3018:7;3009:6;2998:9;2994:22;2973:53;:::i;:::-;2963:63;;2919:117;2714:329;;;;:::o;3049:118::-;3136:24;3154:5;3136:24;:::i;:::-;3131:3;3124:37;3049:118;;:::o;3173:76::-;3209:7;3238:5;3227:16;;3173:76;;;:::o;3255:115::-;3340:23;3357:5;3340:23;:::i;:::-;3335:3;3328:36;3255:115;;:::o;3376:90::-;3410:7;3453:5;3446:13;3439:21;3428:32;;3376:90;;;:::o;3472:109::-;3553:21;3568:5;3553:21;:::i;:::-;3548:3;3541:34;3472:109;;:::o;3587:537::-;3756:4;3794:3;3783:9;3779:19;3771:27;;3808:71;3876:1;3865:9;3861:17;3852:6;3808:71;:::i;:::-;3889:72;3957:2;3946:9;3942:18;3933:6;3889:72;:::i;:::-;3971:70;4037:2;4026:9;4022:18;4013:6;3971:70;:::i;:::-;4051:66;4113:2;4102:9;4098:18;4089:6;4051:66;:::i;:::-;3587:537;;;;;;;:::o;4130:60::-;4158:3;4179:5;4172:12;;4130:60;;;:::o;4196:142::-;4246:9;4279:53;4297:34;4306:24;4324:5;4306:24;:::i;:::-;4297:34;:::i;:::-;4279:53;:::i;:::-;4266:66;;4196:142;;;:::o;4344:126::-;4394:9;4427:37;4458:5;4427:37;:::i;:::-;4414:50;;4344:126;;;:::o;4476:146::-;4546:9;4579:37;4610:5;4579:37;:::i;:::-;4566:50;;4476:146;;;:::o;4628:171::-;4735:57;4786:5;4735:57;:::i;:::-;4730:3;4723:70;4628:171;;:::o;4805:262::-;4918:4;4956:2;4945:9;4941:18;4933:26;;4969:91;5057:1;5046:9;5042:17;5033:6;4969:91;:::i;:::-;4805:262;;;;:::o;5073:222::-;5166:4;5204:2;5193:9;5189:18;5181:26;;5217:71;5285:1;5274:9;5270:17;5261:6;5217:71;:::i;:::-;5073:222;;;;:::o;5301:143::-;5358:5;5389:6;5383:13;5374:22;;5405:33;5432:5;5405:33;:::i;:::-;5301:143;;;;:::o;5450:351::-;5520:6;5569:2;5557:9;5548:7;5544:23;5540:32;5537:119;;;5575:79;;:::i;:::-;5537:119;5695:1;5720:64;5776:7;5767:6;5756:9;5752:22;5720:64;:::i;:::-;5710:74;;5666:128;5450:351;;;;:::o;5807:169::-;5891:11;5925:6;5920:3;5913:19;5965:4;5960:3;5956:14;5941:29;;5807:169;;;;:::o;5982:168::-;6122:20;6118:1;6110:6;6106:14;6099:44;5982:168;:::o;6156:366::-;6298:3;6319:67;6383:2;6378:3;6319:67;:::i;:::-;6312:74;;6395:93;6484:3;6395:93;:::i;:::-;6513:2;6508:3;6504:12;6497:19;;6156:366;;;:::o;6528:419::-;6694:4;6732:2;6721:9;6717:18;6709:26;;6781:9;6775:4;6771:20;6767:1;6756:9;6752:17;6745:47;6809:131;6935:4;6809:131;:::i;:::-;6801:139;;6528:419;;;:::o;6953:162::-;7093:14;7089:1;7081:6;7077:14;7070:38;6953:162;:::o;7121:366::-;7263:3;7284:67;7348:2;7343:3;7284:67;:::i;:::-;7277:74;;7360:93;7449:3;7360:93;:::i;:::-;7478:2;7473:3;7469:12;7462:19;;7121:366;;;:::o;7493:419::-;7659:4;7697:2;7686:9;7682:18;7674:26;;7746:9;7740:4;7736:20;7732:1;7721:9;7717:17;7710:47;7774:131;7900:4;7774:131;:::i;:::-;7766:139;;7493:419;;;:::o;7918:163::-;8058:15;8054:1;8046:6;8042:14;8035:39;7918:163;:::o;8087:366::-;8229:3;8250:67;8314:2;8309:3;8250:67;:::i;:::-;8243:74;;8326:93;8415:3;8326:93;:::i;:::-;8444:2;8439:3;8435:12;8428:19;;8087:366;;;:::o;8459:419::-;8625:4;8663:2;8652:9;8648:18;8640:26;;8712:9;8706:4;8702:20;8698:1;8687:9;8683:17;8676:47;8740:131;8866:4;8740:131;:::i;:::-;8732:139;;8459:419;;;:::o;8884:180::-;8932:77;8929:1;8922:88;9029:4;9026:1;9019:15;9053:4;9050:1;9043:15;9070:191;9110:3;9129:20;9147:1;9129:20;:::i;:::-;9124:25;;9163:20;9181:1;9163:20;:::i;:::-;9158:25;;9206:1;9203;9199:9;9192:16;;9227:3;9224:1;9221:10;9218:36;;;9234:18;;:::i;:::-;9218:36;9070:191;;;;:::o;9267:332::-;9388:4;9426:2;9415:9;9411:18;9403:26;;9439:71;9507:1;9496:9;9492:17;9483:6;9439:71;:::i;:::-;9520:72;9588:2;9577:9;9573:18;9564:6;9520:72;:::i;:::-;9267:332;;;;;:::o;9605:556::-;9644:7;9667:19;9684:1;9667:19;:::i;:::-;9662:24;;9700:19;9717:1;9700:19;:::i;:::-;9695:24;;9754:1;9751;9747:9;9776:29;9793:11;9776:29;:::i;:::-;9765:40;;9863:66;9860:1;9857:73;9853:1;9850;9846:9;9842:89;9839:115;;;9934:18;;:::i;:::-;9839:115;10104:1;10095:7;10090:16;10087:1;10084:23;10064:1;10057:9;10037:84;10014:140;;10134:18;;:::i;:::-;10014:140;9652:509;9605:556;;;;:::o;10167:375::-;10206:3;10225:19;10242:1;10225:19;:::i;:::-;10220:24;;10258:19;10275:1;10258:19;:::i;:::-;10253:24;;10300:1;10297;10293:9;10286:16;;10498:1;10493:3;10489:11;10482:19;10478:1;10475;10471:9;10467:35;10450:1;10445:3;10441:11;10436:1;10433;10429:9;10422:17;10418:35;10402:110;10399:136;;;10515:18;;:::i;:::-;10399:136;10167:375;;;;:::o;10548:224::-;10688:34;10684:1;10676:6;10672:14;10665:58;10757:7;10752:2;10744:6;10740:15;10733:32;10548:224;:::o;10778:366::-;10920:3;10941:67;11005:2;11000:3;10941:67;:::i;:::-;10934:74;;11017:93;11106:3;11017:93;:::i;:::-;11135:2;11130:3;11126:12;11119:19;;10778:366;;;:::o;11150:419::-;11316:4;11354:2;11343:9;11339:18;11331:26;;11403:9;11397:4;11393:20;11389:1;11378:9;11374:17;11367:47;11431:131;11557:4;11431:131;:::i;:::-;11423:139;;11150:419;;;:::o;11575:194::-;11615:4;11635:20;11653:1;11635:20;:::i;:::-;11630:25;;11669:20;11687:1;11669:20;:::i;:::-;11664:25;;11713:1;11710;11706:9;11698:17;;11737:1;11731:4;11728:11;11725:37;;;11742:18;;:::i;:::-;11725:37;11575:194;;;;:::o;11775:372::-;11814:4;11834:19;11851:1;11834:19;:::i;:::-;11829:24;;11867:19;11884:1;11867:19;:::i;:::-;11862:24;;11910:1;11907;11903:9;11895:17;;12104:1;12098:4;12094:12;12090:1;12087;12083:9;12079:28;12062:1;12056:4;12052:12;12047:1;12044;12040:9;12033:17;12029:36;12013:104;12010:130;;;12120:18;;:::i;:::-;12010:130;11775:372;;;;:::o;12153:332::-;12274:4;12312:2;12301:9;12297:18;12289:26;;12325:71;12393:1;12382:9;12378:17;12369:6;12325:71;:::i;:::-;12406:72;12474:2;12463:9;12459:18;12450:6;12406:72;:::i;:::-;12153:332;;;;;:::o;12491:174::-;12631:26;12627:1;12619:6;12615:14;12608:50;12491:174;:::o;12671:366::-;12813:3;12834:67;12898:2;12893:3;12834:67;:::i;:::-;12827:74;;12910:93;12999:3;12910:93;:::i;:::-;13028:2;13023:3;13019:12;13012:19;;12671:366;;;:::o;13043:419::-;13209:4;13247:2;13236:9;13232:18;13224:26;;13296:9;13290:4;13286:20;13282:1;13271:9;13267:17;13260:47;13324:131;13450:4;13324:131;:::i;:::-;13316:139;;13043:419;;;:::o;13468:174::-;13608:26;13604:1;13596:6;13592:14;13585:50;13468:174;:::o;13648:366::-;13790:3;13811:67;13875:2;13870:3;13811:67;:::i;:::-;13804:74;;13887:93;13976:3;13887:93;:::i;:::-;14005:2;14000:3;13996:12;13989:19;;13648:366;;;:::o;14020:419::-;14186:4;14224:2;14213:9;14209:18;14201:26;;14273:9;14267:4;14263:20;14259:1;14248:9;14244:17;14237:47;14301:131;14427:4;14301:131;:::i;:::-;14293:139;;14020:419;;;:::o;14445:233::-;14484:3;14507:24;14525:5;14507:24;:::i;:::-;14498:33;;14553:66;14546:5;14543:77;14540:103;;14623:18;;:::i;:::-;14540:103;14670:1;14663:5;14659:13;14652:20;;14445:233;;;:::o;14684:167::-;14824:19;14820:1;14812:6;14808:14;14801:43;14684:167;:::o;14857:366::-;14999:3;15020:67;15084:2;15079:3;15020:67;:::i;:::-;15013:74;;15096:93;15185:3;15096:93;:::i;:::-;15214:2;15209:3;15205:12;15198:19;;14857:366;;;:::o;15229:419::-;15395:4;15433:2;15422:9;15418:18;15410:26;;15482:9;15476:4;15472:20;15468:1;15457:9;15453:17;15446:47;15510:131;15636:4;15510:131;:::i;:::-;15502:139;;15229:419;;;:::o;15654:180::-;15702:77;15699:1;15692:88;15799:4;15796:1;15789:15;15823:4;15820:1;15813:15"},"methodIdentifiers":{"REPORT_REWARD()":"b12f55eb","REPORT_STAKE()":"5ff2c42c","VALIDATE_REWARD()":"5790411e","VALIDATE_STAKE()":"ed1957d9","finalizeReport(uint256)":"fa9c48b7","getVoteWeight(address)":"a730117e","reportCount()":"185c6f84","reports(uint256)":"c942adf7","revoke_report(uint256)":"ca93ef19","revoke_vote(uint256)":"6b38516f","stakedTokens(address)":"a5b39cfb","submitReport(uint256)":"f26eb277","token()":"fc0c546a","validate(uint256,int8)":"42530abd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"}],\"name\":\"ReportRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"VoteRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REPORT_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REPORT_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATE_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATE_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"}],\"name\":\"finalizeReport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVoteWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reportCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reports\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"net_votes\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"validated\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"}],\"name\":\"revoke_report\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"}],\"name\":\"revoke_vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"}],\"name\":\"submitReport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract CampusToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"},{\"internalType\":\"int8\",\"name\":\"vote\",\"type\":\"int8\"}],\"name\":\"validate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/participate.sol\":\"participate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdd0a585e22b0ee75d9b326c251df05a910d8edccab17e4db3cfd7e00f7169b84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6f23becda6cd87e9d96803e35647b3a8973dadc082b0d7344b0fd3232f83c25\",\"dweb:/ipfs/QmdXggVZu4S5eP7uAvW1STAxtfXnAaiUFB3LDU5ohQv6e9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x75d915918e62946caf04224552ec67cec8761941907c8a144c1ea8167856c430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://165246da467a540613d7ec3b2758eafdb724d87576088dde94483b02e8136353\",\"dweb:/ipfs/QmQp41YPLHyKAdy7MyMmTzBRaZhA6xxXMt1oUmfEss8bmv\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x79ee51693b808ffdb306266b04709183c403b04078211b149794bc11d6c3fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b360520e990c689b887ed508c6f6acff9309dc207c0f05ad8ebcacf4b98cb\",\"dweb:/ipfs/QmeXjWT5Z5X5UzMbiBd3MoEUnfNAtV8HpoasznLkq34JWZ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0xb2ac469a92e3980b87267eacabd4e470df6cf278858efa230f69c723316c138d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ce61d28f35bf80f21d884b285b4061c938e400a0d90d7a8176e2cacf29b5eaf\",\"dweb:/ipfs/Qmar9FHYkwMVvQYtDoeJFETryVwBPTPs1dxhvKG1AMah1c\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x077980096776135bbc9dd792d7bac26933c055854431d5015de62ad756ca86a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e233f83b0dd2c741dae729bbbe1177af49ce7d78185eb89657cae14444525b2a\",\"dweb:/ipfs/QmWR6XzkTNynXjhCFHkYMVTUoM9bjBNv3jorGTzzrgUnXW\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x4698a3b9e053c05db8466bddc85fe5732d4e52eeede6b03769dc0fe099998078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db853b48d7358744ec277afa884a0514c595d90933d497835b75738ade9586b4\",\"dweb:/ipfs/QmTRBWHtor5jHpheZDA3g5Kf5mPqBQi77X25Q1CQRrS2SJ\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbe22c37080f9052e0e18062a527a19f9354703ee48888c71baf0abd747a34a8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb85649fce273c8c19eeba7db292f92b6653263ae39f12e427a066b998c9cec4\",\"dweb:/ipfs/QmRaTEqA15siRJoiPCuvtzK29dgXxQu94n4JBabHUSFXXQ\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x312a8b2d6e47bdeffa1f275e000fd7a58c73a0687706c24f677fd019dfec10fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8f6a3338774e6d948e9ae84534d6bb2125cac94cfb8cf67e980284e5d2a923\",\"dweb:/ipfs/QmNmysmWKYvn1R8jVKhz6GNedzbDbB6G95hvVEJyCuqWDC\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x70d0d56812a450b9295367b992c591f809559673805fc7749ac9e67491c905b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://218fbb6cd38c6eaae3c1a013a0de481b7250a19845df788eeb6604c66e05b435\",\"dweb:/ipfs/QmQETgZDZyc8EimR5h3woEzWPVogKBNsj8Lhw5bQnvRoyg\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x6fc9a48c3d39d70e64acac472509822e001b9ca996653576efb17b19c56b38f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fb4a208e464691b05cc33477e138dc837372e8fe3192efee08094aa5fad4acc\",\"dweb:/ipfs/QmcLuyckN8xRPBNDVV9dqBn1FNQrN9R3GktDJSW3s7r2ts\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]},\"contracts/CampusToken.sol\":{\"keccak256\":\"0x965c02d9af82976c93e9497d79cd3872e7eecb2af7ba57210f5667fe6e369e0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59dd10344e98d1cc9ffaa3f5c6041f4abf49d360cb2a60e911f9a516f1892878\",\"dweb:/ipfs/Qmam54kfBubHPXhf5tSrKkW15GUXrLBM7vLSRdgVSftZnL\"]},\"contracts/participate.sol\":{\"keccak256\":\"0x81158a75b276a9c01812c309f3a4bca06c0ad91a4b57fa4b4e81cf2b7403dfda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36cfa0465c7162a95ae33db06bd8ee59d36a68afe04dd360da0ac9e69bca07be\",\"dweb:/ipfs/Qmd6qq33a5w27HVEuAiK3kaAVX9NTGrQ6tWdHWvNhFibnn\"]}},\"version\":1}"}}}}}